// This code conforms with the UFC specification version 2016.1.0
// and was automatically generated by FFC version 2016.1.0.
// 
// This code was generated with the following parameters:
// 
//   convert_exceptions_to_warnings: False
//   cpp_optimize:                   True
//   cpp_optimize_flags:             '-O2'
//   epsilon:                        1e-14
//   error_control:                  False
//   form_postfix:                   False
//   format:                         'ufc'
//   no-evaluate_basis_derivatives:  True
//   optimize:                       False
//   precision:                      15
//   quadrature_degree:              -1
//   quadrature_rule:                'auto'
//   representation:                 'auto'
//   split:                          False

#include "ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0.h"

// Based on https://gcc.gnu.org/wiki/Visibility
#if defined _WIN32 || defined __CYGWIN__
    #ifdef __GNUC__
        #define DLL_EXPORT __attribute__ ((dllexport))
    #else
        #define DLL_EXPORT __declspec(dllexport)
    #endif
#else
    #define DLL_EXPORT __attribute__ ((visibility ("default")))
#endif

class ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_0: public ufc::finite_element
{
public:

  ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_0();

  ~ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_0() override;

  const char * signature() const final override;

  ufc::shape cell_shape() const final override;

  std::size_t topological_dimension() const final override;

  std::size_t geometric_dimension() const final override;

  std::size_t space_dimension() const final override;

  std::size_t value_rank() const final override;

  std::size_t value_dimension(std::size_t i) const final override;

  std::size_t value_size() const final override;

  std::size_t reference_value_rank() const final override;

  std::size_t reference_value_dimension(std::size_t i) const final override;

  std::size_t reference_value_size() const final override;

  std::size_t degree() const final override;

  const char * family() const final override;

  static void _evaluate_basis(std::size_t i,
                              double * values,
                              const double * x,
                              const double * coordinate_dofs,
                              int cell_orientation);

  void evaluate_basis(std::size_t i,
                      double * values,
                      const double * x,
                      const double * coordinate_dofs,
                      int cell_orientation) const final override
  {
    _evaluate_basis(i, values, x, coordinate_dofs, cell_orientation);
  }

  static void _evaluate_basis_all(double * values,
                                  const double * x,
                                  const double * coordinate_dofs,
                                  int cell_orientation);

  void evaluate_basis_all(double * values,
                          const double * x,
                          const double * coordinate_dofs,
                          int cell_orientation) const final override
  {
    _evaluate_basis_all(values, x, coordinate_dofs, cell_orientation);
  }

  static void _evaluate_basis_derivatives(std::size_t i,
                                          std::size_t n,
                                          double * values,
                                          const double * x,
                                          const double * coordinate_dofs,
                                          int cell_orientation);

  void evaluate_basis_derivatives(std::size_t i,
                                  std::size_t n,
                                  double * values,
                                  const double * x,
                                  const double * coordinate_dofs,
                                  int cell_orientation) const final override
  {
    _evaluate_basis_derivatives(i, n, values, x, coordinate_dofs, cell_orientation);
  }

  static void _evaluate_basis_derivatives_all(std::size_t n,
                                              double * values,
                                              const double * x,
                                              const double * coordinate_dofs,
                                              int cell_orientation);

  void evaluate_basis_derivatives_all(std::size_t n,
                                      double * values,
                                      const double * x,
                                      const double * coordinate_dofs,
                                      int cell_orientation) const final override
  {
    _evaluate_basis_derivatives_all(n, values, x, coordinate_dofs, cell_orientation);
  }

  double evaluate_dof(std::size_t i,
                      const ufc::function& f,
                      const double * coordinate_dofs,
                      int cell_orientation,
                      const ufc::cell& c) const final override;

  void evaluate_dofs(double * values,
                     const ufc::function& f,
                     const double * coordinate_dofs,
                     int cell_orientation,
                     const ufc::cell& c) const final override;

  void interpolate_vertex_values(double * vertex_values,
                                 const double * dof_values,
                                 const double * coordinate_dofs,
                                 int cell_orientation,
                                 const ufc::cell& c) const final override;

  void tabulate_dof_coordinates(double * coordinates,
                                const double * coordinate_dofs) const final override;

  std::size_t num_sub_elements() const final override;

  ufc::finite_element * create_sub_element(std::size_t i) const final override;

  ufc::finite_element * create() const final override;

};

extern "C" DLL_EXPORT ufc::finite_element * create_ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_0()
{
  return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_0();
}

ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_0::ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_0() : ufc::finite_element()
{
    // Do nothing
}

ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_0::~ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_0()
{
    // Do nothing
}

const char * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_0::signature() const
{
    return "FiniteElement('Real', triangle, 0)";
}

ufc::shape ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_0::cell_shape() const
{
    return ufc::shape::triangle;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_0::topological_dimension() const
{
    return 2;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_0::geometric_dimension() const
{
    return 2;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_0::space_dimension() const
{
    return 1;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_0::value_rank() const
{
    return 0;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_0::value_dimension(std::size_t i) const
{
    return 1;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_0::value_size() const
{
    return 1;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_0::reference_value_rank() const
{
    return 0;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_0::reference_value_dimension(std::size_t i) const
{
    return 1;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_0::reference_value_size() const
{
    return 1;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_0::degree() const
{
    return 0;
}

const char * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_0::family() const
{
    return "Real";
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_0::_evaluate_basis(std::size_t i,
                                    double * values,
                                    const double * x,
                                    const double * coordinate_dofs,
                                    int cell_orientation)
{
    // Compute Jacobian
    double J[4];
    compute_jacobian_triangle_2d(J, coordinate_dofs);
    
    // Compute Jacobian inverse and determinant
    double K[4];
    double detJ;
    compute_jacobian_inverse_triangle_2d(K, detJ, J);
    
    
    // Compute constants
    
    // Get coordinates and map to the reference (FIAT) element
    
    // Reset values
    *values = 0.0;
    
    // Array of basisvalues
    double basisvalues[1] = {0.0};
    
    // Declare helper variables
    
    // Compute basisvalues
    basisvalues[0] = 1.0;
    
    // Table(s) of coefficients
    static const double coefficients0[1] = \
    {1.0};
    
    // Compute value(s)
    for (unsigned int r = 0; r < 1; r++)
    {
      *values += coefficients0[r]*basisvalues[r];
    } // end loop over 'r'
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_0::_evaluate_basis_all(double * values,
                                        const double * x,
                                        const double * coordinate_dofs,
                                        int cell_orientation)
{
    // Element is constant, calling evaluate_basis.
    _evaluate_basis(0, values, x, coordinate_dofs, cell_orientation);
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_0::_evaluate_basis_derivatives(std::size_t i,
                                                std::size_t n,
                                                double * values,
                                                const double * x,
                                                const double * coordinate_dofs,
                                                int cell_orientation)
{
throw std::runtime_error("// Function evaluate_basis_derivatives not generated (compiled with -fno-evaluate_basis_derivatives)");
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_0::_evaluate_basis_derivatives_all(std::size_t n,
                                                    double * values,
                                                    const double * x,
                                                    const double * coordinate_dofs,
                                                    int cell_orientation)
{
    // Element is constant, calling evaluate_basis_derivatives.
    _evaluate_basis_derivatives(0, n, values, x, coordinate_dofs, cell_orientation);
}

double ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_0::evaluate_dof(std::size_t i,
                                   const ufc::function& f,
                                   const double * coordinate_dofs,
                                   int cell_orientation,
                                   const ufc::cell& c) const
{
    // Declare variables for result of evaluation
    double vals[1];
    
    // Declare variable for physical coordinates
    double y[2];
    switch (i)
    {
    case 0:
      {
        y[0] = 0.333333333333333*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
      y[1] = 0.333333333333333*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    }
    
    return 0.0;
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_0::evaluate_dofs(double * values,
                                  const ufc::function& f,
                                  const double * coordinate_dofs,
                                  int cell_orientation,
                                  const ufc::cell& c) const
{
    // Declare variables for result of evaluation
    double vals[1];
    
    // Declare variable for physical coordinates
    double y[2];
    y[0] = 0.333333333333333*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    y[1] = 0.333333333333333*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[0] = vals[0];
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_0::interpolate_vertex_values(double * vertex_values,
                                              const double * dof_values,
                                              const double * coordinate_dofs,
                                              int cell_orientation,
                                              const ufc::cell& c) const
{
    // Evaluate function and change variables
    vertex_values[0] = dof_values[0];
    vertex_values[1] = dof_values[0];
    vertex_values[2] = dof_values[0];
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_0::tabulate_dof_coordinates(double * dof_coordinates,
                                             const double * coordinate_dofs) const
{
    dof_coordinates[0] = 0.333333333333333*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    dof_coordinates[1] = 0.333333333333333*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_0::num_sub_elements() const
{
    return 0;
}

ufc::finite_element * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_0::create_sub_element(std::size_t i) const
{
    return 0;
}

ufc::finite_element * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_0::create() const
{
    return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_0();
}


class ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_1: public ufc::finite_element
{
public:

  ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_1();

  ~ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_1() override;

  const char * signature() const final override;

  ufc::shape cell_shape() const final override;

  std::size_t topological_dimension() const final override;

  std::size_t geometric_dimension() const final override;

  std::size_t space_dimension() const final override;

  std::size_t value_rank() const final override;

  std::size_t value_dimension(std::size_t i) const final override;

  std::size_t value_size() const final override;

  std::size_t reference_value_rank() const final override;

  std::size_t reference_value_dimension(std::size_t i) const final override;

  std::size_t reference_value_size() const final override;

  std::size_t degree() const final override;

  const char * family() const final override;

  static void _evaluate_basis(std::size_t i,
                              double * values,
                              const double * x,
                              const double * coordinate_dofs,
                              int cell_orientation);

  void evaluate_basis(std::size_t i,
                      double * values,
                      const double * x,
                      const double * coordinate_dofs,
                      int cell_orientation) const final override
  {
    _evaluate_basis(i, values, x, coordinate_dofs, cell_orientation);
  }

  static void _evaluate_basis_all(double * values,
                                  const double * x,
                                  const double * coordinate_dofs,
                                  int cell_orientation);

  void evaluate_basis_all(double * values,
                          const double * x,
                          const double * coordinate_dofs,
                          int cell_orientation) const final override
  {
    _evaluate_basis_all(values, x, coordinate_dofs, cell_orientation);
  }

  static void _evaluate_basis_derivatives(std::size_t i,
                                          std::size_t n,
                                          double * values,
                                          const double * x,
                                          const double * coordinate_dofs,
                                          int cell_orientation);

  void evaluate_basis_derivatives(std::size_t i,
                                  std::size_t n,
                                  double * values,
                                  const double * x,
                                  const double * coordinate_dofs,
                                  int cell_orientation) const final override
  {
    _evaluate_basis_derivatives(i, n, values, x, coordinate_dofs, cell_orientation);
  }

  static void _evaluate_basis_derivatives_all(std::size_t n,
                                              double * values,
                                              const double * x,
                                              const double * coordinate_dofs,
                                              int cell_orientation);

  void evaluate_basis_derivatives_all(std::size_t n,
                                      double * values,
                                      const double * x,
                                      const double * coordinate_dofs,
                                      int cell_orientation) const final override
  {
    _evaluate_basis_derivatives_all(n, values, x, coordinate_dofs, cell_orientation);
  }

  double evaluate_dof(std::size_t i,
                      const ufc::function& f,
                      const double * coordinate_dofs,
                      int cell_orientation,
                      const ufc::cell& c) const final override;

  void evaluate_dofs(double * values,
                     const ufc::function& f,
                     const double * coordinate_dofs,
                     int cell_orientation,
                     const ufc::cell& c) const final override;

  void interpolate_vertex_values(double * vertex_values,
                                 const double * dof_values,
                                 const double * coordinate_dofs,
                                 int cell_orientation,
                                 const ufc::cell& c) const final override;

  void tabulate_dof_coordinates(double * coordinates,
                                const double * coordinate_dofs) const final override;

  std::size_t num_sub_elements() const final override;

  ufc::finite_element * create_sub_element(std::size_t i) const final override;

  ufc::finite_element * create() const final override;

};

extern "C" DLL_EXPORT ufc::finite_element * create_ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_1()
{
  return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_1();
}

ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_1::ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_1() : ufc::finite_element()
{
    // Do nothing
}

ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_1::~ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_1()
{
    // Do nothing
}

const char * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_1::signature() const
{
    return "VectorElement(FiniteElement('Real', triangle, 0), dim=2)";
}

ufc::shape ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_1::cell_shape() const
{
    return ufc::shape::triangle;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_1::topological_dimension() const
{
    return 2;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_1::geometric_dimension() const
{
    return 2;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_1::space_dimension() const
{
    return 2;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_1::value_rank() const
{
    return 1;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_1::value_dimension(std::size_t i) const
{
    switch (i)
    {
    case 0:
      {
        return 2;
        break;
      }
    }
    
    return 0;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_1::value_size() const
{
    return 2;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_1::reference_value_rank() const
{
    return 1;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_1::reference_value_dimension(std::size_t i) const
{
    switch (i)
    {
    case 0:
      {
        return 2;
        break;
      }
    }
    
    return 0;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_1::reference_value_size() const
{
    return 2;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_1::degree() const
{
    return 0;
}

const char * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_1::family() const
{
    return "Real";
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_1::_evaluate_basis(std::size_t i,
                                    double * values,
                                    const double * x,
                                    const double * coordinate_dofs,
                                    int cell_orientation)
{
    // Compute Jacobian
    double J[4];
    compute_jacobian_triangle_2d(J, coordinate_dofs);
    
    // Compute Jacobian inverse and determinant
    double K[4];
    double detJ;
    compute_jacobian_inverse_triangle_2d(K, detJ, J);
    
    
    // Compute constants
    
    // Get coordinates and map to the reference (FIAT) element
    
    // Reset values
    values[0] = 0.0;
    values[1] = 0.0;
    switch (i)
    {
    case 0:
      {
        
      // Array of basisvalues
      double basisvalues[1] = {0.0};
      
      // Declare helper variables
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      
      // Table(s) of coefficients
      static const double coefficients0[1] = \
      {1.0};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 1; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 1:
      {
        
      // Array of basisvalues
      double basisvalues[1] = {0.0};
      
      // Declare helper variables
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      
      // Table(s) of coefficients
      static const double coefficients0[1] = \
      {1.0};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 1; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    }
    
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_1::_evaluate_basis_all(double * values,
                                        const double * x,
                                        const double * coordinate_dofs,
                                        int cell_orientation)
{
    // Helper variable to hold values of a single dof.
    double dof_values[2] = {0.0, 0.0};
    
    // Loop dofs and call evaluate_basis
    for (unsigned int r = 0; r < 2; r++)
    {
      _evaluate_basis(r, dof_values, x, coordinate_dofs, cell_orientation);
      for (unsigned int s = 0; s < 2; s++)
      {
        values[r*2 + s] = dof_values[s];
      } // end loop over 's'
    } // end loop over 'r'
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_1::_evaluate_basis_derivatives(std::size_t i,
                                                std::size_t n,
                                                double * values,
                                                const double * x,
                                                const double * coordinate_dofs,
                                                int cell_orientation)
{
throw std::runtime_error("// Function evaluate_basis_derivatives not generated (compiled with -fno-evaluate_basis_derivatives)");
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_1::_evaluate_basis_derivatives_all(std::size_t n,
                                                    double * values,
                                                    const double * x,
                                                    const double * coordinate_dofs,
                                                    int cell_orientation)
{
    // Call evaluate_basis_all if order of derivatives is equal to zero.
    if (n == 0)
    {
      _evaluate_basis_all(values, x, coordinate_dofs, cell_orientation);
      return ;
    }
    
    // Compute number of derivatives.
    unsigned int num_derivatives = 1;
    for (unsigned int r = 0; r < n; r++)
    {
      num_derivatives *= 2;
    } // end loop over 'r'
    
    // Set values equal to zero.
    for (unsigned int r = 0; r < 2; r++)
    {
      for (unsigned int s = 0; s < 2*num_derivatives; s++)
      {
        values[r*2*num_derivatives + s] = 0.0;
      } // end loop over 's'
    } // end loop over 'r'
    
    // If order of derivatives is greater than the maximum polynomial degree, return zeros.
    if (n > 0)
    {
      return ;
    }
    
    // Helper variable to hold values of a single dof.
    double dof_values[2];
    for (unsigned int r = 0; r < 2; r++)
    {
      dof_values[r] = 0.0;
    } // end loop over 'r'
    
    // Loop dofs and call evaluate_basis_derivatives.
    for (unsigned int r = 0; r < 2; r++)
    {
      _evaluate_basis_derivatives(r, n, dof_values, x, coordinate_dofs, cell_orientation);
      for (unsigned int s = 0; s < 2*num_derivatives; s++)
      {
        values[r*2*num_derivatives + s] = dof_values[s];
      } // end loop over 's'
    } // end loop over 'r'
}

double ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_1::evaluate_dof(std::size_t i,
                                   const ufc::function& f,
                                   const double * coordinate_dofs,
                                   int cell_orientation,
                                   const ufc::cell& c) const
{
    // Declare variables for result of evaluation
    double vals[2];
    
    // Declare variable for physical coordinates
    double y[2];
    switch (i)
    {
    case 0:
      {
        y[0] = 0.333333333333333*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
      y[1] = 0.333333333333333*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 1:
      {
        y[0] = 0.333333333333333*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
      y[1] = 0.333333333333333*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    }
    
    return 0.0;
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_1::evaluate_dofs(double * values,
                                  const ufc::function& f,
                                  const double * coordinate_dofs,
                                  int cell_orientation,
                                  const ufc::cell& c) const
{
    // Declare variables for result of evaluation
    double vals[2];
    
    // Declare variable for physical coordinates
    double y[2];
    y[0] = 0.333333333333333*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    y[1] = 0.333333333333333*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[0] = vals[0];
    y[0] = 0.333333333333333*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    y[1] = 0.333333333333333*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[1] = vals[1];
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_1::interpolate_vertex_values(double * vertex_values,
                                              const double * dof_values,
                                              const double * coordinate_dofs,
                                              int cell_orientation,
                                              const ufc::cell& c) const
{
    // Evaluate function and change variables
    vertex_values[0] = dof_values[0];
    vertex_values[2] = dof_values[0];
    vertex_values[4] = dof_values[0];
    // Evaluate function and change variables
    vertex_values[1] = dof_values[1];
    vertex_values[3] = dof_values[1];
    vertex_values[5] = dof_values[1];
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_1::tabulate_dof_coordinates(double * dof_coordinates,
                                             const double * coordinate_dofs) const
{
    dof_coordinates[0] = 0.333333333333333*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    dof_coordinates[1] = 0.333333333333333*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
    dof_coordinates[2] = 0.333333333333333*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    dof_coordinates[3] = 0.333333333333333*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_1::num_sub_elements() const
{
    return 2;
}

ufc::finite_element * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_1::create_sub_element(std::size_t i) const
{
    switch (i)
    {
    case 0:
      {
        return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_0();
        break;
      }
    case 1:
      {
        return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_0();
        break;
      }
    }
    
    return 0;
}

ufc::finite_element * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_1::create() const
{
    return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_1();
}


class ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_2: public ufc::finite_element
{
public:

  ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_2();

  ~ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_2() override;

  const char * signature() const final override;

  ufc::shape cell_shape() const final override;

  std::size_t topological_dimension() const final override;

  std::size_t geometric_dimension() const final override;

  std::size_t space_dimension() const final override;

  std::size_t value_rank() const final override;

  std::size_t value_dimension(std::size_t i) const final override;

  std::size_t value_size() const final override;

  std::size_t reference_value_rank() const final override;

  std::size_t reference_value_dimension(std::size_t i) const final override;

  std::size_t reference_value_size() const final override;

  std::size_t degree() const final override;

  const char * family() const final override;

  static void _evaluate_basis(std::size_t i,
                              double * values,
                              const double * x,
                              const double * coordinate_dofs,
                              int cell_orientation);

  void evaluate_basis(std::size_t i,
                      double * values,
                      const double * x,
                      const double * coordinate_dofs,
                      int cell_orientation) const final override
  {
    _evaluate_basis(i, values, x, coordinate_dofs, cell_orientation);
  }

  static void _evaluate_basis_all(double * values,
                                  const double * x,
                                  const double * coordinate_dofs,
                                  int cell_orientation);

  void evaluate_basis_all(double * values,
                          const double * x,
                          const double * coordinate_dofs,
                          int cell_orientation) const final override
  {
    _evaluate_basis_all(values, x, coordinate_dofs, cell_orientation);
  }

  static void _evaluate_basis_derivatives(std::size_t i,
                                          std::size_t n,
                                          double * values,
                                          const double * x,
                                          const double * coordinate_dofs,
                                          int cell_orientation);

  void evaluate_basis_derivatives(std::size_t i,
                                  std::size_t n,
                                  double * values,
                                  const double * x,
                                  const double * coordinate_dofs,
                                  int cell_orientation) const final override
  {
    _evaluate_basis_derivatives(i, n, values, x, coordinate_dofs, cell_orientation);
  }

  static void _evaluate_basis_derivatives_all(std::size_t n,
                                              double * values,
                                              const double * x,
                                              const double * coordinate_dofs,
                                              int cell_orientation);

  void evaluate_basis_derivatives_all(std::size_t n,
                                      double * values,
                                      const double * x,
                                      const double * coordinate_dofs,
                                      int cell_orientation) const final override
  {
    _evaluate_basis_derivatives_all(n, values, x, coordinate_dofs, cell_orientation);
  }

  double evaluate_dof(std::size_t i,
                      const ufc::function& f,
                      const double * coordinate_dofs,
                      int cell_orientation,
                      const ufc::cell& c) const final override;

  void evaluate_dofs(double * values,
                     const ufc::function& f,
                     const double * coordinate_dofs,
                     int cell_orientation,
                     const ufc::cell& c) const final override;

  void interpolate_vertex_values(double * vertex_values,
                                 const double * dof_values,
                                 const double * coordinate_dofs,
                                 int cell_orientation,
                                 const ufc::cell& c) const final override;

  void tabulate_dof_coordinates(double * coordinates,
                                const double * coordinate_dofs) const final override;

  std::size_t num_sub_elements() const final override;

  ufc::finite_element * create_sub_element(std::size_t i) const final override;

  ufc::finite_element * create() const final override;

};

extern "C" DLL_EXPORT ufc::finite_element * create_ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_2()
{
  return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_2();
}

ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_2::ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_2() : ufc::finite_element()
{
    // Do nothing
}

ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_2::~ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_2()
{
    // Do nothing
}

const char * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_2::signature() const
{
    return "FiniteElement('Lagrange', triangle, 3)";
}

ufc::shape ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_2::cell_shape() const
{
    return ufc::shape::triangle;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_2::topological_dimension() const
{
    return 2;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_2::geometric_dimension() const
{
    return 2;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_2::space_dimension() const
{
    return 10;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_2::value_rank() const
{
    return 0;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_2::value_dimension(std::size_t i) const
{
    return 1;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_2::value_size() const
{
    return 1;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_2::reference_value_rank() const
{
    return 0;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_2::reference_value_dimension(std::size_t i) const
{
    return 1;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_2::reference_value_size() const
{
    return 1;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_2::degree() const
{
    return 3;
}

const char * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_2::family() const
{
    return "Lagrange";
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_2::_evaluate_basis(std::size_t i,
                                    double * values,
                                    const double * x,
                                    const double * coordinate_dofs,
                                    int cell_orientation)
{
    // Compute Jacobian
    double J[4];
    compute_jacobian_triangle_2d(J, coordinate_dofs);
    
    // Compute Jacobian inverse and determinant
    double K[4];
    double detJ;
    compute_jacobian_inverse_triangle_2d(K, detJ, J);
    
    
    // Compute constants
    const double C0 = coordinate_dofs[2] + coordinate_dofs[4];
    const double C1 = coordinate_dofs[3] + coordinate_dofs[5];
    
    // Get coordinates and map to the reference (FIAT) element
    double X = (J[1]*(C1 - 2.0*x[1]) + J[3]*(2.0*x[0] - C0)) / detJ;
    double Y = (J[0]*(2.0*x[1] - C1) + J[2]*(C0 - 2.0*x[0])) / detJ;
    
    // Reset values
    *values = 0.0;
    switch (i)
    {
    case 0:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.0471404520791031, -0.0288675134594813, -0.0166666666666667, 0.0782460796435952, 0.0606091526731326, 0.0349927106111883, -0.0601337794302955, -0.0508223195384204, -0.0393667994375868, -0.0227284322524248};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        *values += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 1:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.0471404520791031, 0.0288675134594812, -0.0166666666666666, 0.0782460796435952, -0.0606091526731327, 0.0349927106111883, 0.0601337794302955, -0.0508223195384204, 0.0393667994375868, -0.0227284322524248};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        *values += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 2:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.0471404520791033, 0.0, 0.0333333333333333, 0.0, 0.0, 0.104978131833565, 0.0, 0.0, 0.0, 0.090913729009699};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        *values += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 3:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, 0.259807621135332, -0.15, 0.117369119465393, 0.0606091526731326, -0.0787335988751736, 0.0, 0.101644639076841, -0.131222664791956, 0.090913729009699};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        *values += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 4:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, 0.0, 0.3, 0.0, 0.151522881682832, 0.0262445329583912, 0.0, 0.0, 0.131222664791956, -0.136370593514548};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        *values += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 5:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, -0.259807621135332, -0.15, 0.117369119465393, -0.0606091526731326, -0.0787335988751736, 0.0, 0.101644639076841, 0.131222664791956, 0.090913729009699};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        *values += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 6:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, 0.0, 0.3, 0.0, -0.151522881682832, 0.0262445329583912, 0.0, 0.0, -0.131222664791956, -0.136370593514548};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        *values += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 7:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, -0.259807621135332, -0.15, -0.0782460796435952, 0.090913729009699, 0.0962299541807677, 0.180401338290886, 0.0508223195384204, -0.0131222664791956, -0.0227284322524247};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        *values += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 8:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, 0.259807621135332, -0.15, -0.0782460796435952, -0.090913729009699, 0.0962299541807678, -0.180401338290886, 0.0508223195384204, 0.0131222664791956, -0.0227284322524247};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        *values += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 9:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.636396103067893, 0.0, 0.0, -0.234738238930785, 0.0, -0.262445329583912, 0.0, -0.203289278153681, 0.0, 0.090913729009699};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        *values += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    }
    
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_2::_evaluate_basis_all(double * values,
                                        const double * x,
                                        const double * coordinate_dofs,
                                        int cell_orientation)
{
    // Helper variable to hold values of a single dof.
    double dof_values = 0.0;
    
    // Loop dofs and call evaluate_basis
    for (unsigned int r = 0; r < 10; r++)
    {
      _evaluate_basis(r, &dof_values, x, coordinate_dofs, cell_orientation);
      values[r] = dof_values;
    } // end loop over 'r'
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_2::_evaluate_basis_derivatives(std::size_t i,
                                                std::size_t n,
                                                double * values,
                                                const double * x,
                                                const double * coordinate_dofs,
                                                int cell_orientation)
{
throw std::runtime_error("// Function evaluate_basis_derivatives not generated (compiled with -fno-evaluate_basis_derivatives)");
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_2::_evaluate_basis_derivatives_all(std::size_t n,
                                                    double * values,
                                                    const double * x,
                                                    const double * coordinate_dofs,
                                                    int cell_orientation)
{
    // Call evaluate_basis_all if order of derivatives is equal to zero.
    if (n == 0)
    {
      _evaluate_basis_all(values, x, coordinate_dofs, cell_orientation);
      return ;
    }
    
    // Compute number of derivatives.
    unsigned int num_derivatives = 1;
    for (unsigned int r = 0; r < n; r++)
    {
      num_derivatives *= 2;
    } // end loop over 'r'
    
    // Set values equal to zero.
    for (unsigned int r = 0; r < 10; r++)
    {
      for (unsigned int s = 0; s < num_derivatives; s++)
      {
        values[r*num_derivatives + s] = 0.0;
      } // end loop over 's'
    } // end loop over 'r'
    
    // If order of derivatives is greater than the maximum polynomial degree, return zeros.
    if (n > 3)
    {
      return ;
    }
    
    // Helper variable to hold values of a single dof.
    double dof_values[8];
    for (unsigned int r = 0; r < 8; r++)
    {
      dof_values[r] = 0.0;
    } // end loop over 'r'
    
    // Loop dofs and call evaluate_basis_derivatives.
    for (unsigned int r = 0; r < 10; r++)
    {
      _evaluate_basis_derivatives(r, n, dof_values, x, coordinate_dofs, cell_orientation);
      for (unsigned int s = 0; s < num_derivatives; s++)
      {
        values[r*num_derivatives + s] = dof_values[s];
      } // end loop over 's'
    } // end loop over 'r'
}

double ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_2::evaluate_dof(std::size_t i,
                                   const ufc::function& f,
                                   const double * coordinate_dofs,
                                   int cell_orientation,
                                   const ufc::cell& c) const
{
    // Declare variables for result of evaluation
    double vals[1];
    
    // Declare variable for physical coordinates
    double y[2];
    switch (i)
    {
    case 0:
      {
        y[0] = coordinate_dofs[0];
      y[1] = coordinate_dofs[1];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 1:
      {
        y[0] = coordinate_dofs[2];
      y[1] = coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 2:
      {
        y[0] = coordinate_dofs[4];
      y[1] = coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 3:
      {
        y[0] = 0.666666666666667*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
      y[1] = 0.666666666666667*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 4:
      {
        y[0] = 0.333333333333333*coordinate_dofs[2] + 0.666666666666667*coordinate_dofs[4];
      y[1] = 0.333333333333333*coordinate_dofs[3] + 0.666666666666667*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 5:
      {
        y[0] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[4];
      y[1] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 6:
      {
        y[0] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[4];
      y[1] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 7:
      {
        y[0] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2];
      y[1] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 8:
      {
        y[0] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[2];
      y[1] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 9:
      {
        y[0] = 0.333333333333333*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
      y[1] = 0.333333333333333*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    }
    
    return 0.0;
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_2::evaluate_dofs(double * values,
                                  const ufc::function& f,
                                  const double * coordinate_dofs,
                                  int cell_orientation,
                                  const ufc::cell& c) const
{
    // Declare variables for result of evaluation
    double vals[1];
    
    // Declare variable for physical coordinates
    double y[2];
    y[0] = coordinate_dofs[0];
    y[1] = coordinate_dofs[1];
    f.evaluate(vals, y, c);
    values[0] = vals[0];
    y[0] = coordinate_dofs[2];
    y[1] = coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[1] = vals[0];
    y[0] = coordinate_dofs[4];
    y[1] = coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[2] = vals[0];
    y[0] = 0.666666666666667*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    y[1] = 0.666666666666667*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[3] = vals[0];
    y[0] = 0.333333333333333*coordinate_dofs[2] + 0.666666666666667*coordinate_dofs[4];
    y[1] = 0.333333333333333*coordinate_dofs[3] + 0.666666666666667*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[4] = vals[0];
    y[0] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[4];
    y[1] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[5] = vals[0];
    y[0] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[4];
    y[1] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[6] = vals[0];
    y[0] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2];
    y[1] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[7] = vals[0];
    y[0] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[2];
    y[1] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[8] = vals[0];
    y[0] = 0.333333333333333*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    y[1] = 0.333333333333333*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[9] = vals[0];
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_2::interpolate_vertex_values(double * vertex_values,
                                              const double * dof_values,
                                              const double * coordinate_dofs,
                                              int cell_orientation,
                                              const ufc::cell& c) const
{
    // Evaluate function and change variables
    vertex_values[0] = dof_values[0];
    vertex_values[1] = dof_values[1];
    vertex_values[2] = dof_values[2];
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_2::tabulate_dof_coordinates(double * dof_coordinates,
                                             const double * coordinate_dofs) const
{
    dof_coordinates[0] = coordinate_dofs[0];
    dof_coordinates[1] = coordinate_dofs[1];
    dof_coordinates[2] = coordinate_dofs[2];
    dof_coordinates[3] = coordinate_dofs[3];
    dof_coordinates[4] = coordinate_dofs[4];
    dof_coordinates[5] = coordinate_dofs[5];
    dof_coordinates[6] = 0.666666666666667*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    dof_coordinates[7] = 0.666666666666667*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
    dof_coordinates[8] = 0.333333333333333*coordinate_dofs[2] + 0.666666666666667*coordinate_dofs[4];
    dof_coordinates[9] = 0.333333333333333*coordinate_dofs[3] + 0.666666666666667*coordinate_dofs[5];
    dof_coordinates[10] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[4];
    dof_coordinates[11] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[5];
    dof_coordinates[12] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[4];
    dof_coordinates[13] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[5];
    dof_coordinates[14] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2];
    dof_coordinates[15] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3];
    dof_coordinates[16] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[2];
    dof_coordinates[17] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[3];
    dof_coordinates[18] = 0.333333333333333*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    dof_coordinates[19] = 0.333333333333333*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_2::num_sub_elements() const
{
    return 0;
}

ufc::finite_element * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_2::create_sub_element(std::size_t i) const
{
    return 0;
}

ufc::finite_element * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_2::create() const
{
    return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_2();
}


class ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_3: public ufc::finite_element
{
public:

  ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_3();

  ~ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_3() override;

  const char * signature() const final override;

  ufc::shape cell_shape() const final override;

  std::size_t topological_dimension() const final override;

  std::size_t geometric_dimension() const final override;

  std::size_t space_dimension() const final override;

  std::size_t value_rank() const final override;

  std::size_t value_dimension(std::size_t i) const final override;

  std::size_t value_size() const final override;

  std::size_t reference_value_rank() const final override;

  std::size_t reference_value_dimension(std::size_t i) const final override;

  std::size_t reference_value_size() const final override;

  std::size_t degree() const final override;

  const char * family() const final override;

  static void _evaluate_basis(std::size_t i,
                              double * values,
                              const double * x,
                              const double * coordinate_dofs,
                              int cell_orientation);

  void evaluate_basis(std::size_t i,
                      double * values,
                      const double * x,
                      const double * coordinate_dofs,
                      int cell_orientation) const final override
  {
    _evaluate_basis(i, values, x, coordinate_dofs, cell_orientation);
  }

  static void _evaluate_basis_all(double * values,
                                  const double * x,
                                  const double * coordinate_dofs,
                                  int cell_orientation);

  void evaluate_basis_all(double * values,
                          const double * x,
                          const double * coordinate_dofs,
                          int cell_orientation) const final override
  {
    _evaluate_basis_all(values, x, coordinate_dofs, cell_orientation);
  }

  static void _evaluate_basis_derivatives(std::size_t i,
                                          std::size_t n,
                                          double * values,
                                          const double * x,
                                          const double * coordinate_dofs,
                                          int cell_orientation);

  void evaluate_basis_derivatives(std::size_t i,
                                  std::size_t n,
                                  double * values,
                                  const double * x,
                                  const double * coordinate_dofs,
                                  int cell_orientation) const final override
  {
    _evaluate_basis_derivatives(i, n, values, x, coordinate_dofs, cell_orientation);
  }

  static void _evaluate_basis_derivatives_all(std::size_t n,
                                              double * values,
                                              const double * x,
                                              const double * coordinate_dofs,
                                              int cell_orientation);

  void evaluate_basis_derivatives_all(std::size_t n,
                                      double * values,
                                      const double * x,
                                      const double * coordinate_dofs,
                                      int cell_orientation) const final override
  {
    _evaluate_basis_derivatives_all(n, values, x, coordinate_dofs, cell_orientation);
  }

  double evaluate_dof(std::size_t i,
                      const ufc::function& f,
                      const double * coordinate_dofs,
                      int cell_orientation,
                      const ufc::cell& c) const final override;

  void evaluate_dofs(double * values,
                     const ufc::function& f,
                     const double * coordinate_dofs,
                     int cell_orientation,
                     const ufc::cell& c) const final override;

  void interpolate_vertex_values(double * vertex_values,
                                 const double * dof_values,
                                 const double * coordinate_dofs,
                                 int cell_orientation,
                                 const ufc::cell& c) const final override;

  void tabulate_dof_coordinates(double * coordinates,
                                const double * coordinate_dofs) const final override;

  std::size_t num_sub_elements() const final override;

  ufc::finite_element * create_sub_element(std::size_t i) const final override;

  ufc::finite_element * create() const final override;

};

extern "C" DLL_EXPORT ufc::finite_element * create_ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_3()
{
  return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_3();
}

ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_3::ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_3() : ufc::finite_element()
{
    // Do nothing
}

ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_3::~ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_3()
{
    // Do nothing
}

const char * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_3::signature() const
{
    return "VectorElement(FiniteElement('Lagrange', triangle, 3), dim=2)";
}

ufc::shape ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_3::cell_shape() const
{
    return ufc::shape::triangle;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_3::topological_dimension() const
{
    return 2;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_3::geometric_dimension() const
{
    return 2;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_3::space_dimension() const
{
    return 20;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_3::value_rank() const
{
    return 1;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_3::value_dimension(std::size_t i) const
{
    switch (i)
    {
    case 0:
      {
        return 2;
        break;
      }
    }
    
    return 0;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_3::value_size() const
{
    return 2;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_3::reference_value_rank() const
{
    return 1;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_3::reference_value_dimension(std::size_t i) const
{
    switch (i)
    {
    case 0:
      {
        return 2;
        break;
      }
    }
    
    return 0;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_3::reference_value_size() const
{
    return 2;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_3::degree() const
{
    return 3;
}

const char * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_3::family() const
{
    return "Lagrange";
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_3::_evaluate_basis(std::size_t i,
                                    double * values,
                                    const double * x,
                                    const double * coordinate_dofs,
                                    int cell_orientation)
{
    // Compute Jacobian
    double J[4];
    compute_jacobian_triangle_2d(J, coordinate_dofs);
    
    // Compute Jacobian inverse and determinant
    double K[4];
    double detJ;
    compute_jacobian_inverse_triangle_2d(K, detJ, J);
    
    
    // Compute constants
    const double C0 = coordinate_dofs[2] + coordinate_dofs[4];
    const double C1 = coordinate_dofs[3] + coordinate_dofs[5];
    
    // Get coordinates and map to the reference (FIAT) element
    double X = (J[1]*(C1 - 2.0*x[1]) + J[3]*(2.0*x[0] - C0)) / detJ;
    double Y = (J[0]*(2.0*x[1] - C1) + J[2]*(C0 - 2.0*x[0])) / detJ;
    
    // Reset values
    values[0] = 0.0;
    values[1] = 0.0;
    switch (i)
    {
    case 0:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.0471404520791031, -0.0288675134594813, -0.0166666666666667, 0.0782460796435952, 0.0606091526731326, 0.0349927106111883, -0.0601337794302955, -0.0508223195384204, -0.0393667994375868, -0.0227284322524248};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 1:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.0471404520791031, 0.0288675134594812, -0.0166666666666666, 0.0782460796435952, -0.0606091526731327, 0.0349927106111883, 0.0601337794302955, -0.0508223195384204, 0.0393667994375868, -0.0227284322524248};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 2:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.0471404520791033, 0.0, 0.0333333333333333, 0.0, 0.0, 0.104978131833565, 0.0, 0.0, 0.0, 0.090913729009699};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 3:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, 0.259807621135332, -0.15, 0.117369119465393, 0.0606091526731326, -0.0787335988751736, 0.0, 0.101644639076841, -0.131222664791956, 0.090913729009699};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 4:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, 0.0, 0.3, 0.0, 0.151522881682832, 0.0262445329583912, 0.0, 0.0, 0.131222664791956, -0.136370593514548};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 5:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, -0.259807621135332, -0.15, 0.117369119465393, -0.0606091526731326, -0.0787335988751736, 0.0, 0.101644639076841, 0.131222664791956, 0.090913729009699};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 6:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, 0.0, 0.3, 0.0, -0.151522881682832, 0.0262445329583912, 0.0, 0.0, -0.131222664791956, -0.136370593514548};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 7:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, -0.259807621135332, -0.15, -0.0782460796435952, 0.090913729009699, 0.0962299541807677, 0.180401338290886, 0.0508223195384204, -0.0131222664791956, -0.0227284322524247};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 8:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, 0.259807621135332, -0.15, -0.0782460796435952, -0.090913729009699, 0.0962299541807678, -0.180401338290886, 0.0508223195384204, 0.0131222664791956, -0.0227284322524247};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 9:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.636396103067893, 0.0, 0.0, -0.234738238930785, 0.0, -0.262445329583912, 0.0, -0.203289278153681, 0.0, 0.090913729009699};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 10:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.0471404520791031, -0.0288675134594813, -0.0166666666666667, 0.0782460796435952, 0.0606091526731326, 0.0349927106111883, -0.0601337794302955, -0.0508223195384204, -0.0393667994375868, -0.0227284322524248};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 11:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.0471404520791031, 0.0288675134594812, -0.0166666666666666, 0.0782460796435952, -0.0606091526731327, 0.0349927106111883, 0.0601337794302955, -0.0508223195384204, 0.0393667994375868, -0.0227284322524248};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 12:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.0471404520791033, 0.0, 0.0333333333333333, 0.0, 0.0, 0.104978131833565, 0.0, 0.0, 0.0, 0.090913729009699};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 13:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, 0.259807621135332, -0.15, 0.117369119465393, 0.0606091526731326, -0.0787335988751736, 0.0, 0.101644639076841, -0.131222664791956, 0.090913729009699};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 14:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, 0.0, 0.3, 0.0, 0.151522881682832, 0.0262445329583912, 0.0, 0.0, 0.131222664791956, -0.136370593514548};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 15:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, -0.259807621135332, -0.15, 0.117369119465393, -0.0606091526731326, -0.0787335988751736, 0.0, 0.101644639076841, 0.131222664791956, 0.090913729009699};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 16:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, 0.0, 0.3, 0.0, -0.151522881682832, 0.0262445329583912, 0.0, 0.0, -0.131222664791956, -0.136370593514548};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 17:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, -0.259807621135332, -0.15, -0.0782460796435952, 0.090913729009699, 0.0962299541807677, 0.180401338290886, 0.0508223195384204, -0.0131222664791956, -0.0227284322524247};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 18:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, 0.259807621135332, -0.15, -0.0782460796435952, -0.090913729009699, 0.0962299541807678, -0.180401338290886, 0.0508223195384204, 0.0131222664791956, -0.0227284322524247};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 19:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.636396103067893, 0.0, 0.0, -0.234738238930785, 0.0, -0.262445329583912, 0.0, -0.203289278153681, 0.0, 0.090913729009699};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    }
    
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_3::_evaluate_basis_all(double * values,
                                        const double * x,
                                        const double * coordinate_dofs,
                                        int cell_orientation)
{
    // Helper variable to hold values of a single dof.
    double dof_values[2] = {0.0, 0.0};
    
    // Loop dofs and call evaluate_basis
    for (unsigned int r = 0; r < 20; r++)
    {
      _evaluate_basis(r, dof_values, x, coordinate_dofs, cell_orientation);
      for (unsigned int s = 0; s < 2; s++)
      {
        values[r*2 + s] = dof_values[s];
      } // end loop over 's'
    } // end loop over 'r'
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_3::_evaluate_basis_derivatives(std::size_t i,
                                                std::size_t n,
                                                double * values,
                                                const double * x,
                                                const double * coordinate_dofs,
                                                int cell_orientation)
{
throw std::runtime_error("// Function evaluate_basis_derivatives not generated (compiled with -fno-evaluate_basis_derivatives)");
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_3::_evaluate_basis_derivatives_all(std::size_t n,
                                                    double * values,
                                                    const double * x,
                                                    const double * coordinate_dofs,
                                                    int cell_orientation)
{
    // Call evaluate_basis_all if order of derivatives is equal to zero.
    if (n == 0)
    {
      _evaluate_basis_all(values, x, coordinate_dofs, cell_orientation);
      return ;
    }
    
    // Compute number of derivatives.
    unsigned int num_derivatives = 1;
    for (unsigned int r = 0; r < n; r++)
    {
      num_derivatives *= 2;
    } // end loop over 'r'
    
    // Set values equal to zero.
    for (unsigned int r = 0; r < 20; r++)
    {
      for (unsigned int s = 0; s < 2*num_derivatives; s++)
      {
        values[r*2*num_derivatives + s] = 0.0;
      } // end loop over 's'
    } // end loop over 'r'
    
    // If order of derivatives is greater than the maximum polynomial degree, return zeros.
    if (n > 3)
    {
      return ;
    }
    
    // Helper variable to hold values of a single dof.
    double dof_values[16];
    for (unsigned int r = 0; r < 16; r++)
    {
      dof_values[r] = 0.0;
    } // end loop over 'r'
    
    // Loop dofs and call evaluate_basis_derivatives.
    for (unsigned int r = 0; r < 20; r++)
    {
      _evaluate_basis_derivatives(r, n, dof_values, x, coordinate_dofs, cell_orientation);
      for (unsigned int s = 0; s < 2*num_derivatives; s++)
      {
        values[r*2*num_derivatives + s] = dof_values[s];
      } // end loop over 's'
    } // end loop over 'r'
}

double ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_3::evaluate_dof(std::size_t i,
                                   const ufc::function& f,
                                   const double * coordinate_dofs,
                                   int cell_orientation,
                                   const ufc::cell& c) const
{
    // Declare variables for result of evaluation
    double vals[2];
    
    // Declare variable for physical coordinates
    double y[2];
    switch (i)
    {
    case 0:
      {
        y[0] = coordinate_dofs[0];
      y[1] = coordinate_dofs[1];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 1:
      {
        y[0] = coordinate_dofs[2];
      y[1] = coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 2:
      {
        y[0] = coordinate_dofs[4];
      y[1] = coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 3:
      {
        y[0] = 0.666666666666667*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
      y[1] = 0.666666666666667*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 4:
      {
        y[0] = 0.333333333333333*coordinate_dofs[2] + 0.666666666666667*coordinate_dofs[4];
      y[1] = 0.333333333333333*coordinate_dofs[3] + 0.666666666666667*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 5:
      {
        y[0] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[4];
      y[1] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 6:
      {
        y[0] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[4];
      y[1] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 7:
      {
        y[0] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2];
      y[1] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 8:
      {
        y[0] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[2];
      y[1] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 9:
      {
        y[0] = 0.333333333333333*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
      y[1] = 0.333333333333333*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 10:
      {
        y[0] = coordinate_dofs[0];
      y[1] = coordinate_dofs[1];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    case 11:
      {
        y[0] = coordinate_dofs[2];
      y[1] = coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    case 12:
      {
        y[0] = coordinate_dofs[4];
      y[1] = coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    case 13:
      {
        y[0] = 0.666666666666667*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
      y[1] = 0.666666666666667*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    case 14:
      {
        y[0] = 0.333333333333333*coordinate_dofs[2] + 0.666666666666667*coordinate_dofs[4];
      y[1] = 0.333333333333333*coordinate_dofs[3] + 0.666666666666667*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    case 15:
      {
        y[0] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[4];
      y[1] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    case 16:
      {
        y[0] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[4];
      y[1] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    case 17:
      {
        y[0] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2];
      y[1] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    case 18:
      {
        y[0] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[2];
      y[1] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    case 19:
      {
        y[0] = 0.333333333333333*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
      y[1] = 0.333333333333333*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    }
    
    return 0.0;
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_3::evaluate_dofs(double * values,
                                  const ufc::function& f,
                                  const double * coordinate_dofs,
                                  int cell_orientation,
                                  const ufc::cell& c) const
{
    // Declare variables for result of evaluation
    double vals[2];
    
    // Declare variable for physical coordinates
    double y[2];
    y[0] = coordinate_dofs[0];
    y[1] = coordinate_dofs[1];
    f.evaluate(vals, y, c);
    values[0] = vals[0];
    y[0] = coordinate_dofs[2];
    y[1] = coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[1] = vals[0];
    y[0] = coordinate_dofs[4];
    y[1] = coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[2] = vals[0];
    y[0] = 0.666666666666667*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    y[1] = 0.666666666666667*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[3] = vals[0];
    y[0] = 0.333333333333333*coordinate_dofs[2] + 0.666666666666667*coordinate_dofs[4];
    y[1] = 0.333333333333333*coordinate_dofs[3] + 0.666666666666667*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[4] = vals[0];
    y[0] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[4];
    y[1] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[5] = vals[0];
    y[0] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[4];
    y[1] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[6] = vals[0];
    y[0] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2];
    y[1] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[7] = vals[0];
    y[0] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[2];
    y[1] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[8] = vals[0];
    y[0] = 0.333333333333333*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    y[1] = 0.333333333333333*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[9] = vals[0];
    y[0] = coordinate_dofs[0];
    y[1] = coordinate_dofs[1];
    f.evaluate(vals, y, c);
    values[10] = vals[1];
    y[0] = coordinate_dofs[2];
    y[1] = coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[11] = vals[1];
    y[0] = coordinate_dofs[4];
    y[1] = coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[12] = vals[1];
    y[0] = 0.666666666666667*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    y[1] = 0.666666666666667*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[13] = vals[1];
    y[0] = 0.333333333333333*coordinate_dofs[2] + 0.666666666666667*coordinate_dofs[4];
    y[1] = 0.333333333333333*coordinate_dofs[3] + 0.666666666666667*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[14] = vals[1];
    y[0] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[4];
    y[1] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[15] = vals[1];
    y[0] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[4];
    y[1] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[16] = vals[1];
    y[0] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2];
    y[1] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[17] = vals[1];
    y[0] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[2];
    y[1] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[18] = vals[1];
    y[0] = 0.333333333333333*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    y[1] = 0.333333333333333*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[19] = vals[1];
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_3::interpolate_vertex_values(double * vertex_values,
                                              const double * dof_values,
                                              const double * coordinate_dofs,
                                              int cell_orientation,
                                              const ufc::cell& c) const
{
    // Evaluate function and change variables
    vertex_values[0] = dof_values[0];
    vertex_values[2] = dof_values[1];
    vertex_values[4] = dof_values[2];
    // Evaluate function and change variables
    vertex_values[1] = dof_values[10];
    vertex_values[3] = dof_values[11];
    vertex_values[5] = dof_values[12];
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_3::tabulate_dof_coordinates(double * dof_coordinates,
                                             const double * coordinate_dofs) const
{
    dof_coordinates[0] = coordinate_dofs[0];
    dof_coordinates[1] = coordinate_dofs[1];
    dof_coordinates[2] = coordinate_dofs[2];
    dof_coordinates[3] = coordinate_dofs[3];
    dof_coordinates[4] = coordinate_dofs[4];
    dof_coordinates[5] = coordinate_dofs[5];
    dof_coordinates[6] = 0.666666666666667*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    dof_coordinates[7] = 0.666666666666667*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
    dof_coordinates[8] = 0.333333333333333*coordinate_dofs[2] + 0.666666666666667*coordinate_dofs[4];
    dof_coordinates[9] = 0.333333333333333*coordinate_dofs[3] + 0.666666666666667*coordinate_dofs[5];
    dof_coordinates[10] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[4];
    dof_coordinates[11] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[5];
    dof_coordinates[12] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[4];
    dof_coordinates[13] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[5];
    dof_coordinates[14] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2];
    dof_coordinates[15] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3];
    dof_coordinates[16] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[2];
    dof_coordinates[17] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[3];
    dof_coordinates[18] = 0.333333333333333*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    dof_coordinates[19] = 0.333333333333333*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
    dof_coordinates[20] = coordinate_dofs[0];
    dof_coordinates[21] = coordinate_dofs[1];
    dof_coordinates[22] = coordinate_dofs[2];
    dof_coordinates[23] = coordinate_dofs[3];
    dof_coordinates[24] = coordinate_dofs[4];
    dof_coordinates[25] = coordinate_dofs[5];
    dof_coordinates[26] = 0.666666666666667*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    dof_coordinates[27] = 0.666666666666667*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
    dof_coordinates[28] = 0.333333333333333*coordinate_dofs[2] + 0.666666666666667*coordinate_dofs[4];
    dof_coordinates[29] = 0.333333333333333*coordinate_dofs[3] + 0.666666666666667*coordinate_dofs[5];
    dof_coordinates[30] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[4];
    dof_coordinates[31] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[5];
    dof_coordinates[32] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[4];
    dof_coordinates[33] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[5];
    dof_coordinates[34] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2];
    dof_coordinates[35] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3];
    dof_coordinates[36] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[2];
    dof_coordinates[37] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[3];
    dof_coordinates[38] = 0.333333333333333*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    dof_coordinates[39] = 0.333333333333333*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_3::num_sub_elements() const
{
    return 2;
}

ufc::finite_element * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_3::create_sub_element(std::size_t i) const
{
    switch (i)
    {
    case 0:
      {
        return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_2();
        break;
      }
    case 1:
      {
        return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_2();
        break;
      }
    }
    
    return 0;
}

ufc::finite_element * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_3::create() const
{
    return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_3();
}


class ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_4: public ufc::finite_element
{
public:

  ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_4();

  ~ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_4() override;

  const char * signature() const final override;

  ufc::shape cell_shape() const final override;

  std::size_t topological_dimension() const final override;

  std::size_t geometric_dimension() const final override;

  std::size_t space_dimension() const final override;

  std::size_t value_rank() const final override;

  std::size_t value_dimension(std::size_t i) const final override;

  std::size_t value_size() const final override;

  std::size_t reference_value_rank() const final override;

  std::size_t reference_value_dimension(std::size_t i) const final override;

  std::size_t reference_value_size() const final override;

  std::size_t degree() const final override;

  const char * family() const final override;

  static void _evaluate_basis(std::size_t i,
                              double * values,
                              const double * x,
                              const double * coordinate_dofs,
                              int cell_orientation);

  void evaluate_basis(std::size_t i,
                      double * values,
                      const double * x,
                      const double * coordinate_dofs,
                      int cell_orientation) const final override
  {
    _evaluate_basis(i, values, x, coordinate_dofs, cell_orientation);
  }

  static void _evaluate_basis_all(double * values,
                                  const double * x,
                                  const double * coordinate_dofs,
                                  int cell_orientation);

  void evaluate_basis_all(double * values,
                          const double * x,
                          const double * coordinate_dofs,
                          int cell_orientation) const final override
  {
    _evaluate_basis_all(values, x, coordinate_dofs, cell_orientation);
  }

  static void _evaluate_basis_derivatives(std::size_t i,
                                          std::size_t n,
                                          double * values,
                                          const double * x,
                                          const double * coordinate_dofs,
                                          int cell_orientation);

  void evaluate_basis_derivatives(std::size_t i,
                                  std::size_t n,
                                  double * values,
                                  const double * x,
                                  const double * coordinate_dofs,
                                  int cell_orientation) const final override
  {
    _evaluate_basis_derivatives(i, n, values, x, coordinate_dofs, cell_orientation);
  }

  static void _evaluate_basis_derivatives_all(std::size_t n,
                                              double * values,
                                              const double * x,
                                              const double * coordinate_dofs,
                                              int cell_orientation);

  void evaluate_basis_derivatives_all(std::size_t n,
                                      double * values,
                                      const double * x,
                                      const double * coordinate_dofs,
                                      int cell_orientation) const final override
  {
    _evaluate_basis_derivatives_all(n, values, x, coordinate_dofs, cell_orientation);
  }

  double evaluate_dof(std::size_t i,
                      const ufc::function& f,
                      const double * coordinate_dofs,
                      int cell_orientation,
                      const ufc::cell& c) const final override;

  void evaluate_dofs(double * values,
                     const ufc::function& f,
                     const double * coordinate_dofs,
                     int cell_orientation,
                     const ufc::cell& c) const final override;

  void interpolate_vertex_values(double * vertex_values,
                                 const double * dof_values,
                                 const double * coordinate_dofs,
                                 int cell_orientation,
                                 const ufc::cell& c) const final override;

  void tabulate_dof_coordinates(double * coordinates,
                                const double * coordinate_dofs) const final override;

  std::size_t num_sub_elements() const final override;

  ufc::finite_element * create_sub_element(std::size_t i) const final override;

  ufc::finite_element * create() const final override;

};

extern "C" DLL_EXPORT ufc::finite_element * create_ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_4()
{
  return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_4();
}

ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_4::ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_4() : ufc::finite_element()
{
    // Do nothing
}

ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_4::~ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_4()
{
    // Do nothing
}

const char * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_4::signature() const
{
    return "FiniteElement('Lagrange', triangle, 1)";
}

ufc::shape ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_4::cell_shape() const
{
    return ufc::shape::triangle;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_4::topological_dimension() const
{
    return 2;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_4::geometric_dimension() const
{
    return 2;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_4::space_dimension() const
{
    return 3;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_4::value_rank() const
{
    return 0;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_4::value_dimension(std::size_t i) const
{
    return 1;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_4::value_size() const
{
    return 1;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_4::reference_value_rank() const
{
    return 0;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_4::reference_value_dimension(std::size_t i) const
{
    return 1;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_4::reference_value_size() const
{
    return 1;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_4::degree() const
{
    return 1;
}

const char * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_4::family() const
{
    return "Lagrange";
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_4::_evaluate_basis(std::size_t i,
                                    double * values,
                                    const double * x,
                                    const double * coordinate_dofs,
                                    int cell_orientation)
{
    // Compute Jacobian
    double J[4];
    compute_jacobian_triangle_2d(J, coordinate_dofs);
    
    // Compute Jacobian inverse and determinant
    double K[4];
    double detJ;
    compute_jacobian_inverse_triangle_2d(K, detJ, J);
    
    
    // Compute constants
    const double C0 = coordinate_dofs[2] + coordinate_dofs[4];
    const double C1 = coordinate_dofs[3] + coordinate_dofs[5];
    
    // Get coordinates and map to the reference (FIAT) element
    double X = (J[1]*(C1 - 2.0*x[1]) + J[3]*(2.0*x[0] - C0)) / detJ;
    double Y = (J[0]*(2.0*x[1] - C1) + J[2]*(C0 - 2.0*x[0])) / detJ;
    
    // Reset values
    *values = 0.0;
    switch (i)
    {
    case 0:
      {
        
      // Array of basisvalues
      double basisvalues[3] = {0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[1] *= std::sqrt(3.0);
      
      // Table(s) of coefficients
      static const double coefficients0[3] = \
      {0.471404520791032, -0.288675134594813, -0.166666666666667};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 3; r++)
      {
        *values += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 1:
      {
        
      // Array of basisvalues
      double basisvalues[3] = {0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[1] *= std::sqrt(3.0);
      
      // Table(s) of coefficients
      static const double coefficients0[3] = \
      {0.471404520791032, 0.288675134594813, -0.166666666666667};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 3; r++)
      {
        *values += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 2:
      {
        
      // Array of basisvalues
      double basisvalues[3] = {0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[1] *= std::sqrt(3.0);
      
      // Table(s) of coefficients
      static const double coefficients0[3] = \
      {0.471404520791032, 0.0, 0.333333333333333};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 3; r++)
      {
        *values += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    }
    
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_4::_evaluate_basis_all(double * values,
                                        const double * x,
                                        const double * coordinate_dofs,
                                        int cell_orientation)
{
    // Helper variable to hold values of a single dof.
    double dof_values = 0.0;
    
    // Loop dofs and call evaluate_basis
    for (unsigned int r = 0; r < 3; r++)
    {
      _evaluate_basis(r, &dof_values, x, coordinate_dofs, cell_orientation);
      values[r] = dof_values;
    } // end loop over 'r'
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_4::_evaluate_basis_derivatives(std::size_t i,
                                                std::size_t n,
                                                double * values,
                                                const double * x,
                                                const double * coordinate_dofs,
                                                int cell_orientation)
{
throw std::runtime_error("// Function evaluate_basis_derivatives not generated (compiled with -fno-evaluate_basis_derivatives)");
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_4::_evaluate_basis_derivatives_all(std::size_t n,
                                                    double * values,
                                                    const double * x,
                                                    const double * coordinate_dofs,
                                                    int cell_orientation)
{
    // Call evaluate_basis_all if order of derivatives is equal to zero.
    if (n == 0)
    {
      _evaluate_basis_all(values, x, coordinate_dofs, cell_orientation);
      return ;
    }
    
    // Compute number of derivatives.
    unsigned int num_derivatives = 1;
    for (unsigned int r = 0; r < n; r++)
    {
      num_derivatives *= 2;
    } // end loop over 'r'
    
    // Set values equal to zero.
    for (unsigned int r = 0; r < 3; r++)
    {
      for (unsigned int s = 0; s < num_derivatives; s++)
      {
        values[r*num_derivatives + s] = 0.0;
      } // end loop over 's'
    } // end loop over 'r'
    
    // If order of derivatives is greater than the maximum polynomial degree, return zeros.
    if (n > 1)
    {
      return ;
    }
    
    // Helper variable to hold values of a single dof.
    double dof_values[2];
    for (unsigned int r = 0; r < 2; r++)
    {
      dof_values[r] = 0.0;
    } // end loop over 'r'
    
    // Loop dofs and call evaluate_basis_derivatives.
    for (unsigned int r = 0; r < 3; r++)
    {
      _evaluate_basis_derivatives(r, n, dof_values, x, coordinate_dofs, cell_orientation);
      for (unsigned int s = 0; s < num_derivatives; s++)
      {
        values[r*num_derivatives + s] = dof_values[s];
      } // end loop over 's'
    } // end loop over 'r'
}

double ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_4::evaluate_dof(std::size_t i,
                                   const ufc::function& f,
                                   const double * coordinate_dofs,
                                   int cell_orientation,
                                   const ufc::cell& c) const
{
    // Declare variables for result of evaluation
    double vals[1];
    
    // Declare variable for physical coordinates
    double y[2];
    switch (i)
    {
    case 0:
      {
        y[0] = coordinate_dofs[0];
      y[1] = coordinate_dofs[1];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 1:
      {
        y[0] = coordinate_dofs[2];
      y[1] = coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 2:
      {
        y[0] = coordinate_dofs[4];
      y[1] = coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    }
    
    return 0.0;
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_4::evaluate_dofs(double * values,
                                  const ufc::function& f,
                                  const double * coordinate_dofs,
                                  int cell_orientation,
                                  const ufc::cell& c) const
{
    // Declare variables for result of evaluation
    double vals[1];
    
    // Declare variable for physical coordinates
    double y[2];
    y[0] = coordinate_dofs[0];
    y[1] = coordinate_dofs[1];
    f.evaluate(vals, y, c);
    values[0] = vals[0];
    y[0] = coordinate_dofs[2];
    y[1] = coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[1] = vals[0];
    y[0] = coordinate_dofs[4];
    y[1] = coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[2] = vals[0];
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_4::interpolate_vertex_values(double * vertex_values,
                                              const double * dof_values,
                                              const double * coordinate_dofs,
                                              int cell_orientation,
                                              const ufc::cell& c) const
{
    // Evaluate function and change variables
    vertex_values[0] = dof_values[0];
    vertex_values[1] = dof_values[1];
    vertex_values[2] = dof_values[2];
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_4::tabulate_dof_coordinates(double * dof_coordinates,
                                             const double * coordinate_dofs) const
{
    dof_coordinates[0] = coordinate_dofs[0];
    dof_coordinates[1] = coordinate_dofs[1];
    dof_coordinates[2] = coordinate_dofs[2];
    dof_coordinates[3] = coordinate_dofs[3];
    dof_coordinates[4] = coordinate_dofs[4];
    dof_coordinates[5] = coordinate_dofs[5];
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_4::num_sub_elements() const
{
    return 0;
}

ufc::finite_element * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_4::create_sub_element(std::size_t i) const
{
    return 0;
}

ufc::finite_element * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_4::create() const
{
    return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_4();
}


class ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_5: public ufc::finite_element
{
public:

  ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_5();

  ~ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_5() override;

  const char * signature() const final override;

  ufc::shape cell_shape() const final override;

  std::size_t topological_dimension() const final override;

  std::size_t geometric_dimension() const final override;

  std::size_t space_dimension() const final override;

  std::size_t value_rank() const final override;

  std::size_t value_dimension(std::size_t i) const final override;

  std::size_t value_size() const final override;

  std::size_t reference_value_rank() const final override;

  std::size_t reference_value_dimension(std::size_t i) const final override;

  std::size_t reference_value_size() const final override;

  std::size_t degree() const final override;

  const char * family() const final override;

  static void _evaluate_basis(std::size_t i,
                              double * values,
                              const double * x,
                              const double * coordinate_dofs,
                              int cell_orientation);

  void evaluate_basis(std::size_t i,
                      double * values,
                      const double * x,
                      const double * coordinate_dofs,
                      int cell_orientation) const final override
  {
    _evaluate_basis(i, values, x, coordinate_dofs, cell_orientation);
  }

  static void _evaluate_basis_all(double * values,
                                  const double * x,
                                  const double * coordinate_dofs,
                                  int cell_orientation);

  void evaluate_basis_all(double * values,
                          const double * x,
                          const double * coordinate_dofs,
                          int cell_orientation) const final override
  {
    _evaluate_basis_all(values, x, coordinate_dofs, cell_orientation);
  }

  static void _evaluate_basis_derivatives(std::size_t i,
                                          std::size_t n,
                                          double * values,
                                          const double * x,
                                          const double * coordinate_dofs,
                                          int cell_orientation);

  void evaluate_basis_derivatives(std::size_t i,
                                  std::size_t n,
                                  double * values,
                                  const double * x,
                                  const double * coordinate_dofs,
                                  int cell_orientation) const final override
  {
    _evaluate_basis_derivatives(i, n, values, x, coordinate_dofs, cell_orientation);
  }

  static void _evaluate_basis_derivatives_all(std::size_t n,
                                              double * values,
                                              const double * x,
                                              const double * coordinate_dofs,
                                              int cell_orientation);

  void evaluate_basis_derivatives_all(std::size_t n,
                                      double * values,
                                      const double * x,
                                      const double * coordinate_dofs,
                                      int cell_orientation) const final override
  {
    _evaluate_basis_derivatives_all(n, values, x, coordinate_dofs, cell_orientation);
  }

  double evaluate_dof(std::size_t i,
                      const ufc::function& f,
                      const double * coordinate_dofs,
                      int cell_orientation,
                      const ufc::cell& c) const final override;

  void evaluate_dofs(double * values,
                     const ufc::function& f,
                     const double * coordinate_dofs,
                     int cell_orientation,
                     const ufc::cell& c) const final override;

  void interpolate_vertex_values(double * vertex_values,
                                 const double * dof_values,
                                 const double * coordinate_dofs,
                                 int cell_orientation,
                                 const ufc::cell& c) const final override;

  void tabulate_dof_coordinates(double * coordinates,
                                const double * coordinate_dofs) const final override;

  std::size_t num_sub_elements() const final override;

  ufc::finite_element * create_sub_element(std::size_t i) const final override;

  ufc::finite_element * create() const final override;

};

extern "C" DLL_EXPORT ufc::finite_element * create_ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_5()
{
  return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_5();
}

ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_5::ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_5() : ufc::finite_element()
{
    // Do nothing
}

ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_5::~ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_5()
{
    // Do nothing
}

const char * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_5::signature() const
{
    return "VectorElement(FiniteElement('Lagrange', triangle, 1), dim=2)";
}

ufc::shape ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_5::cell_shape() const
{
    return ufc::shape::triangle;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_5::topological_dimension() const
{
    return 2;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_5::geometric_dimension() const
{
    return 2;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_5::space_dimension() const
{
    return 6;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_5::value_rank() const
{
    return 1;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_5::value_dimension(std::size_t i) const
{
    switch (i)
    {
    case 0:
      {
        return 2;
        break;
      }
    }
    
    return 0;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_5::value_size() const
{
    return 2;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_5::reference_value_rank() const
{
    return 1;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_5::reference_value_dimension(std::size_t i) const
{
    switch (i)
    {
    case 0:
      {
        return 2;
        break;
      }
    }
    
    return 0;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_5::reference_value_size() const
{
    return 2;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_5::degree() const
{
    return 1;
}

const char * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_5::family() const
{
    return "Lagrange";
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_5::_evaluate_basis(std::size_t i,
                                    double * values,
                                    const double * x,
                                    const double * coordinate_dofs,
                                    int cell_orientation)
{
    // Compute Jacobian
    double J[4];
    compute_jacobian_triangle_2d(J, coordinate_dofs);
    
    // Compute Jacobian inverse and determinant
    double K[4];
    double detJ;
    compute_jacobian_inverse_triangle_2d(K, detJ, J);
    
    
    // Compute constants
    const double C0 = coordinate_dofs[2] + coordinate_dofs[4];
    const double C1 = coordinate_dofs[3] + coordinate_dofs[5];
    
    // Get coordinates and map to the reference (FIAT) element
    double X = (J[1]*(C1 - 2.0*x[1]) + J[3]*(2.0*x[0] - C0)) / detJ;
    double Y = (J[0]*(2.0*x[1] - C1) + J[2]*(C0 - 2.0*x[0])) / detJ;
    
    // Reset values
    values[0] = 0.0;
    values[1] = 0.0;
    switch (i)
    {
    case 0:
      {
        
      // Array of basisvalues
      double basisvalues[3] = {0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[1] *= std::sqrt(3.0);
      
      // Table(s) of coefficients
      static const double coefficients0[3] = \
      {0.471404520791032, -0.288675134594813, -0.166666666666667};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 3; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 1:
      {
        
      // Array of basisvalues
      double basisvalues[3] = {0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[1] *= std::sqrt(3.0);
      
      // Table(s) of coefficients
      static const double coefficients0[3] = \
      {0.471404520791032, 0.288675134594813, -0.166666666666667};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 3; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 2:
      {
        
      // Array of basisvalues
      double basisvalues[3] = {0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[1] *= std::sqrt(3.0);
      
      // Table(s) of coefficients
      static const double coefficients0[3] = \
      {0.471404520791032, 0.0, 0.333333333333333};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 3; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 3:
      {
        
      // Array of basisvalues
      double basisvalues[3] = {0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[1] *= std::sqrt(3.0);
      
      // Table(s) of coefficients
      static const double coefficients0[3] = \
      {0.471404520791032, -0.288675134594813, -0.166666666666667};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 3; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 4:
      {
        
      // Array of basisvalues
      double basisvalues[3] = {0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[1] *= std::sqrt(3.0);
      
      // Table(s) of coefficients
      static const double coefficients0[3] = \
      {0.471404520791032, 0.288675134594813, -0.166666666666667};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 3; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 5:
      {
        
      // Array of basisvalues
      double basisvalues[3] = {0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[1] *= std::sqrt(3.0);
      
      // Table(s) of coefficients
      static const double coefficients0[3] = \
      {0.471404520791032, 0.0, 0.333333333333333};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 3; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    }
    
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_5::_evaluate_basis_all(double * values,
                                        const double * x,
                                        const double * coordinate_dofs,
                                        int cell_orientation)
{
    // Helper variable to hold values of a single dof.
    double dof_values[2] = {0.0, 0.0};
    
    // Loop dofs and call evaluate_basis
    for (unsigned int r = 0; r < 6; r++)
    {
      _evaluate_basis(r, dof_values, x, coordinate_dofs, cell_orientation);
      for (unsigned int s = 0; s < 2; s++)
      {
        values[r*2 + s] = dof_values[s];
      } // end loop over 's'
    } // end loop over 'r'
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_5::_evaluate_basis_derivatives(std::size_t i,
                                                std::size_t n,
                                                double * values,
                                                const double * x,
                                                const double * coordinate_dofs,
                                                int cell_orientation)
{
throw std::runtime_error("// Function evaluate_basis_derivatives not generated (compiled with -fno-evaluate_basis_derivatives)");
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_5::_evaluate_basis_derivatives_all(std::size_t n,
                                                    double * values,
                                                    const double * x,
                                                    const double * coordinate_dofs,
                                                    int cell_orientation)
{
    // Call evaluate_basis_all if order of derivatives is equal to zero.
    if (n == 0)
    {
      _evaluate_basis_all(values, x, coordinate_dofs, cell_orientation);
      return ;
    }
    
    // Compute number of derivatives.
    unsigned int num_derivatives = 1;
    for (unsigned int r = 0; r < n; r++)
    {
      num_derivatives *= 2;
    } // end loop over 'r'
    
    // Set values equal to zero.
    for (unsigned int r = 0; r < 6; r++)
    {
      for (unsigned int s = 0; s < 2*num_derivatives; s++)
      {
        values[r*2*num_derivatives + s] = 0.0;
      } // end loop over 's'
    } // end loop over 'r'
    
    // If order of derivatives is greater than the maximum polynomial degree, return zeros.
    if (n > 1)
    {
      return ;
    }
    
    // Helper variable to hold values of a single dof.
    double dof_values[4];
    for (unsigned int r = 0; r < 4; r++)
    {
      dof_values[r] = 0.0;
    } // end loop over 'r'
    
    // Loop dofs and call evaluate_basis_derivatives.
    for (unsigned int r = 0; r < 6; r++)
    {
      _evaluate_basis_derivatives(r, n, dof_values, x, coordinate_dofs, cell_orientation);
      for (unsigned int s = 0; s < 2*num_derivatives; s++)
      {
        values[r*2*num_derivatives + s] = dof_values[s];
      } // end loop over 's'
    } // end loop over 'r'
}

double ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_5::evaluate_dof(std::size_t i,
                                   const ufc::function& f,
                                   const double * coordinate_dofs,
                                   int cell_orientation,
                                   const ufc::cell& c) const
{
    // Declare variables for result of evaluation
    double vals[2];
    
    // Declare variable for physical coordinates
    double y[2];
    switch (i)
    {
    case 0:
      {
        y[0] = coordinate_dofs[0];
      y[1] = coordinate_dofs[1];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 1:
      {
        y[0] = coordinate_dofs[2];
      y[1] = coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 2:
      {
        y[0] = coordinate_dofs[4];
      y[1] = coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 3:
      {
        y[0] = coordinate_dofs[0];
      y[1] = coordinate_dofs[1];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    case 4:
      {
        y[0] = coordinate_dofs[2];
      y[1] = coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    case 5:
      {
        y[0] = coordinate_dofs[4];
      y[1] = coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    }
    
    return 0.0;
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_5::evaluate_dofs(double * values,
                                  const ufc::function& f,
                                  const double * coordinate_dofs,
                                  int cell_orientation,
                                  const ufc::cell& c) const
{
    // Declare variables for result of evaluation
    double vals[2];
    
    // Declare variable for physical coordinates
    double y[2];
    y[0] = coordinate_dofs[0];
    y[1] = coordinate_dofs[1];
    f.evaluate(vals, y, c);
    values[0] = vals[0];
    y[0] = coordinate_dofs[2];
    y[1] = coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[1] = vals[0];
    y[0] = coordinate_dofs[4];
    y[1] = coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[2] = vals[0];
    y[0] = coordinate_dofs[0];
    y[1] = coordinate_dofs[1];
    f.evaluate(vals, y, c);
    values[3] = vals[1];
    y[0] = coordinate_dofs[2];
    y[1] = coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[4] = vals[1];
    y[0] = coordinate_dofs[4];
    y[1] = coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[5] = vals[1];
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_5::interpolate_vertex_values(double * vertex_values,
                                              const double * dof_values,
                                              const double * coordinate_dofs,
                                              int cell_orientation,
                                              const ufc::cell& c) const
{
    // Evaluate function and change variables
    vertex_values[0] = dof_values[0];
    vertex_values[2] = dof_values[1];
    vertex_values[4] = dof_values[2];
    // Evaluate function and change variables
    vertex_values[1] = dof_values[3];
    vertex_values[3] = dof_values[4];
    vertex_values[5] = dof_values[5];
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_5::tabulate_dof_coordinates(double * dof_coordinates,
                                             const double * coordinate_dofs) const
{
    dof_coordinates[0] = coordinate_dofs[0];
    dof_coordinates[1] = coordinate_dofs[1];
    dof_coordinates[2] = coordinate_dofs[2];
    dof_coordinates[3] = coordinate_dofs[3];
    dof_coordinates[4] = coordinate_dofs[4];
    dof_coordinates[5] = coordinate_dofs[5];
    dof_coordinates[6] = coordinate_dofs[0];
    dof_coordinates[7] = coordinate_dofs[1];
    dof_coordinates[8] = coordinate_dofs[2];
    dof_coordinates[9] = coordinate_dofs[3];
    dof_coordinates[10] = coordinate_dofs[4];
    dof_coordinates[11] = coordinate_dofs[5];
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_5::num_sub_elements() const
{
    return 2;
}

ufc::finite_element * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_5::create_sub_element(std::size_t i) const
{
    switch (i)
    {
    case 0:
      {
        return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_4();
        break;
      }
    case 1:
      {
        return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_4();
        break;
      }
    }
    
    return 0;
}

ufc::finite_element * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_5::create() const
{
    return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_5();
}


class ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_6: public ufc::finite_element
{
public:

  ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_6();

  ~ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_6() override;

  const char * signature() const final override;

  ufc::shape cell_shape() const final override;

  std::size_t topological_dimension() const final override;

  std::size_t geometric_dimension() const final override;

  std::size_t space_dimension() const final override;

  std::size_t value_rank() const final override;

  std::size_t value_dimension(std::size_t i) const final override;

  std::size_t value_size() const final override;

  std::size_t reference_value_rank() const final override;

  std::size_t reference_value_dimension(std::size_t i) const final override;

  std::size_t reference_value_size() const final override;

  std::size_t degree() const final override;

  const char * family() const final override;

  static void _evaluate_basis(std::size_t i,
                              double * values,
                              const double * x,
                              const double * coordinate_dofs,
                              int cell_orientation);

  void evaluate_basis(std::size_t i,
                      double * values,
                      const double * x,
                      const double * coordinate_dofs,
                      int cell_orientation) const final override
  {
    _evaluate_basis(i, values, x, coordinate_dofs, cell_orientation);
  }

  static void _evaluate_basis_all(double * values,
                                  const double * x,
                                  const double * coordinate_dofs,
                                  int cell_orientation);

  void evaluate_basis_all(double * values,
                          const double * x,
                          const double * coordinate_dofs,
                          int cell_orientation) const final override
  {
    _evaluate_basis_all(values, x, coordinate_dofs, cell_orientation);
  }

  static void _evaluate_basis_derivatives(std::size_t i,
                                          std::size_t n,
                                          double * values,
                                          const double * x,
                                          const double * coordinate_dofs,
                                          int cell_orientation);

  void evaluate_basis_derivatives(std::size_t i,
                                  std::size_t n,
                                  double * values,
                                  const double * x,
                                  const double * coordinate_dofs,
                                  int cell_orientation) const final override
  {
    _evaluate_basis_derivatives(i, n, values, x, coordinate_dofs, cell_orientation);
  }

  static void _evaluate_basis_derivatives_all(std::size_t n,
                                              double * values,
                                              const double * x,
                                              const double * coordinate_dofs,
                                              int cell_orientation);

  void evaluate_basis_derivatives_all(std::size_t n,
                                      double * values,
                                      const double * x,
                                      const double * coordinate_dofs,
                                      int cell_orientation) const final override
  {
    _evaluate_basis_derivatives_all(n, values, x, coordinate_dofs, cell_orientation);
  }

  double evaluate_dof(std::size_t i,
                      const ufc::function& f,
                      const double * coordinate_dofs,
                      int cell_orientation,
                      const ufc::cell& c) const final override;

  void evaluate_dofs(double * values,
                     const ufc::function& f,
                     const double * coordinate_dofs,
                     int cell_orientation,
                     const ufc::cell& c) const final override;

  void interpolate_vertex_values(double * vertex_values,
                                 const double * dof_values,
                                 const double * coordinate_dofs,
                                 int cell_orientation,
                                 const ufc::cell& c) const final override;

  void tabulate_dof_coordinates(double * coordinates,
                                const double * coordinate_dofs) const final override;

  std::size_t num_sub_elements() const final override;

  ufc::finite_element * create_sub_element(std::size_t i) const final override;

  ufc::finite_element * create() const final override;

};

extern "C" DLL_EXPORT ufc::finite_element * create_ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_6()
{
  return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_6();
}

ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_6::ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_6() : ufc::finite_element()
{
    // Do nothing
}

ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_6::~ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_6()
{
    // Do nothing
}

const char * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_6::signature() const
{
    return "FiniteElement('Lagrange', triangle, 2)";
}

ufc::shape ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_6::cell_shape() const
{
    return ufc::shape::triangle;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_6::topological_dimension() const
{
    return 2;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_6::geometric_dimension() const
{
    return 2;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_6::space_dimension() const
{
    return 6;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_6::value_rank() const
{
    return 0;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_6::value_dimension(std::size_t i) const
{
    return 1;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_6::value_size() const
{
    return 1;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_6::reference_value_rank() const
{
    return 0;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_6::reference_value_dimension(std::size_t i) const
{
    return 1;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_6::reference_value_size() const
{
    return 1;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_6::degree() const
{
    return 2;
}

const char * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_6::family() const
{
    return "Lagrange";
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_6::_evaluate_basis(std::size_t i,
                                    double * values,
                                    const double * x,
                                    const double * coordinate_dofs,
                                    int cell_orientation)
{
    // Compute Jacobian
    double J[4];
    compute_jacobian_triangle_2d(J, coordinate_dofs);
    
    // Compute Jacobian inverse and determinant
    double K[4];
    double detJ;
    compute_jacobian_inverse_triangle_2d(K, detJ, J);
    
    
    // Compute constants
    const double C0 = coordinate_dofs[2] + coordinate_dofs[4];
    const double C1 = coordinate_dofs[3] + coordinate_dofs[5];
    
    // Get coordinates and map to the reference (FIAT) element
    double X = (J[1]*(C1 - 2.0*x[1]) + J[3]*(2.0*x[0] - C0)) / detJ;
    double Y = (J[0]*(2.0*x[1] - C1) + J[2]*(C0 - 2.0*x[0])) / detJ;
    
    // Reset values
    *values = 0.0;
    switch (i)
    {
    case 0:
      {
        
      // Array of basisvalues
      double basisvalues[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[3] *= std::sqrt(7.5);
      
      // Table(s) of coefficients
      static const double coefficients0[6] = \
      {0.0, -0.173205080756888, -0.1, 0.121716123890037, 0.0942809041582064, 0.0544331053951817};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 6; r++)
      {
        *values += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 1:
      {
        
      // Array of basisvalues
      double basisvalues[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[3] *= std::sqrt(7.5);
      
      // Table(s) of coefficients
      static const double coefficients0[6] = \
      {0.0, 0.173205080756888, -0.1, 0.121716123890037, -0.0942809041582063, 0.0544331053951818};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 6; r++)
      {
        *values += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 2:
      {
        
      // Array of basisvalues
      double basisvalues[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[3] *= std::sqrt(7.5);
      
      // Table(s) of coefficients
      static const double coefficients0[6] = \
      {0.0, 0.0, 0.2, 0.0, 0.0, 0.163299316185545};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 6; r++)
      {
        *values += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 3:
      {
        
      // Array of basisvalues
      double basisvalues[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[3] *= std::sqrt(7.5);
      
      // Table(s) of coefficients
      static const double coefficients0[6] = \
      {0.471404520791032, 0.23094010767585, 0.133333333333333, 0.0, 0.188561808316413, -0.163299316185545};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 6; r++)
      {
        *values += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 4:
      {
        
      // Array of basisvalues
      double basisvalues[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[3] *= std::sqrt(7.5);
      
      // Table(s) of coefficients
      static const double coefficients0[6] = \
      {0.471404520791031, -0.23094010767585, 0.133333333333333, 0.0, -0.188561808316413, -0.163299316185545};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 6; r++)
      {
        *values += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 5:
      {
        
      // Array of basisvalues
      double basisvalues[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[3] *= std::sqrt(7.5);
      
      // Table(s) of coefficients
      static const double coefficients0[6] = \
      {0.471404520791032, 0.0, -0.266666666666667, -0.243432247780074, 0.0, 0.0544331053951817};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 6; r++)
      {
        *values += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    }
    
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_6::_evaluate_basis_all(double * values,
                                        const double * x,
                                        const double * coordinate_dofs,
                                        int cell_orientation)
{
    // Helper variable to hold values of a single dof.
    double dof_values = 0.0;
    
    // Loop dofs and call evaluate_basis
    for (unsigned int r = 0; r < 6; r++)
    {
      _evaluate_basis(r, &dof_values, x, coordinate_dofs, cell_orientation);
      values[r] = dof_values;
    } // end loop over 'r'
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_6::_evaluate_basis_derivatives(std::size_t i,
                                                std::size_t n,
                                                double * values,
                                                const double * x,
                                                const double * coordinate_dofs,
                                                int cell_orientation)
{
throw std::runtime_error("// Function evaluate_basis_derivatives not generated (compiled with -fno-evaluate_basis_derivatives)");
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_6::_evaluate_basis_derivatives_all(std::size_t n,
                                                    double * values,
                                                    const double * x,
                                                    const double * coordinate_dofs,
                                                    int cell_orientation)
{
    // Call evaluate_basis_all if order of derivatives is equal to zero.
    if (n == 0)
    {
      _evaluate_basis_all(values, x, coordinate_dofs, cell_orientation);
      return ;
    }
    
    // Compute number of derivatives.
    unsigned int num_derivatives = 1;
    for (unsigned int r = 0; r < n; r++)
    {
      num_derivatives *= 2;
    } // end loop over 'r'
    
    // Set values equal to zero.
    for (unsigned int r = 0; r < 6; r++)
    {
      for (unsigned int s = 0; s < num_derivatives; s++)
      {
        values[r*num_derivatives + s] = 0.0;
      } // end loop over 's'
    } // end loop over 'r'
    
    // If order of derivatives is greater than the maximum polynomial degree, return zeros.
    if (n > 2)
    {
      return ;
    }
    
    // Helper variable to hold values of a single dof.
    double dof_values[4];
    for (unsigned int r = 0; r < 4; r++)
    {
      dof_values[r] = 0.0;
    } // end loop over 'r'
    
    // Loop dofs and call evaluate_basis_derivatives.
    for (unsigned int r = 0; r < 6; r++)
    {
      _evaluate_basis_derivatives(r, n, dof_values, x, coordinate_dofs, cell_orientation);
      for (unsigned int s = 0; s < num_derivatives; s++)
      {
        values[r*num_derivatives + s] = dof_values[s];
      } // end loop over 's'
    } // end loop over 'r'
}

double ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_6::evaluate_dof(std::size_t i,
                                   const ufc::function& f,
                                   const double * coordinate_dofs,
                                   int cell_orientation,
                                   const ufc::cell& c) const
{
    // Declare variables for result of evaluation
    double vals[1];
    
    // Declare variable for physical coordinates
    double y[2];
    switch (i)
    {
    case 0:
      {
        y[0] = coordinate_dofs[0];
      y[1] = coordinate_dofs[1];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 1:
      {
        y[0] = coordinate_dofs[2];
      y[1] = coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 2:
      {
        y[0] = coordinate_dofs[4];
      y[1] = coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 3:
      {
        y[0] = 0.5*coordinate_dofs[2] + 0.5*coordinate_dofs[4];
      y[1] = 0.5*coordinate_dofs[3] + 0.5*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 4:
      {
        y[0] = 0.5*coordinate_dofs[0] + 0.5*coordinate_dofs[4];
      y[1] = 0.5*coordinate_dofs[1] + 0.5*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 5:
      {
        y[0] = 0.5*coordinate_dofs[0] + 0.5*coordinate_dofs[2];
      y[1] = 0.5*coordinate_dofs[1] + 0.5*coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    }
    
    return 0.0;
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_6::evaluate_dofs(double * values,
                                  const ufc::function& f,
                                  const double * coordinate_dofs,
                                  int cell_orientation,
                                  const ufc::cell& c) const
{
    // Declare variables for result of evaluation
    double vals[1];
    
    // Declare variable for physical coordinates
    double y[2];
    y[0] = coordinate_dofs[0];
    y[1] = coordinate_dofs[1];
    f.evaluate(vals, y, c);
    values[0] = vals[0];
    y[0] = coordinate_dofs[2];
    y[1] = coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[1] = vals[0];
    y[0] = coordinate_dofs[4];
    y[1] = coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[2] = vals[0];
    y[0] = 0.5*coordinate_dofs[2] + 0.5*coordinate_dofs[4];
    y[1] = 0.5*coordinate_dofs[3] + 0.5*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[3] = vals[0];
    y[0] = 0.5*coordinate_dofs[0] + 0.5*coordinate_dofs[4];
    y[1] = 0.5*coordinate_dofs[1] + 0.5*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[4] = vals[0];
    y[0] = 0.5*coordinate_dofs[0] + 0.5*coordinate_dofs[2];
    y[1] = 0.5*coordinate_dofs[1] + 0.5*coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[5] = vals[0];
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_6::interpolate_vertex_values(double * vertex_values,
                                              const double * dof_values,
                                              const double * coordinate_dofs,
                                              int cell_orientation,
                                              const ufc::cell& c) const
{
    // Evaluate function and change variables
    vertex_values[0] = dof_values[0];
    vertex_values[1] = dof_values[1];
    vertex_values[2] = dof_values[2];
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_6::tabulate_dof_coordinates(double * dof_coordinates,
                                             const double * coordinate_dofs) const
{
    dof_coordinates[0] = coordinate_dofs[0];
    dof_coordinates[1] = coordinate_dofs[1];
    dof_coordinates[2] = coordinate_dofs[2];
    dof_coordinates[3] = coordinate_dofs[3];
    dof_coordinates[4] = coordinate_dofs[4];
    dof_coordinates[5] = coordinate_dofs[5];
    dof_coordinates[6] = 0.5*coordinate_dofs[2] + 0.5*coordinate_dofs[4];
    dof_coordinates[7] = 0.5*coordinate_dofs[3] + 0.5*coordinate_dofs[5];
    dof_coordinates[8] = 0.5*coordinate_dofs[0] + 0.5*coordinate_dofs[4];
    dof_coordinates[9] = 0.5*coordinate_dofs[1] + 0.5*coordinate_dofs[5];
    dof_coordinates[10] = 0.5*coordinate_dofs[0] + 0.5*coordinate_dofs[2];
    dof_coordinates[11] = 0.5*coordinate_dofs[1] + 0.5*coordinate_dofs[3];
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_6::num_sub_elements() const
{
    return 0;
}

ufc::finite_element * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_6::create_sub_element(std::size_t i) const
{
    return 0;
}

ufc::finite_element * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_6::create() const
{
    return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_6();
}


class ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_7: public ufc::finite_element
{
public:

  ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_7();

  ~ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_7() override;

  const char * signature() const final override;

  ufc::shape cell_shape() const final override;

  std::size_t topological_dimension() const final override;

  std::size_t geometric_dimension() const final override;

  std::size_t space_dimension() const final override;

  std::size_t value_rank() const final override;

  std::size_t value_dimension(std::size_t i) const final override;

  std::size_t value_size() const final override;

  std::size_t reference_value_rank() const final override;

  std::size_t reference_value_dimension(std::size_t i) const final override;

  std::size_t reference_value_size() const final override;

  std::size_t degree() const final override;

  const char * family() const final override;

  static void _evaluate_basis(std::size_t i,
                              double * values,
                              const double * x,
                              const double * coordinate_dofs,
                              int cell_orientation);

  void evaluate_basis(std::size_t i,
                      double * values,
                      const double * x,
                      const double * coordinate_dofs,
                      int cell_orientation) const final override
  {
    _evaluate_basis(i, values, x, coordinate_dofs, cell_orientation);
  }

  static void _evaluate_basis_all(double * values,
                                  const double * x,
                                  const double * coordinate_dofs,
                                  int cell_orientation);

  void evaluate_basis_all(double * values,
                          const double * x,
                          const double * coordinate_dofs,
                          int cell_orientation) const final override
  {
    _evaluate_basis_all(values, x, coordinate_dofs, cell_orientation);
  }

  static void _evaluate_basis_derivatives(std::size_t i,
                                          std::size_t n,
                                          double * values,
                                          const double * x,
                                          const double * coordinate_dofs,
                                          int cell_orientation);

  void evaluate_basis_derivatives(std::size_t i,
                                  std::size_t n,
                                  double * values,
                                  const double * x,
                                  const double * coordinate_dofs,
                                  int cell_orientation) const final override
  {
    _evaluate_basis_derivatives(i, n, values, x, coordinate_dofs, cell_orientation);
  }

  static void _evaluate_basis_derivatives_all(std::size_t n,
                                              double * values,
                                              const double * x,
                                              const double * coordinate_dofs,
                                              int cell_orientation);

  void evaluate_basis_derivatives_all(std::size_t n,
                                      double * values,
                                      const double * x,
                                      const double * coordinate_dofs,
                                      int cell_orientation) const final override
  {
    _evaluate_basis_derivatives_all(n, values, x, coordinate_dofs, cell_orientation);
  }

  double evaluate_dof(std::size_t i,
                      const ufc::function& f,
                      const double * coordinate_dofs,
                      int cell_orientation,
                      const ufc::cell& c) const final override;

  void evaluate_dofs(double * values,
                     const ufc::function& f,
                     const double * coordinate_dofs,
                     int cell_orientation,
                     const ufc::cell& c) const final override;

  void interpolate_vertex_values(double * vertex_values,
                                 const double * dof_values,
                                 const double * coordinate_dofs,
                                 int cell_orientation,
                                 const ufc::cell& c) const final override;

  void tabulate_dof_coordinates(double * coordinates,
                                const double * coordinate_dofs) const final override;

  std::size_t num_sub_elements() const final override;

  ufc::finite_element * create_sub_element(std::size_t i) const final override;

  ufc::finite_element * create() const final override;

};

extern "C" DLL_EXPORT ufc::finite_element * create_ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_7()
{
  return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_7();
}

ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_7::ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_7() : ufc::finite_element()
{
    // Do nothing
}

ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_7::~ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_7()
{
    // Do nothing
}

const char * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_7::signature() const
{
    return "MixedElement(VectorElement(FiniteElement('Lagrange', triangle, 3), dim=2), VectorElement(FiniteElement('Lagrange', triangle, 1), dim=2), FiniteElement('Lagrange', triangle, 2))";
}

ufc::shape ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_7::cell_shape() const
{
    return ufc::shape::triangle;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_7::topological_dimension() const
{
    return 2;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_7::geometric_dimension() const
{
    return 2;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_7::space_dimension() const
{
    return 32;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_7::value_rank() const
{
    return 1;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_7::value_dimension(std::size_t i) const
{
    switch (i)
    {
    case 0:
      {
        return 5;
        break;
      }
    }
    
    return 0;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_7::value_size() const
{
    return 5;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_7::reference_value_rank() const
{
    return 1;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_7::reference_value_dimension(std::size_t i) const
{
    switch (i)
    {
    case 0:
      {
        return 5;
        break;
      }
    }
    
    return 0;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_7::reference_value_size() const
{
    return 5;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_7::degree() const
{
    return 3;
}

const char * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_7::family() const
{
    return "Mixed";
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_7::_evaluate_basis(std::size_t i,
                                    double * values,
                                    const double * x,
                                    const double * coordinate_dofs,
                                    int cell_orientation)
{
    // Compute Jacobian
    double J[4];
    compute_jacobian_triangle_2d(J, coordinate_dofs);
    
    // Compute Jacobian inverse and determinant
    double K[4];
    double detJ;
    compute_jacobian_inverse_triangle_2d(K, detJ, J);
    
    
    // Compute constants
    const double C0 = coordinate_dofs[2] + coordinate_dofs[4];
    const double C1 = coordinate_dofs[3] + coordinate_dofs[5];
    
    // Get coordinates and map to the reference (FIAT) element
    double X = (J[1]*(C1 - 2.0*x[1]) + J[3]*(2.0*x[0] - C0)) / detJ;
    double Y = (J[0]*(2.0*x[1] - C1) + J[2]*(C0 - 2.0*x[0])) / detJ;
    
    // Reset values
    values[0] = 0.0;
    values[1] = 0.0;
    values[2] = 0.0;
    values[3] = 0.0;
    values[4] = 0.0;
    switch (i)
    {
    case 0:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.0471404520791031, -0.0288675134594813, -0.0166666666666667, 0.0782460796435952, 0.0606091526731326, 0.0349927106111883, -0.0601337794302955, -0.0508223195384204, -0.0393667994375868, -0.0227284322524248};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 1:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.0471404520791031, 0.0288675134594812, -0.0166666666666666, 0.0782460796435952, -0.0606091526731327, 0.0349927106111883, 0.0601337794302955, -0.0508223195384204, 0.0393667994375868, -0.0227284322524248};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 2:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.0471404520791033, 0.0, 0.0333333333333333, 0.0, 0.0, 0.104978131833565, 0.0, 0.0, 0.0, 0.090913729009699};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 3:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, 0.259807621135332, -0.15, 0.117369119465393, 0.0606091526731326, -0.0787335988751736, 0.0, 0.101644639076841, -0.131222664791956, 0.090913729009699};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 4:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, 0.0, 0.3, 0.0, 0.151522881682832, 0.0262445329583912, 0.0, 0.0, 0.131222664791956, -0.136370593514548};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 5:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, -0.259807621135332, -0.15, 0.117369119465393, -0.0606091526731326, -0.0787335988751736, 0.0, 0.101644639076841, 0.131222664791956, 0.090913729009699};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 6:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, 0.0, 0.3, 0.0, -0.151522881682832, 0.0262445329583912, 0.0, 0.0, -0.131222664791956, -0.136370593514548};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 7:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, -0.259807621135332, -0.15, -0.0782460796435952, 0.090913729009699, 0.0962299541807677, 0.180401338290886, 0.0508223195384204, -0.0131222664791956, -0.0227284322524247};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 8:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, 0.259807621135332, -0.15, -0.0782460796435952, -0.090913729009699, 0.0962299541807678, -0.180401338290886, 0.0508223195384204, 0.0131222664791956, -0.0227284322524247};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 9:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.636396103067893, 0.0, 0.0, -0.234738238930785, 0.0, -0.262445329583912, 0.0, -0.203289278153681, 0.0, 0.090913729009699};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 10:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.0471404520791031, -0.0288675134594813, -0.0166666666666667, 0.0782460796435952, 0.0606091526731326, 0.0349927106111883, -0.0601337794302955, -0.0508223195384204, -0.0393667994375868, -0.0227284322524248};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 11:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.0471404520791031, 0.0288675134594812, -0.0166666666666666, 0.0782460796435952, -0.0606091526731327, 0.0349927106111883, 0.0601337794302955, -0.0508223195384204, 0.0393667994375868, -0.0227284322524248};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 12:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.0471404520791033, 0.0, 0.0333333333333333, 0.0, 0.0, 0.104978131833565, 0.0, 0.0, 0.0, 0.090913729009699};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 13:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, 0.259807621135332, -0.15, 0.117369119465393, 0.0606091526731326, -0.0787335988751736, 0.0, 0.101644639076841, -0.131222664791956, 0.090913729009699};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 14:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, 0.0, 0.3, 0.0, 0.151522881682832, 0.0262445329583912, 0.0, 0.0, 0.131222664791956, -0.136370593514548};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 15:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, -0.259807621135332, -0.15, 0.117369119465393, -0.0606091526731326, -0.0787335988751736, 0.0, 0.101644639076841, 0.131222664791956, 0.090913729009699};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 16:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, 0.0, 0.3, 0.0, -0.151522881682832, 0.0262445329583912, 0.0, 0.0, -0.131222664791956, -0.136370593514548};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 17:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, -0.259807621135332, -0.15, -0.0782460796435952, 0.090913729009699, 0.0962299541807677, 0.180401338290886, 0.0508223195384204, -0.0131222664791956, -0.0227284322524247};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 18:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, 0.259807621135332, -0.15, -0.0782460796435952, -0.090913729009699, 0.0962299541807678, -0.180401338290886, 0.0508223195384204, 0.0131222664791956, -0.0227284322524247};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 19:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.636396103067893, 0.0, 0.0, -0.234738238930785, 0.0, -0.262445329583912, 0.0, -0.203289278153681, 0.0, 0.090913729009699};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 20:
      {
        
      // Array of basisvalues
      double basisvalues[3] = {0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[1] *= std::sqrt(3.0);
      
      // Table(s) of coefficients
      static const double coefficients0[3] = \
      {0.471404520791032, -0.288675134594813, -0.166666666666667};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 3; r++)
      {
        values[2] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 21:
      {
        
      // Array of basisvalues
      double basisvalues[3] = {0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[1] *= std::sqrt(3.0);
      
      // Table(s) of coefficients
      static const double coefficients0[3] = \
      {0.471404520791032, 0.288675134594813, -0.166666666666667};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 3; r++)
      {
        values[2] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 22:
      {
        
      // Array of basisvalues
      double basisvalues[3] = {0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[1] *= std::sqrt(3.0);
      
      // Table(s) of coefficients
      static const double coefficients0[3] = \
      {0.471404520791032, 0.0, 0.333333333333333};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 3; r++)
      {
        values[2] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 23:
      {
        
      // Array of basisvalues
      double basisvalues[3] = {0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[1] *= std::sqrt(3.0);
      
      // Table(s) of coefficients
      static const double coefficients0[3] = \
      {0.471404520791032, -0.288675134594813, -0.166666666666667};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 3; r++)
      {
        values[3] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 24:
      {
        
      // Array of basisvalues
      double basisvalues[3] = {0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[1] *= std::sqrt(3.0);
      
      // Table(s) of coefficients
      static const double coefficients0[3] = \
      {0.471404520791032, 0.288675134594813, -0.166666666666667};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 3; r++)
      {
        values[3] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 25:
      {
        
      // Array of basisvalues
      double basisvalues[3] = {0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[1] *= std::sqrt(3.0);
      
      // Table(s) of coefficients
      static const double coefficients0[3] = \
      {0.471404520791032, 0.0, 0.333333333333333};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 3; r++)
      {
        values[3] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 26:
      {
        
      // Array of basisvalues
      double basisvalues[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[3] *= std::sqrt(7.5);
      
      // Table(s) of coefficients
      static const double coefficients0[6] = \
      {0.0, -0.173205080756888, -0.1, 0.121716123890037, 0.0942809041582064, 0.0544331053951817};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 6; r++)
      {
        values[4] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 27:
      {
        
      // Array of basisvalues
      double basisvalues[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[3] *= std::sqrt(7.5);
      
      // Table(s) of coefficients
      static const double coefficients0[6] = \
      {0.0, 0.173205080756888, -0.1, 0.121716123890037, -0.0942809041582063, 0.0544331053951818};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 6; r++)
      {
        values[4] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 28:
      {
        
      // Array of basisvalues
      double basisvalues[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[3] *= std::sqrt(7.5);
      
      // Table(s) of coefficients
      static const double coefficients0[6] = \
      {0.0, 0.0, 0.2, 0.0, 0.0, 0.163299316185545};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 6; r++)
      {
        values[4] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 29:
      {
        
      // Array of basisvalues
      double basisvalues[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[3] *= std::sqrt(7.5);
      
      // Table(s) of coefficients
      static const double coefficients0[6] = \
      {0.471404520791032, 0.23094010767585, 0.133333333333333, 0.0, 0.188561808316413, -0.163299316185545};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 6; r++)
      {
        values[4] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 30:
      {
        
      // Array of basisvalues
      double basisvalues[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[3] *= std::sqrt(7.5);
      
      // Table(s) of coefficients
      static const double coefficients0[6] = \
      {0.471404520791031, -0.23094010767585, 0.133333333333333, 0.0, -0.188561808316413, -0.163299316185545};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 6; r++)
      {
        values[4] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 31:
      {
        
      // Array of basisvalues
      double basisvalues[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[3] *= std::sqrt(7.5);
      
      // Table(s) of coefficients
      static const double coefficients0[6] = \
      {0.471404520791032, 0.0, -0.266666666666667, -0.243432247780074, 0.0, 0.0544331053951817};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 6; r++)
      {
        values[4] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    }
    
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_7::_evaluate_basis_all(double * values,
                                        const double * x,
                                        const double * coordinate_dofs,
                                        int cell_orientation)
{
    // Helper variable to hold values of a single dof.
    double dof_values[5] = {0.0, 0.0, 0.0, 0.0, 0.0};
    
    // Loop dofs and call evaluate_basis
    for (unsigned int r = 0; r < 32; r++)
    {
      _evaluate_basis(r, dof_values, x, coordinate_dofs, cell_orientation);
      for (unsigned int s = 0; s < 5; s++)
      {
        values[r*5 + s] = dof_values[s];
      } // end loop over 's'
    } // end loop over 'r'
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_7::_evaluate_basis_derivatives(std::size_t i,
                                                std::size_t n,
                                                double * values,
                                                const double * x,
                                                const double * coordinate_dofs,
                                                int cell_orientation)
{
throw std::runtime_error("// Function evaluate_basis_derivatives not generated (compiled with -fno-evaluate_basis_derivatives)");
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_7::_evaluate_basis_derivatives_all(std::size_t n,
                                                    double * values,
                                                    const double * x,
                                                    const double * coordinate_dofs,
                                                    int cell_orientation)
{
    // Call evaluate_basis_all if order of derivatives is equal to zero.
    if (n == 0)
    {
      _evaluate_basis_all(values, x, coordinate_dofs, cell_orientation);
      return ;
    }
    
    // Compute number of derivatives.
    unsigned int num_derivatives = 1;
    for (unsigned int r = 0; r < n; r++)
    {
      num_derivatives *= 2;
    } // end loop over 'r'
    
    // Set values equal to zero.
    for (unsigned int r = 0; r < 32; r++)
    {
      for (unsigned int s = 0; s < 5*num_derivatives; s++)
      {
        values[r*5*num_derivatives + s] = 0.0;
      } // end loop over 's'
    } // end loop over 'r'
    
    // If order of derivatives is greater than the maximum polynomial degree, return zeros.
    if (n > 3)
    {
      return ;
    }
    
    // Helper variable to hold values of a single dof.
    double dof_values[40];
    for (unsigned int r = 0; r < 40; r++)
    {
      dof_values[r] = 0.0;
    } // end loop over 'r'
    
    // Loop dofs and call evaluate_basis_derivatives.
    for (unsigned int r = 0; r < 32; r++)
    {
      _evaluate_basis_derivatives(r, n, dof_values, x, coordinate_dofs, cell_orientation);
      for (unsigned int s = 0; s < 5*num_derivatives; s++)
      {
        values[r*5*num_derivatives + s] = dof_values[s];
      } // end loop over 's'
    } // end loop over 'r'
}

double ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_7::evaluate_dof(std::size_t i,
                                   const ufc::function& f,
                                   const double * coordinate_dofs,
                                   int cell_orientation,
                                   const ufc::cell& c) const
{
    // Declare variables for result of evaluation
    double vals[5];
    
    // Declare variable for physical coordinates
    double y[2];
    switch (i)
    {
    case 0:
      {
        y[0] = coordinate_dofs[0];
      y[1] = coordinate_dofs[1];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 1:
      {
        y[0] = coordinate_dofs[2];
      y[1] = coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 2:
      {
        y[0] = coordinate_dofs[4];
      y[1] = coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 3:
      {
        y[0] = 0.666666666666667*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
      y[1] = 0.666666666666667*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 4:
      {
        y[0] = 0.333333333333333*coordinate_dofs[2] + 0.666666666666667*coordinate_dofs[4];
      y[1] = 0.333333333333333*coordinate_dofs[3] + 0.666666666666667*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 5:
      {
        y[0] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[4];
      y[1] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 6:
      {
        y[0] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[4];
      y[1] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 7:
      {
        y[0] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2];
      y[1] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 8:
      {
        y[0] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[2];
      y[1] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 9:
      {
        y[0] = 0.333333333333333*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
      y[1] = 0.333333333333333*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 10:
      {
        y[0] = coordinate_dofs[0];
      y[1] = coordinate_dofs[1];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    case 11:
      {
        y[0] = coordinate_dofs[2];
      y[1] = coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    case 12:
      {
        y[0] = coordinate_dofs[4];
      y[1] = coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    case 13:
      {
        y[0] = 0.666666666666667*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
      y[1] = 0.666666666666667*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    case 14:
      {
        y[0] = 0.333333333333333*coordinate_dofs[2] + 0.666666666666667*coordinate_dofs[4];
      y[1] = 0.333333333333333*coordinate_dofs[3] + 0.666666666666667*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    case 15:
      {
        y[0] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[4];
      y[1] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    case 16:
      {
        y[0] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[4];
      y[1] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    case 17:
      {
        y[0] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2];
      y[1] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    case 18:
      {
        y[0] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[2];
      y[1] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    case 19:
      {
        y[0] = 0.333333333333333*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
      y[1] = 0.333333333333333*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    case 20:
      {
        y[0] = coordinate_dofs[0];
      y[1] = coordinate_dofs[1];
      f.evaluate(vals, y, c);
      return vals[2];
        break;
      }
    case 21:
      {
        y[0] = coordinate_dofs[2];
      y[1] = coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[2];
        break;
      }
    case 22:
      {
        y[0] = coordinate_dofs[4];
      y[1] = coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[2];
        break;
      }
    case 23:
      {
        y[0] = coordinate_dofs[0];
      y[1] = coordinate_dofs[1];
      f.evaluate(vals, y, c);
      return vals[3];
        break;
      }
    case 24:
      {
        y[0] = coordinate_dofs[2];
      y[1] = coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[3];
        break;
      }
    case 25:
      {
        y[0] = coordinate_dofs[4];
      y[1] = coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[3];
        break;
      }
    case 26:
      {
        y[0] = coordinate_dofs[0];
      y[1] = coordinate_dofs[1];
      f.evaluate(vals, y, c);
      return vals[4];
        break;
      }
    case 27:
      {
        y[0] = coordinate_dofs[2];
      y[1] = coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[4];
        break;
      }
    case 28:
      {
        y[0] = coordinate_dofs[4];
      y[1] = coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[4];
        break;
      }
    case 29:
      {
        y[0] = 0.5*coordinate_dofs[2] + 0.5*coordinate_dofs[4];
      y[1] = 0.5*coordinate_dofs[3] + 0.5*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[4];
        break;
      }
    case 30:
      {
        y[0] = 0.5*coordinate_dofs[0] + 0.5*coordinate_dofs[4];
      y[1] = 0.5*coordinate_dofs[1] + 0.5*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[4];
        break;
      }
    case 31:
      {
        y[0] = 0.5*coordinate_dofs[0] + 0.5*coordinate_dofs[2];
      y[1] = 0.5*coordinate_dofs[1] + 0.5*coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[4];
        break;
      }
    }
    
    return 0.0;
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_7::evaluate_dofs(double * values,
                                  const ufc::function& f,
                                  const double * coordinate_dofs,
                                  int cell_orientation,
                                  const ufc::cell& c) const
{
    // Declare variables for result of evaluation
    double vals[5];
    
    // Declare variable for physical coordinates
    double y[2];
    y[0] = coordinate_dofs[0];
    y[1] = coordinate_dofs[1];
    f.evaluate(vals, y, c);
    values[0] = vals[0];
    y[0] = coordinate_dofs[2];
    y[1] = coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[1] = vals[0];
    y[0] = coordinate_dofs[4];
    y[1] = coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[2] = vals[0];
    y[0] = 0.666666666666667*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    y[1] = 0.666666666666667*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[3] = vals[0];
    y[0] = 0.333333333333333*coordinate_dofs[2] + 0.666666666666667*coordinate_dofs[4];
    y[1] = 0.333333333333333*coordinate_dofs[3] + 0.666666666666667*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[4] = vals[0];
    y[0] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[4];
    y[1] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[5] = vals[0];
    y[0] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[4];
    y[1] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[6] = vals[0];
    y[0] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2];
    y[1] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[7] = vals[0];
    y[0] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[2];
    y[1] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[8] = vals[0];
    y[0] = 0.333333333333333*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    y[1] = 0.333333333333333*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[9] = vals[0];
    y[0] = coordinate_dofs[0];
    y[1] = coordinate_dofs[1];
    f.evaluate(vals, y, c);
    values[10] = vals[1];
    y[0] = coordinate_dofs[2];
    y[1] = coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[11] = vals[1];
    y[0] = coordinate_dofs[4];
    y[1] = coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[12] = vals[1];
    y[0] = 0.666666666666667*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    y[1] = 0.666666666666667*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[13] = vals[1];
    y[0] = 0.333333333333333*coordinate_dofs[2] + 0.666666666666667*coordinate_dofs[4];
    y[1] = 0.333333333333333*coordinate_dofs[3] + 0.666666666666667*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[14] = vals[1];
    y[0] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[4];
    y[1] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[15] = vals[1];
    y[0] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[4];
    y[1] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[16] = vals[1];
    y[0] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2];
    y[1] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[17] = vals[1];
    y[0] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[2];
    y[1] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[18] = vals[1];
    y[0] = 0.333333333333333*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    y[1] = 0.333333333333333*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[19] = vals[1];
    y[0] = coordinate_dofs[0];
    y[1] = coordinate_dofs[1];
    f.evaluate(vals, y, c);
    values[20] = vals[2];
    y[0] = coordinate_dofs[2];
    y[1] = coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[21] = vals[2];
    y[0] = coordinate_dofs[4];
    y[1] = coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[22] = vals[2];
    y[0] = coordinate_dofs[0];
    y[1] = coordinate_dofs[1];
    f.evaluate(vals, y, c);
    values[23] = vals[3];
    y[0] = coordinate_dofs[2];
    y[1] = coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[24] = vals[3];
    y[0] = coordinate_dofs[4];
    y[1] = coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[25] = vals[3];
    y[0] = coordinate_dofs[0];
    y[1] = coordinate_dofs[1];
    f.evaluate(vals, y, c);
    values[26] = vals[4];
    y[0] = coordinate_dofs[2];
    y[1] = coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[27] = vals[4];
    y[0] = coordinate_dofs[4];
    y[1] = coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[28] = vals[4];
    y[0] = 0.5*coordinate_dofs[2] + 0.5*coordinate_dofs[4];
    y[1] = 0.5*coordinate_dofs[3] + 0.5*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[29] = vals[4];
    y[0] = 0.5*coordinate_dofs[0] + 0.5*coordinate_dofs[4];
    y[1] = 0.5*coordinate_dofs[1] + 0.5*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[30] = vals[4];
    y[0] = 0.5*coordinate_dofs[0] + 0.5*coordinate_dofs[2];
    y[1] = 0.5*coordinate_dofs[1] + 0.5*coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[31] = vals[4];
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_7::interpolate_vertex_values(double * vertex_values,
                                              const double * dof_values,
                                              const double * coordinate_dofs,
                                              int cell_orientation,
                                              const ufc::cell& c) const
{
    // Evaluate function and change variables
    vertex_values[0] = dof_values[0];
    vertex_values[5] = dof_values[1];
    vertex_values[10] = dof_values[2];
    // Evaluate function and change variables
    vertex_values[1] = dof_values[10];
    vertex_values[6] = dof_values[11];
    vertex_values[11] = dof_values[12];
    // Evaluate function and change variables
    vertex_values[2] = dof_values[20];
    vertex_values[7] = dof_values[21];
    vertex_values[12] = dof_values[22];
    // Evaluate function and change variables
    vertex_values[3] = dof_values[23];
    vertex_values[8] = dof_values[24];
    vertex_values[13] = dof_values[25];
    // Evaluate function and change variables
    vertex_values[4] = dof_values[26];
    vertex_values[9] = dof_values[27];
    vertex_values[14] = dof_values[28];
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_7::tabulate_dof_coordinates(double * dof_coordinates,
                                             const double * coordinate_dofs) const
{
    dof_coordinates[0] = coordinate_dofs[0];
    dof_coordinates[1] = coordinate_dofs[1];
    dof_coordinates[2] = coordinate_dofs[2];
    dof_coordinates[3] = coordinate_dofs[3];
    dof_coordinates[4] = coordinate_dofs[4];
    dof_coordinates[5] = coordinate_dofs[5];
    dof_coordinates[6] = 0.666666666666667*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    dof_coordinates[7] = 0.666666666666667*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
    dof_coordinates[8] = 0.333333333333333*coordinate_dofs[2] + 0.666666666666667*coordinate_dofs[4];
    dof_coordinates[9] = 0.333333333333333*coordinate_dofs[3] + 0.666666666666667*coordinate_dofs[5];
    dof_coordinates[10] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[4];
    dof_coordinates[11] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[5];
    dof_coordinates[12] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[4];
    dof_coordinates[13] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[5];
    dof_coordinates[14] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2];
    dof_coordinates[15] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3];
    dof_coordinates[16] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[2];
    dof_coordinates[17] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[3];
    dof_coordinates[18] = 0.333333333333333*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    dof_coordinates[19] = 0.333333333333333*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
    dof_coordinates[20] = coordinate_dofs[0];
    dof_coordinates[21] = coordinate_dofs[1];
    dof_coordinates[22] = coordinate_dofs[2];
    dof_coordinates[23] = coordinate_dofs[3];
    dof_coordinates[24] = coordinate_dofs[4];
    dof_coordinates[25] = coordinate_dofs[5];
    dof_coordinates[26] = 0.666666666666667*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    dof_coordinates[27] = 0.666666666666667*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
    dof_coordinates[28] = 0.333333333333333*coordinate_dofs[2] + 0.666666666666667*coordinate_dofs[4];
    dof_coordinates[29] = 0.333333333333333*coordinate_dofs[3] + 0.666666666666667*coordinate_dofs[5];
    dof_coordinates[30] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[4];
    dof_coordinates[31] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[5];
    dof_coordinates[32] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[4];
    dof_coordinates[33] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[5];
    dof_coordinates[34] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2];
    dof_coordinates[35] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3];
    dof_coordinates[36] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[2];
    dof_coordinates[37] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[3];
    dof_coordinates[38] = 0.333333333333333*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    dof_coordinates[39] = 0.333333333333333*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
    dof_coordinates[40] = coordinate_dofs[0];
    dof_coordinates[41] = coordinate_dofs[1];
    dof_coordinates[42] = coordinate_dofs[2];
    dof_coordinates[43] = coordinate_dofs[3];
    dof_coordinates[44] = coordinate_dofs[4];
    dof_coordinates[45] = coordinate_dofs[5];
    dof_coordinates[46] = coordinate_dofs[0];
    dof_coordinates[47] = coordinate_dofs[1];
    dof_coordinates[48] = coordinate_dofs[2];
    dof_coordinates[49] = coordinate_dofs[3];
    dof_coordinates[50] = coordinate_dofs[4];
    dof_coordinates[51] = coordinate_dofs[5];
    dof_coordinates[52] = coordinate_dofs[0];
    dof_coordinates[53] = coordinate_dofs[1];
    dof_coordinates[54] = coordinate_dofs[2];
    dof_coordinates[55] = coordinate_dofs[3];
    dof_coordinates[56] = coordinate_dofs[4];
    dof_coordinates[57] = coordinate_dofs[5];
    dof_coordinates[58] = 0.5*coordinate_dofs[2] + 0.5*coordinate_dofs[4];
    dof_coordinates[59] = 0.5*coordinate_dofs[3] + 0.5*coordinate_dofs[5];
    dof_coordinates[60] = 0.5*coordinate_dofs[0] + 0.5*coordinate_dofs[4];
    dof_coordinates[61] = 0.5*coordinate_dofs[1] + 0.5*coordinate_dofs[5];
    dof_coordinates[62] = 0.5*coordinate_dofs[0] + 0.5*coordinate_dofs[2];
    dof_coordinates[63] = 0.5*coordinate_dofs[1] + 0.5*coordinate_dofs[3];
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_7::num_sub_elements() const
{
    return 3;
}

ufc::finite_element * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_7::create_sub_element(std::size_t i) const
{
    switch (i)
    {
    case 0:
      {
        return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_3();
        break;
      }
    case 1:
      {
        return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_5();
        break;
      }
    case 2:
      {
        return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_6();
        break;
      }
    }
    
    return 0;
}

ufc::finite_element * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_7::create() const
{
    return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_7();
}


class ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_0: public ufc::dofmap
{
public:

  ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_0();

  ~ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_0() override;

  const char * signature() const final override;

  bool needs_mesh_entities(std::size_t d) const final override;

  std::size_t topological_dimension() const final override;

  std::size_t global_dimension(const std::vector<std::size_t>&
                               num_global_entities) const final override;

  std::size_t num_element_dofs() const final override;

  std::size_t num_facet_dofs() const final override;

  std::size_t num_entity_dofs(std::size_t d) const final override;

  void tabulate_dofs(std::size_t * dofs,
                     const std::vector<std::size_t>& num_global_entities,
                     const std::vector<std::vector<std::size_t>>& entity_indices) const final override;

  void tabulate_facet_dofs(std::size_t * dofs,
                           std::size_t facet) const final override;

  void tabulate_entity_dofs(std::size_t * dofs,
                            std::size_t d, std::size_t i) const final override;

  std::size_t num_sub_dofmaps() const final override;

  ufc::dofmap * create_sub_dofmap(std::size_t i) const final override;

  ufc::dofmap * create() const final override;

};

extern "C" DLL_EXPORT ufc::dofmap * create_ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_0()
{
  return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_0();
}

ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_0::ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_0() : ufc::dofmap()
{
    // Do nothing
}

ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_0::~ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_0()
{
    // Do nothing
}

const char * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_0::signature() const
{
    return "FFC dofmap for FiniteElement('Real', triangle, 0)";
}

bool ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_0::needs_mesh_entities(std::size_t d) const
{
    switch (d)
    {
    case 0:
      {
        return false;
        break;
      }
    case 1:
      {
        return false;
        break;
      }
    case 2:
      {
        return false;
        break;
      }
    }
    
    return false;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_0::topological_dimension() const
{
    return 2;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_0::global_dimension(const std::vector<std::size_t>&
                                            num_global_entities) const
{
    return 1;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_0::num_element_dofs() const
{
    return 1;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_0::num_facet_dofs() const
{
    return 0;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_0::num_entity_dofs(std::size_t d) const
{
    switch (d)
    {
    case 0:
      {
        return 0;
        break;
      }
    case 1:
      {
        return 0;
        break;
      }
    case 2:
      {
        return 1;
        break;
      }
    }
    
    return 0;
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_0::tabulate_dofs(std::size_t * dofs,
                                  const std::vector<std::size_t>& num_global_entities,
                                  const std::vector<std::vector<std::size_t>>& entity_indices) const
{
    dofs[0] = 0;
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_0::tabulate_facet_dofs(std::size_t * dofs,
                                        std::size_t facet) const
{
    switch (facet)
    {
    case 0:
      {
        
        break;
      }
    case 1:
      {
        
        break;
      }
    case 2:
      {
        
        break;
      }
    }
    
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_0::tabulate_entity_dofs(std::size_t * dofs,
                                  std::size_t d, std::size_t i) const
{
    if (d > 2)
    {
    throw std::runtime_error("d is larger than dimension (2)");
    }
    
    switch (d)
    {
    case 0:
      {
        
        break;
      }
    case 1:
      {
        
        break;
      }
    case 2:
      {
        if (i > 0)
      {
      throw std::runtime_error("i is larger than number of entities (0)");
      }
      
      dofs[0] = 0;
        break;
      }
    }
    
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_0::num_sub_dofmaps() const
{
    return 0;
}

ufc::dofmap * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_0::create_sub_dofmap(std::size_t i) const
{
    return 0;
}

ufc::dofmap * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_0::create() const
{
    return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_0();
}


class ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_1: public ufc::dofmap
{
public:

  ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_1();

  ~ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_1() override;

  const char * signature() const final override;

  bool needs_mesh_entities(std::size_t d) const final override;

  std::size_t topological_dimension() const final override;

  std::size_t global_dimension(const std::vector<std::size_t>&
                               num_global_entities) const final override;

  std::size_t num_element_dofs() const final override;

  std::size_t num_facet_dofs() const final override;

  std::size_t num_entity_dofs(std::size_t d) const final override;

  void tabulate_dofs(std::size_t * dofs,
                     const std::vector<std::size_t>& num_global_entities,
                     const std::vector<std::vector<std::size_t>>& entity_indices) const final override;

  void tabulate_facet_dofs(std::size_t * dofs,
                           std::size_t facet) const final override;

  void tabulate_entity_dofs(std::size_t * dofs,
                            std::size_t d, std::size_t i) const final override;

  std::size_t num_sub_dofmaps() const final override;

  ufc::dofmap * create_sub_dofmap(std::size_t i) const final override;

  ufc::dofmap * create() const final override;

};

extern "C" DLL_EXPORT ufc::dofmap * create_ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_1()
{
  return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_1();
}

ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_1::ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_1() : ufc::dofmap()
{
    // Do nothing
}

ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_1::~ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_1()
{
    // Do nothing
}

const char * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_1::signature() const
{
    return "FFC dofmap for VectorElement(FiniteElement('Real', triangle, 0), dim=2)";
}

bool ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_1::needs_mesh_entities(std::size_t d) const
{
    switch (d)
    {
    case 0:
      {
        return false;
        break;
      }
    case 1:
      {
        return false;
        break;
      }
    case 2:
      {
        return true;
        break;
      }
    }
    
    return false;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_1::topological_dimension() const
{
    return 2;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_1::global_dimension(const std::vector<std::size_t>&
                                            num_global_entities) const
{
    return 2;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_1::num_element_dofs() const
{
    return 2;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_1::num_facet_dofs() const
{
    return 0;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_1::num_entity_dofs(std::size_t d) const
{
    switch (d)
    {
    case 0:
      {
        return 0;
        break;
      }
    case 1:
      {
        return 0;
        break;
      }
    case 2:
      {
        return 2;
        break;
      }
    }
    
    return 0;
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_1::tabulate_dofs(std::size_t * dofs,
                                  const std::vector<std::size_t>& num_global_entities,
                                  const std::vector<std::vector<std::size_t>>& entity_indices) const
{
    unsigned int offset = 0;
    dofs[0] = offset;
    offset += 1;
    dofs[1] = offset;
    offset += 1;
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_1::tabulate_facet_dofs(std::size_t * dofs,
                                        std::size_t facet) const
{
    switch (facet)
    {
    case 0:
      {
        
        break;
      }
    case 1:
      {
        
        break;
      }
    case 2:
      {
        
        break;
      }
    }
    
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_1::tabulate_entity_dofs(std::size_t * dofs,
                                  std::size_t d, std::size_t i) const
{
    if (d > 2)
    {
    throw std::runtime_error("d is larger than dimension (2)");
    }
    
    switch (d)
    {
    case 0:
      {
        
        break;
      }
    case 1:
      {
        
        break;
      }
    case 2:
      {
        if (i > 0)
      {
      throw std::runtime_error("i is larger than number of entities (0)");
      }
      
      dofs[0] = 0;
      dofs[1] = 1;
        break;
      }
    }
    
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_1::num_sub_dofmaps() const
{
    return 2;
}

ufc::dofmap * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_1::create_sub_dofmap(std::size_t i) const
{
    switch (i)
    {
    case 0:
      {
        return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_0();
        break;
      }
    case 1:
      {
        return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_0();
        break;
      }
    }
    
    return 0;
}

ufc::dofmap * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_1::create() const
{
    return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_1();
}


class ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_2: public ufc::dofmap
{
public:

  ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_2();

  ~ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_2() override;

  const char * signature() const final override;

  bool needs_mesh_entities(std::size_t d) const final override;

  std::size_t topological_dimension() const final override;

  std::size_t global_dimension(const std::vector<std::size_t>&
                               num_global_entities) const final override;

  std::size_t num_element_dofs() const final override;

  std::size_t num_facet_dofs() const final override;

  std::size_t num_entity_dofs(std::size_t d) const final override;

  void tabulate_dofs(std::size_t * dofs,
                     const std::vector<std::size_t>& num_global_entities,
                     const std::vector<std::vector<std::size_t>>& entity_indices) const final override;

  void tabulate_facet_dofs(std::size_t * dofs,
                           std::size_t facet) const final override;

  void tabulate_entity_dofs(std::size_t * dofs,
                            std::size_t d, std::size_t i) const final override;

  std::size_t num_sub_dofmaps() const final override;

  ufc::dofmap * create_sub_dofmap(std::size_t i) const final override;

  ufc::dofmap * create() const final override;

};

extern "C" DLL_EXPORT ufc::dofmap * create_ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_2()
{
  return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_2();
}

ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_2::ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_2() : ufc::dofmap()
{
    // Do nothing
}

ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_2::~ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_2()
{
    // Do nothing
}

const char * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_2::signature() const
{
    return "FFC dofmap for FiniteElement('Lagrange', triangle, 3)";
}

bool ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_2::needs_mesh_entities(std::size_t d) const
{
    switch (d)
    {
    case 0:
      {
        return true;
        break;
      }
    case 1:
      {
        return true;
        break;
      }
    case 2:
      {
        return true;
        break;
      }
    }
    
    return false;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_2::topological_dimension() const
{
    return 2;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_2::global_dimension(const std::vector<std::size_t>&
                                            num_global_entities) const
{
    return num_global_entities[0] + 2*num_global_entities[1] + num_global_entities[2];
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_2::num_element_dofs() const
{
    return 10;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_2::num_facet_dofs() const
{
    return 4;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_2::num_entity_dofs(std::size_t d) const
{
    switch (d)
    {
    case 0:
      {
        return 1;
        break;
      }
    case 1:
      {
        return 2;
        break;
      }
    case 2:
      {
        return 1;
        break;
      }
    }
    
    return 0;
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_2::tabulate_dofs(std::size_t * dofs,
                                  const std::vector<std::size_t>& num_global_entities,
                                  const std::vector<std::vector<std::size_t>>& entity_indices) const
{
    unsigned int offset = 0;
    dofs[0] = offset + entity_indices[0][0];
    dofs[1] = offset + entity_indices[0][1];
    dofs[2] = offset + entity_indices[0][2];
    offset += num_global_entities[0];
    dofs[3] = offset + 2*entity_indices[1][0];
    dofs[4] = offset + 2*entity_indices[1][0] + 1;
    dofs[5] = offset + 2*entity_indices[1][1];
    dofs[6] = offset + 2*entity_indices[1][1] + 1;
    dofs[7] = offset + 2*entity_indices[1][2];
    dofs[8] = offset + 2*entity_indices[1][2] + 1;
    offset += 2*num_global_entities[1];
    dofs[9] = offset + entity_indices[2][0];
    offset += num_global_entities[2];
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_2::tabulate_facet_dofs(std::size_t * dofs,
                                        std::size_t facet) const
{
    switch (facet)
    {
    case 0:
      {
        dofs[0] = 1;
      dofs[1] = 2;
      dofs[2] = 3;
      dofs[3] = 4;
        break;
      }
    case 1:
      {
        dofs[0] = 0;
      dofs[1] = 2;
      dofs[2] = 5;
      dofs[3] = 6;
        break;
      }
    case 2:
      {
        dofs[0] = 0;
      dofs[1] = 1;
      dofs[2] = 7;
      dofs[3] = 8;
        break;
      }
    }
    
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_2::tabulate_entity_dofs(std::size_t * dofs,
                                  std::size_t d, std::size_t i) const
{
    if (d > 2)
    {
    throw std::runtime_error("d is larger than dimension (2)");
    }
    
    switch (d)
    {
    case 0:
      {
        if (i > 2)
      {
      throw std::runtime_error("i is larger than number of entities (2)");
      }
      
      switch (i)
      {
      case 0:
        {
          dofs[0] = 0;
          break;
        }
      case 1:
        {
          dofs[0] = 1;
          break;
        }
      case 2:
        {
          dofs[0] = 2;
          break;
        }
      }
      
        break;
      }
    case 1:
      {
        if (i > 2)
      {
      throw std::runtime_error("i is larger than number of entities (2)");
      }
      
      switch (i)
      {
      case 0:
        {
          dofs[0] = 3;
        dofs[1] = 4;
          break;
        }
      case 1:
        {
          dofs[0] = 5;
        dofs[1] = 6;
          break;
        }
      case 2:
        {
          dofs[0] = 7;
        dofs[1] = 8;
          break;
        }
      }
      
        break;
      }
    case 2:
      {
        if (i > 0)
      {
      throw std::runtime_error("i is larger than number of entities (0)");
      }
      
      dofs[0] = 9;
        break;
      }
    }
    
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_2::num_sub_dofmaps() const
{
    return 0;
}

ufc::dofmap * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_2::create_sub_dofmap(std::size_t i) const
{
    return 0;
}

ufc::dofmap * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_2::create() const
{
    return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_2();
}


class ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_3: public ufc::dofmap
{
public:

  ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_3();

  ~ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_3() override;

  const char * signature() const final override;

  bool needs_mesh_entities(std::size_t d) const final override;

  std::size_t topological_dimension() const final override;

  std::size_t global_dimension(const std::vector<std::size_t>&
                               num_global_entities) const final override;

  std::size_t num_element_dofs() const final override;

  std::size_t num_facet_dofs() const final override;

  std::size_t num_entity_dofs(std::size_t d) const final override;

  void tabulate_dofs(std::size_t * dofs,
                     const std::vector<std::size_t>& num_global_entities,
                     const std::vector<std::vector<std::size_t>>& entity_indices) const final override;

  void tabulate_facet_dofs(std::size_t * dofs,
                           std::size_t facet) const final override;

  void tabulate_entity_dofs(std::size_t * dofs,
                            std::size_t d, std::size_t i) const final override;

  std::size_t num_sub_dofmaps() const final override;

  ufc::dofmap * create_sub_dofmap(std::size_t i) const final override;

  ufc::dofmap * create() const final override;

};

extern "C" DLL_EXPORT ufc::dofmap * create_ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_3()
{
  return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_3();
}

ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_3::ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_3() : ufc::dofmap()
{
    // Do nothing
}

ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_3::~ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_3()
{
    // Do nothing
}

const char * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_3::signature() const
{
    return "FFC dofmap for VectorElement(FiniteElement('Lagrange', triangle, 3), dim=2)";
}

bool ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_3::needs_mesh_entities(std::size_t d) const
{
    switch (d)
    {
    case 0:
      {
        return true;
        break;
      }
    case 1:
      {
        return true;
        break;
      }
    case 2:
      {
        return true;
        break;
      }
    }
    
    return false;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_3::topological_dimension() const
{
    return 2;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_3::global_dimension(const std::vector<std::size_t>&
                                            num_global_entities) const
{
    return 2*num_global_entities[0] + 4*num_global_entities[1] + 2*num_global_entities[2];
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_3::num_element_dofs() const
{
    return 20;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_3::num_facet_dofs() const
{
    return 8;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_3::num_entity_dofs(std::size_t d) const
{
    switch (d)
    {
    case 0:
      {
        return 2;
        break;
      }
    case 1:
      {
        return 4;
        break;
      }
    case 2:
      {
        return 2;
        break;
      }
    }
    
    return 0;
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_3::tabulate_dofs(std::size_t * dofs,
                                  const std::vector<std::size_t>& num_global_entities,
                                  const std::vector<std::vector<std::size_t>>& entity_indices) const
{
    unsigned int offset = 0;
    dofs[0] = offset + entity_indices[0][0];
    dofs[1] = offset + entity_indices[0][1];
    dofs[2] = offset + entity_indices[0][2];
    offset += num_global_entities[0];
    dofs[3] = offset + 2*entity_indices[1][0];
    dofs[4] = offset + 2*entity_indices[1][0] + 1;
    dofs[5] = offset + 2*entity_indices[1][1];
    dofs[6] = offset + 2*entity_indices[1][1] + 1;
    dofs[7] = offset + 2*entity_indices[1][2];
    dofs[8] = offset + 2*entity_indices[1][2] + 1;
    offset += 2*num_global_entities[1];
    dofs[9] = offset + entity_indices[2][0];
    offset += num_global_entities[2];
    dofs[10] = offset + entity_indices[0][0];
    dofs[11] = offset + entity_indices[0][1];
    dofs[12] = offset + entity_indices[0][2];
    offset += num_global_entities[0];
    dofs[13] = offset + 2*entity_indices[1][0];
    dofs[14] = offset + 2*entity_indices[1][0] + 1;
    dofs[15] = offset + 2*entity_indices[1][1];
    dofs[16] = offset + 2*entity_indices[1][1] + 1;
    dofs[17] = offset + 2*entity_indices[1][2];
    dofs[18] = offset + 2*entity_indices[1][2] + 1;
    offset += 2*num_global_entities[1];
    dofs[19] = offset + entity_indices[2][0];
    offset += num_global_entities[2];
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_3::tabulate_facet_dofs(std::size_t * dofs,
                                        std::size_t facet) const
{
    switch (facet)
    {
    case 0:
      {
        dofs[0] = 1;
      dofs[1] = 2;
      dofs[2] = 3;
      dofs[3] = 4;
      dofs[4] = 11;
      dofs[5] = 12;
      dofs[6] = 13;
      dofs[7] = 14;
        break;
      }
    case 1:
      {
        dofs[0] = 0;
      dofs[1] = 2;
      dofs[2] = 5;
      dofs[3] = 6;
      dofs[4] = 10;
      dofs[5] = 12;
      dofs[6] = 15;
      dofs[7] = 16;
        break;
      }
    case 2:
      {
        dofs[0] = 0;
      dofs[1] = 1;
      dofs[2] = 7;
      dofs[3] = 8;
      dofs[4] = 10;
      dofs[5] = 11;
      dofs[6] = 17;
      dofs[7] = 18;
        break;
      }
    }
    
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_3::tabulate_entity_dofs(std::size_t * dofs,
                                  std::size_t d, std::size_t i) const
{
    if (d > 2)
    {
    throw std::runtime_error("d is larger than dimension (2)");
    }
    
    switch (d)
    {
    case 0:
      {
        if (i > 2)
      {
      throw std::runtime_error("i is larger than number of entities (2)");
      }
      
      switch (i)
      {
      case 0:
        {
          dofs[0] = 0;
        dofs[1] = 10;
          break;
        }
      case 1:
        {
          dofs[0] = 1;
        dofs[1] = 11;
          break;
        }
      case 2:
        {
          dofs[0] = 2;
        dofs[1] = 12;
          break;
        }
      }
      
        break;
      }
    case 1:
      {
        if (i > 2)
      {
      throw std::runtime_error("i is larger than number of entities (2)");
      }
      
      switch (i)
      {
      case 0:
        {
          dofs[0] = 3;
        dofs[1] = 4;
        dofs[2] = 13;
        dofs[3] = 14;
          break;
        }
      case 1:
        {
          dofs[0] = 5;
        dofs[1] = 6;
        dofs[2] = 15;
        dofs[3] = 16;
          break;
        }
      case 2:
        {
          dofs[0] = 7;
        dofs[1] = 8;
        dofs[2] = 17;
        dofs[3] = 18;
          break;
        }
      }
      
        break;
      }
    case 2:
      {
        if (i > 0)
      {
      throw std::runtime_error("i is larger than number of entities (0)");
      }
      
      dofs[0] = 9;
      dofs[1] = 19;
        break;
      }
    }
    
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_3::num_sub_dofmaps() const
{
    return 2;
}

ufc::dofmap * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_3::create_sub_dofmap(std::size_t i) const
{
    switch (i)
    {
    case 0:
      {
        return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_2();
        break;
      }
    case 1:
      {
        return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_2();
        break;
      }
    }
    
    return 0;
}

ufc::dofmap * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_3::create() const
{
    return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_3();
}


class ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_4: public ufc::dofmap
{
public:

  ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_4();

  ~ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_4() override;

  const char * signature() const final override;

  bool needs_mesh_entities(std::size_t d) const final override;

  std::size_t topological_dimension() const final override;

  std::size_t global_dimension(const std::vector<std::size_t>&
                               num_global_entities) const final override;

  std::size_t num_element_dofs() const final override;

  std::size_t num_facet_dofs() const final override;

  std::size_t num_entity_dofs(std::size_t d) const final override;

  void tabulate_dofs(std::size_t * dofs,
                     const std::vector<std::size_t>& num_global_entities,
                     const std::vector<std::vector<std::size_t>>& entity_indices) const final override;

  void tabulate_facet_dofs(std::size_t * dofs,
                           std::size_t facet) const final override;

  void tabulate_entity_dofs(std::size_t * dofs,
                            std::size_t d, std::size_t i) const final override;

  std::size_t num_sub_dofmaps() const final override;

  ufc::dofmap * create_sub_dofmap(std::size_t i) const final override;

  ufc::dofmap * create() const final override;

};

extern "C" DLL_EXPORT ufc::dofmap * create_ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_4()
{
  return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_4();
}

ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_4::ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_4() : ufc::dofmap()
{
    // Do nothing
}

ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_4::~ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_4()
{
    // Do nothing
}

const char * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_4::signature() const
{
    return "FFC dofmap for FiniteElement('Lagrange', triangle, 1)";
}

bool ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_4::needs_mesh_entities(std::size_t d) const
{
    switch (d)
    {
    case 0:
      {
        return true;
        break;
      }
    case 1:
      {
        return false;
        break;
      }
    case 2:
      {
        return false;
        break;
      }
    }
    
    return false;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_4::topological_dimension() const
{
    return 2;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_4::global_dimension(const std::vector<std::size_t>&
                                            num_global_entities) const
{
    return num_global_entities[0];
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_4::num_element_dofs() const
{
    return 3;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_4::num_facet_dofs() const
{
    return 2;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_4::num_entity_dofs(std::size_t d) const
{
    switch (d)
    {
    case 0:
      {
        return 1;
        break;
      }
    case 1:
      {
        return 0;
        break;
      }
    case 2:
      {
        return 0;
        break;
      }
    }
    
    return 0;
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_4::tabulate_dofs(std::size_t * dofs,
                                  const std::vector<std::size_t>& num_global_entities,
                                  const std::vector<std::vector<std::size_t>>& entity_indices) const
{
    dofs[0] = entity_indices[0][0];
    dofs[1] = entity_indices[0][1];
    dofs[2] = entity_indices[0][2];
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_4::tabulate_facet_dofs(std::size_t * dofs,
                                        std::size_t facet) const
{
    switch (facet)
    {
    case 0:
      {
        dofs[0] = 1;
      dofs[1] = 2;
        break;
      }
    case 1:
      {
        dofs[0] = 0;
      dofs[1] = 2;
        break;
      }
    case 2:
      {
        dofs[0] = 0;
      dofs[1] = 1;
        break;
      }
    }
    
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_4::tabulate_entity_dofs(std::size_t * dofs,
                                  std::size_t d, std::size_t i) const
{
    if (d > 2)
    {
    throw std::runtime_error("d is larger than dimension (2)");
    }
    
    switch (d)
    {
    case 0:
      {
        if (i > 2)
      {
      throw std::runtime_error("i is larger than number of entities (2)");
      }
      
      switch (i)
      {
      case 0:
        {
          dofs[0] = 0;
          break;
        }
      case 1:
        {
          dofs[0] = 1;
          break;
        }
      case 2:
        {
          dofs[0] = 2;
          break;
        }
      }
      
        break;
      }
    case 1:
      {
        
        break;
      }
    case 2:
      {
        
        break;
      }
    }
    
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_4::num_sub_dofmaps() const
{
    return 0;
}

ufc::dofmap * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_4::create_sub_dofmap(std::size_t i) const
{
    return 0;
}

ufc::dofmap * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_4::create() const
{
    return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_4();
}


class ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_5: public ufc::dofmap
{
public:

  ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_5();

  ~ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_5() override;

  const char * signature() const final override;

  bool needs_mesh_entities(std::size_t d) const final override;

  std::size_t topological_dimension() const final override;

  std::size_t global_dimension(const std::vector<std::size_t>&
                               num_global_entities) const final override;

  std::size_t num_element_dofs() const final override;

  std::size_t num_facet_dofs() const final override;

  std::size_t num_entity_dofs(std::size_t d) const final override;

  void tabulate_dofs(std::size_t * dofs,
                     const std::vector<std::size_t>& num_global_entities,
                     const std::vector<std::vector<std::size_t>>& entity_indices) const final override;

  void tabulate_facet_dofs(std::size_t * dofs,
                           std::size_t facet) const final override;

  void tabulate_entity_dofs(std::size_t * dofs,
                            std::size_t d, std::size_t i) const final override;

  std::size_t num_sub_dofmaps() const final override;

  ufc::dofmap * create_sub_dofmap(std::size_t i) const final override;

  ufc::dofmap * create() const final override;

};

extern "C" DLL_EXPORT ufc::dofmap * create_ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_5()
{
  return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_5();
}

ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_5::ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_5() : ufc::dofmap()
{
    // Do nothing
}

ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_5::~ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_5()
{
    // Do nothing
}

const char * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_5::signature() const
{
    return "FFC dofmap for VectorElement(FiniteElement('Lagrange', triangle, 1), dim=2)";
}

bool ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_5::needs_mesh_entities(std::size_t d) const
{
    switch (d)
    {
    case 0:
      {
        return true;
        break;
      }
    case 1:
      {
        return false;
        break;
      }
    case 2:
      {
        return false;
        break;
      }
    }
    
    return false;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_5::topological_dimension() const
{
    return 2;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_5::global_dimension(const std::vector<std::size_t>&
                                            num_global_entities) const
{
    return 2*num_global_entities[0];
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_5::num_element_dofs() const
{
    return 6;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_5::num_facet_dofs() const
{
    return 4;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_5::num_entity_dofs(std::size_t d) const
{
    switch (d)
    {
    case 0:
      {
        return 2;
        break;
      }
    case 1:
      {
        return 0;
        break;
      }
    case 2:
      {
        return 0;
        break;
      }
    }
    
    return 0;
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_5::tabulate_dofs(std::size_t * dofs,
                                  const std::vector<std::size_t>& num_global_entities,
                                  const std::vector<std::vector<std::size_t>>& entity_indices) const
{
    unsigned int offset = 0;
    dofs[0] = offset + entity_indices[0][0];
    dofs[1] = offset + entity_indices[0][1];
    dofs[2] = offset + entity_indices[0][2];
    offset += num_global_entities[0];
    dofs[3] = offset + entity_indices[0][0];
    dofs[4] = offset + entity_indices[0][1];
    dofs[5] = offset + entity_indices[0][2];
    offset += num_global_entities[0];
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_5::tabulate_facet_dofs(std::size_t * dofs,
                                        std::size_t facet) const
{
    switch (facet)
    {
    case 0:
      {
        dofs[0] = 1;
      dofs[1] = 2;
      dofs[2] = 4;
      dofs[3] = 5;
        break;
      }
    case 1:
      {
        dofs[0] = 0;
      dofs[1] = 2;
      dofs[2] = 3;
      dofs[3] = 5;
        break;
      }
    case 2:
      {
        dofs[0] = 0;
      dofs[1] = 1;
      dofs[2] = 3;
      dofs[3] = 4;
        break;
      }
    }
    
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_5::tabulate_entity_dofs(std::size_t * dofs,
                                  std::size_t d, std::size_t i) const
{
    if (d > 2)
    {
    throw std::runtime_error("d is larger than dimension (2)");
    }
    
    switch (d)
    {
    case 0:
      {
        if (i > 2)
      {
      throw std::runtime_error("i is larger than number of entities (2)");
      }
      
      switch (i)
      {
      case 0:
        {
          dofs[0] = 0;
        dofs[1] = 3;
          break;
        }
      case 1:
        {
          dofs[0] = 1;
        dofs[1] = 4;
          break;
        }
      case 2:
        {
          dofs[0] = 2;
        dofs[1] = 5;
          break;
        }
      }
      
        break;
      }
    case 1:
      {
        
        break;
      }
    case 2:
      {
        
        break;
      }
    }
    
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_5::num_sub_dofmaps() const
{
    return 2;
}

ufc::dofmap * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_5::create_sub_dofmap(std::size_t i) const
{
    switch (i)
    {
    case 0:
      {
        return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_4();
        break;
      }
    case 1:
      {
        return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_4();
        break;
      }
    }
    
    return 0;
}

ufc::dofmap * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_5::create() const
{
    return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_5();
}


class ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_6: public ufc::dofmap
{
public:

  ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_6();

  ~ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_6() override;

  const char * signature() const final override;

  bool needs_mesh_entities(std::size_t d) const final override;

  std::size_t topological_dimension() const final override;

  std::size_t global_dimension(const std::vector<std::size_t>&
                               num_global_entities) const final override;

  std::size_t num_element_dofs() const final override;

  std::size_t num_facet_dofs() const final override;

  std::size_t num_entity_dofs(std::size_t d) const final override;

  void tabulate_dofs(std::size_t * dofs,
                     const std::vector<std::size_t>& num_global_entities,
                     const std::vector<std::vector<std::size_t>>& entity_indices) const final override;

  void tabulate_facet_dofs(std::size_t * dofs,
                           std::size_t facet) const final override;

  void tabulate_entity_dofs(std::size_t * dofs,
                            std::size_t d, std::size_t i) const final override;

  std::size_t num_sub_dofmaps() const final override;

  ufc::dofmap * create_sub_dofmap(std::size_t i) const final override;

  ufc::dofmap * create() const final override;

};

extern "C" DLL_EXPORT ufc::dofmap * create_ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_6()
{
  return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_6();
}

ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_6::ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_6() : ufc::dofmap()
{
    // Do nothing
}

ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_6::~ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_6()
{
    // Do nothing
}

const char * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_6::signature() const
{
    return "FFC dofmap for FiniteElement('Lagrange', triangle, 2)";
}

bool ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_6::needs_mesh_entities(std::size_t d) const
{
    switch (d)
    {
    case 0:
      {
        return true;
        break;
      }
    case 1:
      {
        return true;
        break;
      }
    case 2:
      {
        return false;
        break;
      }
    }
    
    return false;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_6::topological_dimension() const
{
    return 2;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_6::global_dimension(const std::vector<std::size_t>&
                                            num_global_entities) const
{
    return num_global_entities[0] + num_global_entities[1];
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_6::num_element_dofs() const
{
    return 6;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_6::num_facet_dofs() const
{
    return 3;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_6::num_entity_dofs(std::size_t d) const
{
    switch (d)
    {
    case 0:
      {
        return 1;
        break;
      }
    case 1:
      {
        return 1;
        break;
      }
    case 2:
      {
        return 0;
        break;
      }
    }
    
    return 0;
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_6::tabulate_dofs(std::size_t * dofs,
                                  const std::vector<std::size_t>& num_global_entities,
                                  const std::vector<std::vector<std::size_t>>& entity_indices) const
{
    unsigned int offset = 0;
    dofs[0] = offset + entity_indices[0][0];
    dofs[1] = offset + entity_indices[0][1];
    dofs[2] = offset + entity_indices[0][2];
    offset += num_global_entities[0];
    dofs[3] = offset + entity_indices[1][0];
    dofs[4] = offset + entity_indices[1][1];
    dofs[5] = offset + entity_indices[1][2];
    offset += num_global_entities[1];
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_6::tabulate_facet_dofs(std::size_t * dofs,
                                        std::size_t facet) const
{
    switch (facet)
    {
    case 0:
      {
        dofs[0] = 1;
      dofs[1] = 2;
      dofs[2] = 3;
        break;
      }
    case 1:
      {
        dofs[0] = 0;
      dofs[1] = 2;
      dofs[2] = 4;
        break;
      }
    case 2:
      {
        dofs[0] = 0;
      dofs[1] = 1;
      dofs[2] = 5;
        break;
      }
    }
    
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_6::tabulate_entity_dofs(std::size_t * dofs,
                                  std::size_t d, std::size_t i) const
{
    if (d > 2)
    {
    throw std::runtime_error("d is larger than dimension (2)");
    }
    
    switch (d)
    {
    case 0:
      {
        if (i > 2)
      {
      throw std::runtime_error("i is larger than number of entities (2)");
      }
      
      switch (i)
      {
      case 0:
        {
          dofs[0] = 0;
          break;
        }
      case 1:
        {
          dofs[0] = 1;
          break;
        }
      case 2:
        {
          dofs[0] = 2;
          break;
        }
      }
      
        break;
      }
    case 1:
      {
        if (i > 2)
      {
      throw std::runtime_error("i is larger than number of entities (2)");
      }
      
      switch (i)
      {
      case 0:
        {
          dofs[0] = 3;
          break;
        }
      case 1:
        {
          dofs[0] = 4;
          break;
        }
      case 2:
        {
          dofs[0] = 5;
          break;
        }
      }
      
        break;
      }
    case 2:
      {
        
        break;
      }
    }
    
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_6::num_sub_dofmaps() const
{
    return 0;
}

ufc::dofmap * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_6::create_sub_dofmap(std::size_t i) const
{
    return 0;
}

ufc::dofmap * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_6::create() const
{
    return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_6();
}


class ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_7: public ufc::dofmap
{
public:

  ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_7();

  ~ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_7() override;

  const char * signature() const final override;

  bool needs_mesh_entities(std::size_t d) const final override;

  std::size_t topological_dimension() const final override;

  std::size_t global_dimension(const std::vector<std::size_t>&
                               num_global_entities) const final override;

  std::size_t num_element_dofs() const final override;

  std::size_t num_facet_dofs() const final override;

  std::size_t num_entity_dofs(std::size_t d) const final override;

  void tabulate_dofs(std::size_t * dofs,
                     const std::vector<std::size_t>& num_global_entities,
                     const std::vector<std::vector<std::size_t>>& entity_indices) const final override;

  void tabulate_facet_dofs(std::size_t * dofs,
                           std::size_t facet) const final override;

  void tabulate_entity_dofs(std::size_t * dofs,
                            std::size_t d, std::size_t i) const final override;

  std::size_t num_sub_dofmaps() const final override;

  ufc::dofmap * create_sub_dofmap(std::size_t i) const final override;

  ufc::dofmap * create() const final override;

};

extern "C" DLL_EXPORT ufc::dofmap * create_ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_7()
{
  return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_7();
}

ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_7::ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_7() : ufc::dofmap()
{
    // Do nothing
}

ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_7::~ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_7()
{
    // Do nothing
}

const char * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_7::signature() const
{
    return "FFC dofmap for MixedElement(VectorElement(FiniteElement('Lagrange', triangle, 3), dim=2), VectorElement(FiniteElement('Lagrange', triangle, 1), dim=2), FiniteElement('Lagrange', triangle, 2))";
}

bool ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_7::needs_mesh_entities(std::size_t d) const
{
    switch (d)
    {
    case 0:
      {
        return true;
        break;
      }
    case 1:
      {
        return true;
        break;
      }
    case 2:
      {
        return true;
        break;
      }
    }
    
    return false;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_7::topological_dimension() const
{
    return 2;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_7::global_dimension(const std::vector<std::size_t>&
                                            num_global_entities) const
{
    return 5*num_global_entities[0] + 5*num_global_entities[1] + 2*num_global_entities[2];
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_7::num_element_dofs() const
{
    return 32;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_7::num_facet_dofs() const
{
    return 15;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_7::num_entity_dofs(std::size_t d) const
{
    switch (d)
    {
    case 0:
      {
        return 5;
        break;
      }
    case 1:
      {
        return 5;
        break;
      }
    case 2:
      {
        return 2;
        break;
      }
    }
    
    return 0;
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_7::tabulate_dofs(std::size_t * dofs,
                                  const std::vector<std::size_t>& num_global_entities,
                                  const std::vector<std::vector<std::size_t>>& entity_indices) const
{
    unsigned int offset = 0;
    dofs[0] = offset + entity_indices[0][0];
    dofs[1] = offset + entity_indices[0][1];
    dofs[2] = offset + entity_indices[0][2];
    offset += num_global_entities[0];
    dofs[3] = offset + 2*entity_indices[1][0];
    dofs[4] = offset + 2*entity_indices[1][0] + 1;
    dofs[5] = offset + 2*entity_indices[1][1];
    dofs[6] = offset + 2*entity_indices[1][1] + 1;
    dofs[7] = offset + 2*entity_indices[1][2];
    dofs[8] = offset + 2*entity_indices[1][2] + 1;
    offset += 2*num_global_entities[1];
    dofs[9] = offset + entity_indices[2][0];
    offset += num_global_entities[2];
    dofs[10] = offset + entity_indices[0][0];
    dofs[11] = offset + entity_indices[0][1];
    dofs[12] = offset + entity_indices[0][2];
    offset += num_global_entities[0];
    dofs[13] = offset + 2*entity_indices[1][0];
    dofs[14] = offset + 2*entity_indices[1][0] + 1;
    dofs[15] = offset + 2*entity_indices[1][1];
    dofs[16] = offset + 2*entity_indices[1][1] + 1;
    dofs[17] = offset + 2*entity_indices[1][2];
    dofs[18] = offset + 2*entity_indices[1][2] + 1;
    offset += 2*num_global_entities[1];
    dofs[19] = offset + entity_indices[2][0];
    offset += num_global_entities[2];
    dofs[20] = offset + entity_indices[0][0];
    dofs[21] = offset + entity_indices[0][1];
    dofs[22] = offset + entity_indices[0][2];
    offset += num_global_entities[0];
    dofs[23] = offset + entity_indices[0][0];
    dofs[24] = offset + entity_indices[0][1];
    dofs[25] = offset + entity_indices[0][2];
    offset += num_global_entities[0];
    dofs[26] = offset + entity_indices[0][0];
    dofs[27] = offset + entity_indices[0][1];
    dofs[28] = offset + entity_indices[0][2];
    offset += num_global_entities[0];
    dofs[29] = offset + entity_indices[1][0];
    dofs[30] = offset + entity_indices[1][1];
    dofs[31] = offset + entity_indices[1][2];
    offset += num_global_entities[1];
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_7::tabulate_facet_dofs(std::size_t * dofs,
                                        std::size_t facet) const
{
    switch (facet)
    {
    case 0:
      {
        dofs[0] = 1;
      dofs[1] = 2;
      dofs[2] = 3;
      dofs[3] = 4;
      dofs[4] = 11;
      dofs[5] = 12;
      dofs[6] = 13;
      dofs[7] = 14;
      dofs[8] = 21;
      dofs[9] = 22;
      dofs[10] = 24;
      dofs[11] = 25;
      dofs[12] = 27;
      dofs[13] = 28;
      dofs[14] = 29;
        break;
      }
    case 1:
      {
        dofs[0] = 0;
      dofs[1] = 2;
      dofs[2] = 5;
      dofs[3] = 6;
      dofs[4] = 10;
      dofs[5] = 12;
      dofs[6] = 15;
      dofs[7] = 16;
      dofs[8] = 20;
      dofs[9] = 22;
      dofs[10] = 23;
      dofs[11] = 25;
      dofs[12] = 26;
      dofs[13] = 28;
      dofs[14] = 30;
        break;
      }
    case 2:
      {
        dofs[0] = 0;
      dofs[1] = 1;
      dofs[2] = 7;
      dofs[3] = 8;
      dofs[4] = 10;
      dofs[5] = 11;
      dofs[6] = 17;
      dofs[7] = 18;
      dofs[8] = 20;
      dofs[9] = 21;
      dofs[10] = 23;
      dofs[11] = 24;
      dofs[12] = 26;
      dofs[13] = 27;
      dofs[14] = 31;
        break;
      }
    }
    
}

void ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_7::tabulate_entity_dofs(std::size_t * dofs,
                                  std::size_t d, std::size_t i) const
{
    if (d > 2)
    {
    throw std::runtime_error("d is larger than dimension (2)");
    }
    
    switch (d)
    {
    case 0:
      {
        if (i > 2)
      {
      throw std::runtime_error("i is larger than number of entities (2)");
      }
      
      switch (i)
      {
      case 0:
        {
          dofs[0] = 0;
        dofs[1] = 10;
        dofs[2] = 20;
        dofs[3] = 23;
        dofs[4] = 26;
          break;
        }
      case 1:
        {
          dofs[0] = 1;
        dofs[1] = 11;
        dofs[2] = 21;
        dofs[3] = 24;
        dofs[4] = 27;
          break;
        }
      case 2:
        {
          dofs[0] = 2;
        dofs[1] = 12;
        dofs[2] = 22;
        dofs[3] = 25;
        dofs[4] = 28;
          break;
        }
      }
      
        break;
      }
    case 1:
      {
        if (i > 2)
      {
      throw std::runtime_error("i is larger than number of entities (2)");
      }
      
      switch (i)
      {
      case 0:
        {
          dofs[0] = 3;
        dofs[1] = 4;
        dofs[2] = 13;
        dofs[3] = 14;
        dofs[4] = 29;
          break;
        }
      case 1:
        {
          dofs[0] = 5;
        dofs[1] = 6;
        dofs[2] = 15;
        dofs[3] = 16;
        dofs[4] = 30;
          break;
        }
      case 2:
        {
          dofs[0] = 7;
        dofs[1] = 8;
        dofs[2] = 17;
        dofs[3] = 18;
        dofs[4] = 31;
          break;
        }
      }
      
        break;
      }
    case 2:
      {
        if (i > 0)
      {
      throw std::runtime_error("i is larger than number of entities (0)");
      }
      
      dofs[0] = 9;
      dofs[1] = 19;
        break;
      }
    }
    
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_7::num_sub_dofmaps() const
{
    return 3;
}

ufc::dofmap * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_7::create_sub_dofmap(std::size_t i) const
{
    switch (i)
    {
    case 0:
      {
        return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_3();
        break;
      }
    case 1:
      {
        return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_5();
        break;
      }
    case 2:
      {
        return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_6();
        break;
      }
    }
    
    return 0;
}

ufc::dofmap * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_7::create() const
{
    return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_7();
}


class ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_cell_integral_0_1: public ufc::cell_integral
{
public:

  ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_cell_integral_0_1() : ufc::cell_integral()
  {
    
  }

  ~ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_cell_integral_0_1() override
  {
    
  }

  const std::vector<bool> & enabled_coefficients() const final override
  {
    static const std::vector<bool> enabled({true, true, false, true, true, true});
    return enabled;
  }

  void tabulate_tensor(double * A,
                       const double * const * w,
                       const double * coordinate_dofs,
                       int cell_orientation) const final override
  {
    // Compute Jacobian
    double J[4];
    compute_jacobian_triangle_2d(J, coordinate_dofs);
    
    // Compute Jacobian inverse and determinant
    double K[4];
    double detJ;
    compute_jacobian_inverse_triangle_2d(K, detJ, J);
    
    // Set scale factor
    const double det = std::abs(detJ);
    
    // Compute cell volume
    
    
    // Compute circumradius of triangle in 2D
    
    
    // Array of quadrature weights.
    static const double W25[25] = {0.0114650803515925, 0.0198040831320473, 0.0173415064313656, 0.0087554991821638, 0.00186555216687783, 0.0231612219294983, 0.0400072873861603, 0.0350325045033716, 0.0176874521104834, 0.0037687016953276, 0.0275289856644697, 0.0475518970579538, 0.0416389652151948, 0.021022967487322, 0.00447940679728133, 0.0231612219294983, 0.0400072873861603, 0.0350325045033716, 0.0176874521104834, 0.0037687016953276, 0.0114650803515925, 0.0198040831320473, 0.0173415064313656, 0.0087554991821638, 0.00186555216687783};
    // Quadrature points on the UFC reference element: (0.0450425935698037, 0.0398098570514687), (0.0376212523451112, 0.198013417873608), (0.0263646449444709, 0.437974810247386), (0.0142857943955714, 0.695464273353636), (0.00462228846504642, 0.901464914201174), (0.221578609552379, 0.0398098570514687), (0.185070710267389, 0.198013417873608), (0.129695936782254, 0.437974810247386), (0.0702762920082817, 0.695464273353636), (0.022738483063764, 0.901464914201174), (0.480095071474266, 0.0398098570514687), (0.400993291063196, 0.198013417873608), (0.281012594876307, 0.437974810247386), (0.152267863323182, 0.695464273353636), (0.0492675428994132, 0.901464914201174), (0.738611533396152, 0.0398098570514687), (0.616915871859002, 0.198013417873608), (0.43232925297036, 0.437974810247386), (0.234259434638082, 0.695464273353636), (0.0757966027350624, 0.901464914201174), (0.915147549378728, 0.0398098570514687), (0.764365329781281, 0.198013417873608), (0.535660544808143, 0.437974810247386), (0.290249932250792, 0.695464273353636), (0.09391279733378, 0.901464914201174)
    
    // Values of basis functions at quadrature points.
    static const double FE0_C0[25][32] = \
    {{0.595361771100889, 0.0363240630142744, 0.0329620582231266, -0.00697876330105451, -0.00710543413900175, 0.286154010031837, -0.144363814874519, 0.323767019699913, -0.160427557536749, 0.0443066477812843, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.144847707077251, 0.031491752557511, 0.0565093723571961, -0.0297392974343584, -0.0136089104009563, 0.880722068301204, -0.276497422020098, 0.167331423967527, -0.114798724929776, 0.153742030524499, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0638922318573472, 0.0233191863197456, -0.0471646056404561, -0.0478518692290422, 0.0163120554591612, 0.640806423249974, 0.331418250941681, 0.038574441798557, -0.0585247318831847, 0.167003080840912, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0211818331847306, 0.0133805365030048, 0.0326369349932555, -0.0427925717552781, 0.0485711762178744, -0.117406110387015, 0.986839108572759, -0.00241168327121223, -0.0178593517002865, 0.0778601276421671, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0579517721596659, 0.00452658789692551, 0.541134376806172, -0.0184907249626244, 0.0319586608616018, -0.273633189306433, 0.649316299328904, -0.00140306240948476, -0.001926326447778, 0.0105656060730508, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0969129145557494, 0.0495966310503562, 0.0329620582231266, -0.0133081629182568, -0.0349538534974921, 0.160876909651335, -0.116515395516028, 0.895428534283356, -0.246912783611135, 0.175913147778989, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0391667888544835, 0.0594654509565622, 0.0565093723571961, -0.0733496016702974, -0.0669464878724995, 0.467663868980969, -0.223159844548554, 0.437096058075966, -0.228522561505532, 0.610410534080672, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.045132154183368, 0.0638185648099453, -0.0471646056404561, -0.156158924075319, 0.0802441041051713, 0.253054939278284, 0.26748620229567, 0.074936267198872, -0.154146013447678, 0.663061619658879, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.045160818752146, 0.0496137334753148, 0.0326369349932555, -0.17356708239734, 0.238936811531546, -0.217903867034122, 0.796473473259088, -0.0220190689531468, -0.0584641485580774, 0.309132394931335, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0519031146003488, 0.0204647143413336, 0.541134376806172, -0.0859485068100625, 0.157214651192224, -0.23755901477889, 0.524060308998282, -0.00599217068695466, -0.00722668705539919, 0.041949213392946, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0591559090807405, -0.0591559090807406, 0.0329620582231266, 0.0378673122533802, -0.0757346245067602, 0.0378673122533802, -0.0757346245067602, 0.456668557219904, 0.456668557219904, 0.247747270005307, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.032436155693348, -0.0324361556933481, 0.0565093723571961, 0.0725265831052635, -0.145053166210527, 0.0725265831052634, -0.145053166210527, 0.146872235029605, 0.146872235029605, 0.859671635180817, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0255158526264418, 0.0255158526264419, -0.0471646056404561, -0.0869325766002103, 0.173865153200421, -0.0869325766002105, 0.173865153200421, -0.0557775204375564, -0.0557775204375564, 0.933822788062264, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0638199343796498, 0.0638199343796499, 0.0326369349932555, -0.258852571197658, 0.517705142395317, -0.258852571197659, 0.517705142395317, -0.0566742670215315, -0.0566742670215315, 0.435366587895191, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0388828743119485, 0.0388828743119486, 0.541134376806172, -0.170318740047626, 0.340637480095253, -0.170318740047627, 0.340637480095253, -0.00930838871228427, -0.00930838871228424, 0.0590791718992465, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0495966310503562, 0.0969129145557493, 0.0329620582231266, 0.160876909651335, -0.116515395516028, -0.0133081629182568, -0.0349538534974922, -0.246912783611135, 0.895428534283356, 0.175913147778989, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0594654509565622, -0.0391667888544836, 0.0565093723571961, 0.467663868980969, -0.223159844548554, -0.0733496016702975, -0.0669464878724997, -0.228522561505532, 0.437096058075966, 0.610410534080672, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0638185648099452, -0.045132154183368, -0.0471646056404561, 0.253054939278284, 0.26748620229567, -0.156158924075319, 0.0802441041051712, -0.154146013447678, 0.074936267198872, 0.663061619658879, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0496137334753147, 0.045160818752146, 0.0326369349932555, -0.217903867034122, 0.796473473259088, -0.17356708239734, 0.238936811531546, -0.0584641485580774, -0.0220190689531468, 0.309132394931336, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0204647143413335, 0.0519031146003489, 0.541134376806172, -0.23755901477889, 0.524060308998282, -0.0859485068100627, 0.157214651192223, -0.00722668705539919, -0.00599217068695462, 0.041949213392946, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0363240630142745, 0.595361771100889, 0.0329620582231266, 0.286154010031838, -0.144363814874519, -0.00697876330105458, -0.0071054341390019, -0.160427557536749, 0.323767019699913, 0.0443066477812841, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0314917525575109, 0.144847707077251, 0.0565093723571961, 0.880722068301204, -0.276497422020097, -0.0297392974343586, -0.0136089104009565, -0.114798724929776, 0.167331423967527, 0.153742030524498, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0233191863197456, -0.0638922318573472, -0.0471646056404561, 0.640806423249974, 0.331418250941681, -0.0478518692290426, 0.016312055459161, -0.0585247318831847, 0.0385744417985571, 0.167003080840912, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0133805365030047, 0.0211818331847307, 0.0326369349932555, -0.117406110387015, 0.986839108572759, -0.0427925717552787, 0.0485711762178747, -0.0178593517002865, -0.00241168327121237, 0.0778601276421678, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.00452658789692539, 0.057951772159666, 0.541134376806172, -0.273633189306433, 0.649316299328904, -0.0184907249626246, 0.0319586608616017, -0.00192632644777799, -0.00140306240948479, 0.010565606073051, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_C0_D01[25][32] = \
    {{-4.06985505689898, 0.0, 0.663106420235976, -0.175302395384925, -0.154276912360625, 6.3835022715471, -2.97675363488409, -0.910265045258717, 0.175302395384941, 1.06454195761932, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-2.0081458564857, 0.0, -0.25279502647963, -0.150188294074802, 0.0318412090085944, 1.25227625167257, 1.00866463129277, -0.607126650247004, 0.15018829407481, 0.575285441238391, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0526400567928315, 0.0, -0.352177177674816, -0.10925712645898, 0.193129457653324, -2.90035813312995, 3.30517536759761, -0.262666599764854, 0.109257126458979, 0.0695371421115172, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.474941577440669, 0.0, 1.27037403921984, -0.0615309418396641, 0.203965934922004, -2.48940602426171, 0.744090407601208, -0.0476680983174427, 0.0615309418396618, -0.156297836604574, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.273849606287235, 0.0, 3.85744215792178, -0.0205118631588905, 0.0917041355203088, 1.46725382984054, -5.05084638147508, 0.00907981301713012, 0.0205118631588885, -0.100783948537453, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.71738066252314, 0.0, 0.663106420235976, -0.334293160134955, -0.758936398143256, 3.42636839138863, -2.37209414910146, -3.42173020438459, 0.334293160134971, 4.18066660252782, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.58565725811495, 0.0, -0.25279502647963, -0.370427430918424, 0.156636868781972, -0.0454166869248059, 0.883868971519395, -2.24985438546138, 0.370427430918432, 2.09321751667939, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.367697406585458, 0.0, -0.352177177674817, -0.356547729279493, 0.950064223635599, -2.56376083052596, 2.54824060161533, -0.93029466596366, 0.356547729279495, -0.0197695576719551, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.367488895063859, 0.0, 1.27037403921984, -0.249570091588429, 1.00337224556197, -1.58254703124493, -0.0553159030387596, -0.1282545656894, 0.249570091588428, -0.875117679872588, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.39538976269783, 0.0, 3.85744215792178, -0.0953431525243942, 0.451121332684867, 1.9482111834157, -5.41026357863964, 0.0557886800622195, 0.0953431525243933, -0.506910012747102, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.209223394941003, 0.0, 0.663106420235977, 0.951204426693197, -1.64438988513857, 0.61431084692917, -1.48664066210614, -4.06283667502058, -0.951204426693181, 5.70722656015912, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.438198756619905, 0.0, -0.25279502647963, 0.366271053164476, 0.339385597126478, -0.886523973315154, 0.701120243174891, -2.53701191611334, -0.366271053164465, 2.19762631898683, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.463044294418702, 0.0, -0.352177177674818, -0.198487617475327, 2.05850714684467, -1.55066479515014, 1.43979767840627, -0.867581441992742, 0.198487617475332, -1.19092570485195, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0574064901950372, 0.0, 1.27037403921984, -0.372201105240729, 2.1740098059172, -0.101827066020882, -1.22595346339398, 0.0591968255271173, 0.372201105240731, -2.23320663144434, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.58936053948045, 0.0, 3.85744215792178, -0.188935517472205, 0.977446012936142, 2.66850664044959, -5.93658825889091, 0.156167091897027, 0.188935517472205, -1.13361310483318, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.331396903120672, 0.0, 0.663106420235976, 4.04113256280583, -2.52984337213389, -0.393316148245815, -0.601187175110815, -1.09508204708763, -4.0411325628058, 3.62492541922148, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.203245627121677, 0.0, -0.25279502647963, 2.36177868148046, 0.522134325470983, -0.468822115472418, 0.518371514830387, -0.306551158299132, -2.36177868148044, -0.215583167171885, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0598205552003712, 0.0, -0.352177177674818, 0.577784231781156, 3.16695007005374, 0.0806429776780029, 0.331354755197199, 0.431555256882809, -0.577784231781146, -3.59850532693657, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.434186594374316, 0.0, 1.27037403921984, -0.313321439192497, 3.34464736627243, 1.5604035789037, -2.39659102374921, 0.609669576144699, 0.313321439192503, -3.95431694241715, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.802333673688683, 0.0, 3.85744215792178, -0.263525524994402, 1.50377069318741, 3.40780445490909, -6.46291293914219, 0.294550218583061, 0.263525524994404, -1.79832091177049, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.622005933550948, 0.0, 0.663106420235975, 7.18801902910326, -3.13450285791652, -0.0445727973568231, 0.00347231067181752, 3.00520725588141, -7.18801902910322, 0.129295602035053, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.680516070372196, 0.0, -0.25279502647963, 4.44778984050146, 0.646929985244359, 0.539735241794836, 0.39357585505701, 2.66322169821574, -4.44778984050144, -3.31015168346014, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.77210197129091, 0.0, -0.352177177674818, 1.46311250842947, 3.92388483603601, 1.54985915975082, -0.425580010785075, 2.02916494962166, -1.46311250842946, -5.9530497856577, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.874182983380279, 0.0, 1.27037403921984, -0.16881688231211, 4.1440536769124, 2.79980627854963, -3.19599733438917, 1.19417052203105, 0.168816882312117, -5.33822419894346, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.958687838748417, 0.0, 3.85744215792178, -0.303542805710767, 1.86318789035197, 3.92357581713339, -6.82233013630674, 0.410887102926429, 0.303542805710769, -2.27407499327842, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_C0_D10[25][32] = \
    {{-4.06985505689898, 0.622005933550947, 0.0, -0.130729598028098, -0.157749223032422, -0.804516757556156, 0.157749223032422, 6.27775398384455, -2.82990486049651, 0.935246355584254, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-2.0081458564857, 0.680516070372197, 0.0, -0.689923535869635, -0.361734646048396, -3.1955135888289, 0.361734646048397, 3.84066319025447, -2.51303340414096, 3.88543712469853, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0526400567928295, 0.772101971290911, 0.0, -1.6591162862098, 0.618709468438422, -4.36347064155943, -0.618709468438421, 1.20044590866463, -1.91990782316271, 6.02258692776922, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.47494157744067, 0.874182983380278, 0.0, -2.86133722038929, 3.3999632693112, -2.3205891419496, -3.3999632693112, -0.216484980629543, -1.1326395801914, 5.18192636233889, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.273849606287236, 0.958687838748413, 0.0, -3.94408768029227, 6.91403427182707, 1.77079663555131, -6.91403427182707, -0.294462992693624, -0.390375239767555, 2.17329104474096, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.71738066252314, -0.331396903120672, 0.0, 0.0590229881108609, -0.157749223032421, -0.614764171417198, 0.157749223032421, 0.619402358421245, 1.42937520722256, 0.555741183306337, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.585657258114948, -0.203245627121677, 0.0, 0.0983946845539959, -0.361734646048396, -2.40719536840527, 0.361734646048397, 0.111924296019091, 0.676978589217535, 2.30880068385127, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.36769740658546, 0.0598205552003706, 0.0, -0.437190706957494, 0.618709468438421, -3.14154506230713, -0.61870946843842, -0.352510434182493, -0.075007527603337, 3.57873576926462, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.36748889506386, 0.434186594374314, 0.0, -1.80997367049212, 3.3999632693112, -1.26922559205244, -3.3999632693112, -0.441576004881886, -0.360099484556288, 3.07919926254456, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.395389762697831, 0.802333673688679, 0.0, -3.50314760743348, 6.91403427182707, 2.2117367084101, -6.91403427182707, -0.207736844932168, -0.199207066058681, 1.29141089902338, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.209223394941008, -0.209223394941006, 0.0, 0.336893579764031, -0.157749223032421, -0.336893579764031, 0.157749223032421, -3.11163224832738, 3.11163224832738, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.438198756619909, -0.438198756619908, 0.0, 1.25279502647963, -0.361734646048397, -1.25279502647963, 0.361734646048397, -2.17074086294885, 2.17074086294885, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.463044294418704, -0.463044294418705, 0.0, 1.35217717767482, 0.61870946843842, -1.35217717767482, -0.61870946843842, -1.06606905946806, 1.06606905946806, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0574064901950387, -0.0574064901950405, 0.0, -0.270374039219841, 3.3999632693112, 0.270374039219841, -3.3999632693112, -0.313004279713598, 0.313004279713599, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.589360539480451, 0.589360539480446, 0.0, -2.85744215792178, 6.91403427182707, 2.85744215792179, -6.91403427182707, -0.0327684255751616, 0.0327684255751652, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.33139690312068, 1.71738066252313, 0.0, 0.614764171417202, -0.157749223032421, -0.0590229881108637, 0.15774922303242, -1.42937520722259, -0.619402358421224, -0.555741183306338, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.203245627121682, 0.585657258114942, 0.0, 2.40719536840527, -0.361734646048397, -0.0983946845539985, 0.361734646048396, -0.67697858921755, -0.111924296019076, -2.30880068385127, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0598205552003682, -0.367697406585463, 0.0, 3.14154506230713, 0.61870946843842, 0.437190706957489, -0.61870946843842, 0.0750075276033289, 0.352510434182502, -3.57873576926461, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.434186594374315, -0.367488895063863, 0.0, 1.26922559205244, 3.3999632693112, 1.80997367049212, -3.3999632693112, 0.360099484556286, 0.44157600488189, -3.07919926254456, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.802333673688684, 0.395389762697826, 0.0, -2.21173670841009, 6.91403427182707, 3.50314760743349, -6.91403427182707, 0.199207066058684, 0.207736844932172, -1.2914108990234, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.622005933550935, 4.06985505689897, 0.0, 0.804516757556163, -0.157749223032421, 0.130729598028092, 0.15774922303242, 2.82990486049648, -6.27775398384451, -0.935246355584255, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.680516070372189, 2.00814585648569, 0.0, 3.1955135888289, -0.361734646048397, 0.689923535869631, 0.361734646048395, 2.51303340414094, -3.84066319025444, -3.88543712469853, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.772101971290907, 0.0526400567928248, 0.0, 4.36347064155943, 0.61870946843842, 1.65911628620979, -0.618709468438422, 1.91990782316269, -1.20044590866461, -6.02258692776921, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.874182983380278, -0.474941577440673, 0.0, 2.32058914194961, 3.3999632693112, 2.86133722038928, -3.3999632693112, 1.1326395801914, 0.216484980629549, -5.18192636233889, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.958687838748418, 0.273849606287231, 0.0, -1.7707966355513, 6.91403427182707, 3.94408768029227, -6.91403427182707, 0.390375239767558, 0.294462992693628, -2.17329104474097, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_C1[25][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.595361771100889, 0.0363240630142744, 0.0329620582231266, -0.00697876330105451, -0.00710543413900175, 0.286154010031837, -0.144363814874519, 0.323767019699913, -0.160427557536749, 0.0443066477812843, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.144847707077251, 0.031491752557511, 0.0565093723571961, -0.0297392974343584, -0.0136089104009563, 0.880722068301204, -0.276497422020098, 0.167331423967527, -0.114798724929776, 0.153742030524499, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0638922318573472, 0.0233191863197456, -0.0471646056404561, -0.0478518692290422, 0.0163120554591612, 0.640806423249974, 0.331418250941681, 0.038574441798557, -0.0585247318831847, 0.167003080840912, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0211818331847306, 0.0133805365030048, 0.0326369349932555, -0.0427925717552781, 0.0485711762178744, -0.117406110387015, 0.986839108572759, -0.00241168327121223, -0.0178593517002865, 0.0778601276421671, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0579517721596659, 0.00452658789692551, 0.541134376806172, -0.0184907249626244, 0.0319586608616018, -0.273633189306433, 0.649316299328904, -0.00140306240948476, -0.001926326447778, 0.0105656060730508, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0969129145557494, 0.0495966310503562, 0.0329620582231266, -0.0133081629182568, -0.0349538534974921, 0.160876909651335, -0.116515395516028, 0.895428534283356, -0.246912783611135, 0.175913147778989, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0391667888544835, 0.0594654509565622, 0.0565093723571961, -0.0733496016702974, -0.0669464878724995, 0.467663868980969, -0.223159844548554, 0.437096058075966, -0.228522561505532, 0.610410534080672, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.045132154183368, 0.0638185648099453, -0.0471646056404561, -0.156158924075319, 0.0802441041051713, 0.253054939278284, 0.26748620229567, 0.074936267198872, -0.154146013447678, 0.663061619658879, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.045160818752146, 0.0496137334753148, 0.0326369349932555, -0.17356708239734, 0.238936811531546, -0.217903867034122, 0.796473473259088, -0.0220190689531468, -0.0584641485580774, 0.309132394931335, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0519031146003488, 0.0204647143413336, 0.541134376806172, -0.0859485068100625, 0.157214651192224, -0.23755901477889, 0.524060308998282, -0.00599217068695466, -0.00722668705539919, 0.041949213392946, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0591559090807405, -0.0591559090807406, 0.0329620582231266, 0.0378673122533802, -0.0757346245067602, 0.0378673122533802, -0.0757346245067602, 0.456668557219904, 0.456668557219904, 0.247747270005307, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.032436155693348, -0.0324361556933481, 0.0565093723571961, 0.0725265831052635, -0.145053166210527, 0.0725265831052634, -0.145053166210527, 0.146872235029605, 0.146872235029605, 0.859671635180817, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0255158526264418, 0.0255158526264419, -0.0471646056404561, -0.0869325766002103, 0.173865153200421, -0.0869325766002105, 0.173865153200421, -0.0557775204375564, -0.0557775204375564, 0.933822788062264, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0638199343796498, 0.0638199343796499, 0.0326369349932555, -0.258852571197658, 0.517705142395317, -0.258852571197659, 0.517705142395317, -0.0566742670215315, -0.0566742670215315, 0.435366587895191, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0388828743119485, 0.0388828743119486, 0.541134376806172, -0.170318740047626, 0.340637480095253, -0.170318740047627, 0.340637480095253, -0.00930838871228427, -0.00930838871228424, 0.0590791718992465, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0495966310503562, 0.0969129145557493, 0.0329620582231266, 0.160876909651335, -0.116515395516028, -0.0133081629182568, -0.0349538534974922, -0.246912783611135, 0.895428534283356, 0.175913147778989, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0594654509565622, -0.0391667888544836, 0.0565093723571961, 0.467663868980969, -0.223159844548554, -0.0733496016702975, -0.0669464878724997, -0.228522561505532, 0.437096058075966, 0.610410534080672, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0638185648099452, -0.045132154183368, -0.0471646056404561, 0.253054939278284, 0.26748620229567, -0.156158924075319, 0.0802441041051712, -0.154146013447678, 0.074936267198872, 0.663061619658879, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0496137334753147, 0.045160818752146, 0.0326369349932555, -0.217903867034122, 0.796473473259088, -0.17356708239734, 0.238936811531546, -0.0584641485580774, -0.0220190689531468, 0.309132394931336, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0204647143413335, 0.0519031146003489, 0.541134376806172, -0.23755901477889, 0.524060308998282, -0.0859485068100627, 0.157214651192223, -0.00722668705539919, -0.00599217068695462, 0.041949213392946, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0363240630142745, 0.595361771100889, 0.0329620582231266, 0.286154010031838, -0.144363814874519, -0.00697876330105458, -0.0071054341390019, -0.160427557536749, 0.323767019699913, 0.0443066477812841, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0314917525575109, 0.144847707077251, 0.0565093723571961, 0.880722068301204, -0.276497422020097, -0.0297392974343586, -0.0136089104009565, -0.114798724929776, 0.167331423967527, 0.153742030524498, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0233191863197456, -0.0638922318573472, -0.0471646056404561, 0.640806423249974, 0.331418250941681, -0.0478518692290426, 0.016312055459161, -0.0585247318831847, 0.0385744417985571, 0.167003080840912, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0133805365030047, 0.0211818331847307, 0.0326369349932555, -0.117406110387015, 0.986839108572759, -0.0427925717552787, 0.0485711762178747, -0.0178593517002865, -0.00241168327121237, 0.0778601276421678, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00452658789692539, 0.057951772159666, 0.541134376806172, -0.273633189306433, 0.649316299328904, -0.0184907249626246, 0.0319586608616017, -0.00192632644777799, -0.00140306240948479, 0.010565606073051, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_C1_D01[25][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -4.06985505689898, 0.0, 0.663106420235976, -0.175302395384925, -0.154276912360625, 6.3835022715471, -2.97675363488409, -0.910265045258717, 0.175302395384941, 1.06454195761932, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -2.0081458564857, 0.0, -0.25279502647963, -0.150188294074802, 0.0318412090085944, 1.25227625167257, 1.00866463129277, -0.607126650247004, 0.15018829407481, 0.575285441238391, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0526400567928315, 0.0, -0.352177177674816, -0.10925712645898, 0.193129457653324, -2.90035813312995, 3.30517536759761, -0.262666599764854, 0.109257126458979, 0.0695371421115172, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.474941577440669, 0.0, 1.27037403921984, -0.0615309418396641, 0.203965934922004, -2.48940602426171, 0.744090407601208, -0.0476680983174427, 0.0615309418396618, -0.156297836604574, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.273849606287235, 0.0, 3.85744215792178, -0.0205118631588905, 0.0917041355203088, 1.46725382984054, -5.05084638147508, 0.00907981301713012, 0.0205118631588885, -0.100783948537453, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.71738066252314, 0.0, 0.663106420235976, -0.334293160134955, -0.758936398143256, 3.42636839138863, -2.37209414910146, -3.42173020438459, 0.334293160134971, 4.18066660252782, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.58565725811495, 0.0, -0.25279502647963, -0.370427430918424, 0.156636868781972, -0.0454166869248059, 0.883868971519395, -2.24985438546138, 0.370427430918432, 2.09321751667939, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.367697406585458, 0.0, -0.352177177674817, -0.356547729279493, 0.950064223635599, -2.56376083052596, 2.54824060161533, -0.93029466596366, 0.356547729279495, -0.0197695576719551, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.367488895063859, 0.0, 1.27037403921984, -0.249570091588429, 1.00337224556197, -1.58254703124493, -0.0553159030387596, -0.1282545656894, 0.249570091588428, -0.875117679872588, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.39538976269783, 0.0, 3.85744215792178, -0.0953431525243942, 0.451121332684867, 1.9482111834157, -5.41026357863964, 0.0557886800622195, 0.0953431525243933, -0.506910012747102, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.209223394941003, 0.0, 0.663106420235977, 0.951204426693197, -1.64438988513857, 0.61431084692917, -1.48664066210614, -4.06283667502058, -0.951204426693181, 5.70722656015912, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.438198756619905, 0.0, -0.25279502647963, 0.366271053164476, 0.339385597126478, -0.886523973315154, 0.701120243174891, -2.53701191611334, -0.366271053164465, 2.19762631898683, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.463044294418702, 0.0, -0.352177177674818, -0.198487617475327, 2.05850714684467, -1.55066479515014, 1.43979767840627, -0.867581441992742, 0.198487617475332, -1.19092570485195, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0574064901950372, 0.0, 1.27037403921984, -0.372201105240729, 2.1740098059172, -0.101827066020882, -1.22595346339398, 0.0591968255271173, 0.372201105240731, -2.23320663144434, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.58936053948045, 0.0, 3.85744215792178, -0.188935517472205, 0.977446012936142, 2.66850664044959, -5.93658825889091, 0.156167091897027, 0.188935517472205, -1.13361310483318, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.331396903120672, 0.0, 0.663106420235976, 4.04113256280583, -2.52984337213389, -0.393316148245815, -0.601187175110815, -1.09508204708763, -4.0411325628058, 3.62492541922148, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.203245627121677, 0.0, -0.25279502647963, 2.36177868148046, 0.522134325470983, -0.468822115472418, 0.518371514830387, -0.306551158299132, -2.36177868148044, -0.215583167171885, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0598205552003712, 0.0, -0.352177177674818, 0.577784231781156, 3.16695007005374, 0.0806429776780029, 0.331354755197199, 0.431555256882809, -0.577784231781146, -3.59850532693657, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.434186594374316, 0.0, 1.27037403921984, -0.313321439192497, 3.34464736627243, 1.5604035789037, -2.39659102374921, 0.609669576144699, 0.313321439192503, -3.95431694241715, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.802333673688683, 0.0, 3.85744215792178, -0.263525524994402, 1.50377069318741, 3.40780445490909, -6.46291293914219, 0.294550218583061, 0.263525524994404, -1.79832091177049, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.622005933550948, 0.0, 0.663106420235975, 7.18801902910326, -3.13450285791652, -0.0445727973568231, 0.00347231067181752, 3.00520725588141, -7.18801902910322, 0.129295602035053, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.680516070372196, 0.0, -0.25279502647963, 4.44778984050146, 0.646929985244359, 0.539735241794836, 0.39357585505701, 2.66322169821574, -4.44778984050144, -3.31015168346014, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.77210197129091, 0.0, -0.352177177674818, 1.46311250842947, 3.92388483603601, 1.54985915975082, -0.425580010785075, 2.02916494962166, -1.46311250842946, -5.9530497856577, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.874182983380279, 0.0, 1.27037403921984, -0.16881688231211, 4.1440536769124, 2.79980627854963, -3.19599733438917, 1.19417052203105, 0.168816882312117, -5.33822419894346, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.958687838748417, 0.0, 3.85744215792178, -0.303542805710767, 1.86318789035197, 3.92357581713339, -6.82233013630674, 0.410887102926429, 0.303542805710769, -2.27407499327842, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_C1_D10[25][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -4.06985505689898, 0.622005933550947, 0.0, -0.130729598028098, -0.157749223032422, -0.804516757556156, 0.157749223032422, 6.27775398384455, -2.82990486049651, 0.935246355584254, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -2.0081458564857, 0.680516070372197, 0.0, -0.689923535869635, -0.361734646048396, -3.1955135888289, 0.361734646048397, 3.84066319025447, -2.51303340414096, 3.88543712469853, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0526400567928295, 0.772101971290911, 0.0, -1.6591162862098, 0.618709468438422, -4.36347064155943, -0.618709468438421, 1.20044590866463, -1.91990782316271, 6.02258692776922, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.47494157744067, 0.874182983380278, 0.0, -2.86133722038929, 3.3999632693112, -2.3205891419496, -3.3999632693112, -0.216484980629543, -1.1326395801914, 5.18192636233889, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.273849606287236, 0.958687838748413, 0.0, -3.94408768029227, 6.91403427182707, 1.77079663555131, -6.91403427182707, -0.294462992693624, -0.390375239767555, 2.17329104474096, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.71738066252314, -0.331396903120672, 0.0, 0.0590229881108609, -0.157749223032421, -0.614764171417198, 0.157749223032421, 0.619402358421245, 1.42937520722256, 0.555741183306337, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.585657258114948, -0.203245627121677, 0.0, 0.0983946845539959, -0.361734646048396, -2.40719536840527, 0.361734646048397, 0.111924296019091, 0.676978589217535, 2.30880068385127, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.36769740658546, 0.0598205552003706, 0.0, -0.437190706957494, 0.618709468438421, -3.14154506230713, -0.61870946843842, -0.352510434182493, -0.075007527603337, 3.57873576926462, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.36748889506386, 0.434186594374314, 0.0, -1.80997367049212, 3.3999632693112, -1.26922559205244, -3.3999632693112, -0.441576004881886, -0.360099484556288, 3.07919926254456, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.395389762697831, 0.802333673688679, 0.0, -3.50314760743348, 6.91403427182707, 2.2117367084101, -6.91403427182707, -0.207736844932168, -0.199207066058681, 1.29141089902338, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.209223394941008, -0.209223394941006, 0.0, 0.336893579764031, -0.157749223032421, -0.336893579764031, 0.157749223032421, -3.11163224832738, 3.11163224832738, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.438198756619909, -0.438198756619908, 0.0, 1.25279502647963, -0.361734646048397, -1.25279502647963, 0.361734646048397, -2.17074086294885, 2.17074086294885, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.463044294418704, -0.463044294418705, 0.0, 1.35217717767482, 0.61870946843842, -1.35217717767482, -0.61870946843842, -1.06606905946806, 1.06606905946806, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0574064901950387, -0.0574064901950405, 0.0, -0.270374039219841, 3.3999632693112, 0.270374039219841, -3.3999632693112, -0.313004279713598, 0.313004279713599, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.589360539480451, 0.589360539480446, 0.0, -2.85744215792178, 6.91403427182707, 2.85744215792179, -6.91403427182707, -0.0327684255751616, 0.0327684255751652, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.33139690312068, 1.71738066252313, 0.0, 0.614764171417202, -0.157749223032421, -0.0590229881108637, 0.15774922303242, -1.42937520722259, -0.619402358421224, -0.555741183306338, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.203245627121682, 0.585657258114942, 0.0, 2.40719536840527, -0.361734646048397, -0.0983946845539985, 0.361734646048396, -0.67697858921755, -0.111924296019076, -2.30880068385127, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0598205552003682, -0.367697406585463, 0.0, 3.14154506230713, 0.61870946843842, 0.437190706957489, -0.61870946843842, 0.0750075276033289, 0.352510434182502, -3.57873576926461, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.434186594374315, -0.367488895063863, 0.0, 1.26922559205244, 3.3999632693112, 1.80997367049212, -3.3999632693112, 0.360099484556286, 0.44157600488189, -3.07919926254456, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.802333673688684, 0.395389762697826, 0.0, -2.21173670841009, 6.91403427182707, 3.50314760743349, -6.91403427182707, 0.199207066058684, 0.207736844932172, -1.2914108990234, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.622005933550935, 4.06985505689897, 0.0, 0.804516757556163, -0.157749223032421, 0.130729598028092, 0.15774922303242, 2.82990486049648, -6.27775398384451, -0.935246355584255, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.680516070372189, 2.00814585648569, 0.0, 3.1955135888289, -0.361734646048397, 0.689923535869631, 0.361734646048395, 2.51303340414094, -3.84066319025444, -3.88543712469853, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.772101971290907, 0.0526400567928248, 0.0, 4.36347064155943, 0.61870946843842, 1.65911628620979, -0.618709468438422, 1.91990782316269, -1.20044590866461, -6.02258692776921, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.874182983380278, -0.474941577440673, 0.0, 2.32058914194961, 3.3999632693112, 2.86133722038928, -3.3999632693112, 1.1326395801914, 0.216484980629549, -5.18192636233889, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.958687838748418, 0.273849606287231, 0.0, -1.7707966355513, 6.91403427182707, 3.94408768029227, -6.91403427182707, 0.390375239767558, 0.294462992693628, -2.17329104474097, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_C2_D01[25][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_C2_D10[25][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_C3_D01[25][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_C3_D10[25][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_C4[25][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.759842524889053, -0.0409849230988147, -0.036640207614552, 0.00717255684496529, 0.145727572487076, 0.164882476492272},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.404143384962011, -0.0347905350890822, -0.119594790557632, 0.0297980510461639, 0.605418365816316, 0.115025523822223},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.03820389372017, -0.0249744559383749, -0.0543309414249183, 0.0461882014671775, 0.938423301877431, 0.0564900002985143},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.121759885907613, -0.0138776265525463, 0.271876837668966, 0.039741038474382, 0.807433832894958, 0.0165858034218535},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0762735703276687, -0.00457955736373822, 0.723813068870285, 0.0166673234982246, 0.338636367163552, 0.00173636815934486},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.352482461135478, -0.123384449130048, -0.036640207614552, 0.0352840510877737, 0.117616078244268, 0.65464206627708},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.144254514044104, -0.116568374669637, -0.119594790557632, 0.146585935553368, 0.488630481309112, 0.456692234320686},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0585120870225411, -0.0960538647466012, -0.0543309414249183, 0.227214213208259, 0.75739729013635, 0.224285389849452},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.124504469204174, -0.0603987775714152, 0.271876837668966, 0.19549860142211, 0.65167626994723, 0.0658515377372835},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0643063527627086, -0.0217044058396819, 0.723813068870285, 0.0819917787365635, 0.273311911925214, 0.00689399907032842},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0191125161665052, -0.0191125161665051, -0.036640207614552, 0.0764500646660208, 0.0764500646660207, 0.921965110615521},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.07940205210781, -0.07940205210781, -0.119594790557632, 0.31760820843124, 0.31760820843124, 0.643182477910772},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.123076437918076, -0.123076437918076, -0.0543309414249183, 0.492305751672305, 0.492305751672304, 0.315872313916462},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.105896858921167, -0.105896858921168, 0.271876837668966, 0.42358743568467, 0.42358743568467, 0.092742008804029},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0444129613327221, -0.0444129613327222, 0.723813068870285, 0.177651845330889, 0.177651845330889, 0.00970916313338224},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.123384449130048, 0.352482461135478, -0.036640207614552, 0.117616078244268, 0.0352840510877736, 0.65464206627708},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.116568374669637, 0.144254514044104, -0.119594790557632, 0.488630481309112, 0.146585935553368, 0.456692234320686},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0960538647466011, -0.0585120870225412, -0.0543309414249183, 0.75739729013635, 0.227214213208259, 0.224285389849452},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0603987775714151, -0.124504469204174, 0.271876837668966, 0.65167626994723, 0.19549860142211, 0.0658515377372836},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0217044058396818, -0.0643063527627087, 0.723813068870285, 0.273311911925214, 0.0819917787365632, 0.00689399907032842},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0409849230988146, 0.759842524889054, -0.036640207614552, 0.145727572487076, 0.00717255684496515, 0.164882476492272},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0347905350890821, 0.404143384962011, -0.119594790557632, 0.605418365816316, 0.0297980510461638, 0.115025523822223},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0249744559383748, 0.03820389372017, -0.0543309414249183, 0.938423301877431, 0.0461882014671775, 0.0564900002985144},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0138776265525463, -0.121759885907613, 0.271876837668966, 0.807433832894958, 0.0397410384743822, 0.0165858034218536},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00457955736373811, -0.0762735703276687, 0.723813068870285, 0.338636367163553, 0.0166673234982243, 0.00173636815934486}};
    
    static const double FE1[25][1] = \
    {{1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0}};
    
    // Reset values in the element tensor.
    for (unsigned int r = 0; r < 32; r++)
    {
      A[r] = 0.0;
    } // end loop over 'r'
    
    // Compute element tensor using UFL quadrature representation
    // Optimisations: ('eliminate zeros', False), ('ignore ones', False), ('ignore zero tables', False), ('optimisation', False), ('remove zero terms', False)
    
    // Loop quadrature points for integral.
    // Number of operations to compute element tensor for following IP loop = 196950
    for (unsigned int ip = 0; ip < 25; ip++)
    {
      
      // Coefficient declarations.
      double F0 = 0.0;
      double F1 = 0.0;
      double F2 = 0.0;
      double F3 = 0.0;
      double F4 = 0.0;
      double F5 = 0.0;
      double F6 = 0.0;
      double F7 = 0.0;
      double F8 = 0.0;
      double F9 = 0.0;
      double F10 = 0.0;
      double F11 = 0.0;
      double F12 = 0.0;
      double F13 = 0.0;
      double F14 = 0.0;
      double F15 = 0.0;
      double F16 = 0.0;
      double F17 = 0.0;
      double F18 = 0.0;
      double F19 = 0.0;
      double F20 = 0.0;
      
      // Total number of operations to compute function values = 6
      for (unsigned int r = 0; r < 1; r++)
      {
        F0 += FE1[ip][0]*w[0][0];
        F1 += FE1[ip][0]*w[5][0];
        F18 += FE1[ip][0]*w[1][0];
      } // end loop over 'r'
      
      // Total number of operations to compute function values = 1152
      for (unsigned int r = 0; r < 32; r++)
      {
        F2 += FE0_C0[ip][r]*w[3][r];
        F3 += FE0_C0_D10[ip][r]*w[3][r];
        F4 += FE0_C0_D01[ip][r]*w[3][r];
        F5 += FE0_C1[ip][r]*w[3][r];
        F6 += FE0_C1_D10[ip][r]*w[3][r];
        F7 += FE0_C1_D01[ip][r]*w[3][r];
        F8 += FE0_C0[ip][r]*w[4][r];
        F9 += FE0_C0_D10[ip][r]*w[4][r];
        F10 += FE0_C0_D01[ip][r]*w[4][r];
        F11 += FE0_C1[ip][r]*w[4][r];
        F12 += FE0_C1_D10[ip][r]*w[4][r];
        F13 += FE0_C1_D01[ip][r]*w[4][r];
        F14 += FE0_C2_D10[ip][r]*w[3][r];
        F15 += FE0_C2_D01[ip][r]*w[3][r];
        F16 += FE0_C3_D10[ip][r]*w[3][r];
        F17 += FE0_C3_D01[ip][r]*w[3][r];
        F19 += FE0_C4[ip][r]*w[3][r];
        F20 += FE0_C4[ip][r]*w[4][r];
      } // end loop over 'r'
      
      // Number of operations for primary indices: 6720
      for (unsigned int j = 0; j < 32; j++)
      {
        // Number of operations to compute entry: 210
        A[j] += (((((((FE0_C0[ip][j]*((F11*((K[1]*F9 + K[3]*F10)) + F8*((K[0]*F9 + K[2]*F10)))) + FE0_C1[ip][j]*((F11*((K[1]*F12 + K[3]*F13)) + F8*((K[0]*F12 + K[2]*F13))))))*(((-1.0)*F1 + 1.0)) + ((FE0_C0[ip][j]*((F2*((K[0]*F3 + K[2]*F4)) + F5*((K[1]*F3 + K[3]*F4)))) + FE0_C1[ip][j]*((F2*((K[0]*F6 + K[2]*F7)) + F5*((K[1]*F6 + K[3]*F7))))))*F1))*F0 + FE0_C4[ip][j]*(((K[0]*F3 + K[2]*F4) + (K[1]*F6 + K[3]*F7)))) + ((((K[0]*FE0_C2_D10[ip][j] + K[2]*FE0_C2_D01[ip][j]))*((K[0]*F14 + K[2]*F15)) + ((K[0]*FE0_C3_D10[ip][j] + K[2]*FE0_C3_D01[ip][j]))*((K[0]*F16 + K[2]*F17))) + (((K[1]*FE0_C2_D10[ip][j] + K[3]*FE0_C2_D01[ip][j]))*((K[1]*F14 + K[3]*F15)) + ((K[1]*FE0_C3_D10[ip][j] + K[3]*FE0_C3_D01[ip][j]))*((K[1]*F16 + K[3]*F17))))) + ((((((K[0]*FE0_C1_D10[ip][j] + K[2]*FE0_C1_D01[ip][j]) + (K[1]*FE0_C0_D10[ip][j] + K[3]*FE0_C0_D01[ip][j])))*0.5)*((((((K[0]*F12 + K[2]*F13) + (K[1]*F9 + K[3]*F10)))*F18)*(((-1.0)*F1 + 1.0)) + ((((K[0]*F6 + K[2]*F7) + (K[1]*F3 + K[3]*F4)))*F18)*F1)) + ((2.0*((K[0]*FE0_C0_D10[ip][j] + K[2]*FE0_C0_D01[ip][j])))*0.5)*(((((2.0*((K[0]*F3 + K[2]*F4)))*F18 + 1.0*((-1.0)*F19)))*F1 + (((2.0*((K[0]*F9 + K[2]*F10)))*F18 + 1.0*((-1.0)*F20)))*(((-1.0)*F1 + 1.0))))) + (((((K[0]*FE0_C1_D10[ip][j] + K[2]*FE0_C1_D01[ip][j]) + (K[1]*FE0_C0_D10[ip][j] + K[3]*FE0_C0_D01[ip][j])))*0.5)*((((((K[0]*F12 + K[2]*F13) + (K[1]*F9 + K[3]*F10)))*F18)*(((-1.0)*F1 + 1.0)) + ((((K[0]*F6 + K[2]*F7) + (K[1]*F3 + K[3]*F4)))*F18)*F1)) + ((2.0*((K[1]*FE0_C1_D10[ip][j] + K[3]*FE0_C1_D01[ip][j])))*0.5)*(((((2.0*((K[1]*F12 + K[3]*F13)))*F18 + 1.0*((-1.0)*F20)))*(((-1.0)*F1 + 1.0)) + (((2.0*((K[1]*F6 + K[3]*F7)))*F18 + 1.0*((-1.0)*F19)))*F1)))))*W25[ip]*det;
      } // end loop over 'j'
    } // end loop over 'ip'
  }

};


class ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_cell_integral_0_2: public ufc::cell_integral
{
public:

  ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_cell_integral_0_2() : ufc::cell_integral()
  {
    
  }

  ~ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_cell_integral_0_2() override
  {
    
  }

  const std::vector<bool> & enabled_coefficients() const final override
  {
    static const std::vector<bool> enabled({false, true, true, true, true, true});
    return enabled;
  }

  void tabulate_tensor(double * A,
                       const double * const * w,
                       const double * coordinate_dofs,
                       int cell_orientation) const final override
  {
    // Compute Jacobian
    double J[4];
    compute_jacobian_triangle_2d(J, coordinate_dofs);
    
    // Compute Jacobian inverse and determinant
    double K[4];
    double detJ;
    compute_jacobian_inverse_triangle_2d(K, detJ, J);
    
    // Set scale factor
    const double det = std::abs(detJ);
    
    // Compute cell volume
    
    
    // Compute circumradius of triangle in 2D
    
    
    // Array of quadrature weights.
    static const double W256[256] = {0.000172951807780587, 0.000388449228816992, 0.000571958834778086, 0.000709067394851801, 0.000790872946439898, 0.000814585388519866, 0.00078360476795075, 0.000706834694814504, 0.000597318567065656, 0.000470386716693162, 0.00034156752788127, 0.000224545196454555, 0.000129438053258184, 6.1625661563319e-05, 2.12765107101968e-05, 3.63155544170478e-06, 0.000396533490488905, 0.000890613001142708, 0.00131135277555612, 0.00162570702602404, 0.00181326586873791, 0.00186763232808082, 0.00179660182675545, 0.00162058802582181, 0.00136949604269451, 0.00107847433943325, 0.000783125460245287, 0.000514823705315649, 0.000296767774325154, 0.00014129160600849, 4.87815025792747e-05, 8.32621164058635e-06, 0.000606126921013744, 0.00136135920204839, 0.00200448698350965, 0.00248499765540468, 0.00277169339881563, 0.00285479602544953, 0.00274622133983262, 0.00247717293465431, 0.00209336270355242, 0.00164851732938633, 0.00119705758875675, 0.000786941115574177, 0.000453628613023394, 0.00021597329902557, 7.45656613375687e-05, 1.27271495257438e-05, 0.000793843590873702, 0.00178297026572517, 0.00262527383239725, 0.00325459799538329, 0.00363008301435739, 0.00373892240962423, 0.00359672229390597, 0.00324434996942914, 0.00274167424012412, 0.00215906086828948, 0.0015677846698377, 0.00103065569163095, 0.000594116767628908, 0.000282859931290546, 9.76585436150685e-05, 1.66687301468233e-05, 0.000952874887324245, 0.00214015406887078, 0.00315119695617573, 0.00390659411222728, 0.00435730033352852, 0.00448794360846784, 0.00431725643431883, 0.00389429309136043, 0.00329091594701014, 0.00259158719078812, 0.0018818601772373, 0.0012371277381632, 0.000713136636133538, 0.00033952547864042, 0.00011722255468617, 2.00079896633183e-05, 0.00107746872515618, 0.00241999144578079, 0.00356323396938398, 0.00441740362118687, 0.00492704225700932, 0.00507476788686024, 0.00488176238910042, 0.00440349417153316, 0.00372122201685704, 0.00293045202862962, 0.00212792415149469, 0.00139888926093659, 0.000806383327358591, 0.000383920375586779, 0.000132550073716319, 2.26241486707769e-05, 0.00116312081568776, 0.0026123657779171, 0.00384648900166964, 0.00476855985063716, 0.00531871160164774, 0.00547818050415838, 0.0052698322646732, 0.00475354468588178, 0.00401703612044484, 0.00316340481565206, 0.00229708094260411, 0.00151009229339958, 0.000870485807686331, 0.000414439667700722, 0.000143086983650548, 2.4422628371307e-05, 0.00120673509041894, 0.00271032330494239, 0.00399072322549796, 0.00494736954657987, 0.00551815068474335, 0.00568359929325819, 0.00546743848844523, 0.00493179134872256, 0.00416766545713895, 0.00328202500098011, 0.00238321603532984, 0.00156671717644307, 0.000903126962976443, 0.000429980173280884, 0.000148452406512231, 2.53384190691236e-05, 0.00120673509041894, 0.00271032330494239, 0.00399072322549796, 0.00494736954657987, 0.00551815068474335, 0.00568359929325819, 0.00546743848844523, 0.00493179134872256, 0.00416766545713895, 0.00328202500098011, 0.00238321603532984, 0.00156671717644307, 0.000903126962976443, 0.000429980173280884, 0.000148452406512231, 2.53384190691236e-05, 0.00116312081568776, 0.0026123657779171, 0.00384648900166964, 0.00476855985063716, 0.00531871160164774, 0.00547818050415838, 0.0052698322646732, 0.00475354468588178, 0.00401703612044484, 0.00316340481565206, 0.00229708094260411, 0.00151009229339958, 0.000870485807686331, 0.000414439667700722, 0.000143086983650548, 2.4422628371307e-05, 0.00107746872515618, 0.00241999144578079, 0.00356323396938398, 0.00441740362118687, 0.00492704225700932, 0.00507476788686024, 0.00488176238910042, 0.00440349417153316, 0.00372122201685703, 0.00293045202862961, 0.00212792415149469, 0.00139888926093659, 0.000806383327358591, 0.000383920375586778, 0.000132550073716319, 2.26241486707769e-05, 0.000952874887324245, 0.00214015406887078, 0.00315119695617573, 0.00390659411222728, 0.00435730033352852, 0.00448794360846784, 0.00431725643431883, 0.00389429309136043, 0.00329091594701014, 0.00259158719078812, 0.0018818601772373, 0.0012371277381632, 0.000713136636133538, 0.00033952547864042, 0.00011722255468617, 2.00079896633183e-05, 0.000793843590873704, 0.00178297026572517, 0.00262527383239726, 0.0032545979953833, 0.0036300830143574, 0.00373892240962424, 0.00359672229390598, 0.00324434996942915, 0.00274167424012413, 0.00215906086828949, 0.0015677846698377, 0.00103065569163096, 0.000594116767628909, 0.000282859931290547, 9.76585436150687e-05, 1.66687301468233e-05, 0.000606126921013744, 0.00136135920204839, 0.00200448698350965, 0.00248499765540468, 0.00277169339881563, 0.00285479602544953, 0.00274622133983262, 0.00247717293465431, 0.00209336270355242, 0.00164851732938633, 0.00119705758875675, 0.000786941115574177, 0.000453628613023394, 0.00021597329902557, 7.45656613375687e-05, 1.27271495257438e-05, 0.000396533490488905, 0.000890613001142707, 0.00131135277555612, 0.00162570702602404, 0.00181326586873791, 0.00186763232808081, 0.00179660182675544, 0.00162058802582181, 0.00136949604269451, 0.00107847433943325, 0.000783125460245286, 0.000514823705315648, 0.000296767774325154, 0.00014129160600849, 4.87815025792746e-05, 8.32621164058634e-06, 0.000172951807780587, 0.000388449228816992, 0.000571958834778086, 0.000709067394851801, 0.000790872946439898, 0.000814585388519866, 0.00078360476795075, 0.000706834694814504, 0.000597318567065656, 0.000470386716693162, 0.00034156752788127, 0.000224545196454555, 0.000129438053258184, 6.1625661563319e-05, 2.12765107101968e-05, 3.63155544170478e-06};
    // Quadrature points on the UFC reference element: (0.00527304915217375, 0.00499729966377194), (0.00516098410364713, 0.0261435136813941), (0.00496337814628295, 0.0634309455838362), (0.00468691482678896, 0.115598437579816), (0.00434100309421975, 0.180870559657884), (0.00393742118062018, 0.257024807845171), (0.00348991212300204, 0.341467927547823), (0.00301371512544807, 0.431324343595625), (0.00252504643925511, 0.523534116025168), (0.00204054708913065, 0.614957151876489), (0.0015767161797039, 0.702480137925041), (0.00114934907468567, 0.783122553964868), (0.000772999626984461, 0.854138147775211), (0.000460484982881981, 0.913108376537141), (0.000222450962831022, 0.958024417690475), (6.70230782719439e-05, 0.987353020626042), (0.0275740008541034, 0.00499729966377194), (0.0269879866420958, 0.0261435136813941), (0.0259546591156702, 0.0634309455838362), (0.0245089680955679, 0.115598437579816), (0.0227001151654989, 0.180870559657884), (0.020589691441171, 0.257024807845171), (0.0182495624605992, 0.341467927547823), (0.0157594175675134, 0.431324343595625), (0.0132040553128485, 0.523534116025168), (0.0106704954865312, 0.614957151876489), (0.00824501574537984, 0.702480137925041), (0.00601021372121674, 0.783122553964868), (0.00404219489702728, 0.854138147775211), (0.00240798311277918, 0.913108376537141), (0.00116324784049654, 0.958024417690475), (0.000350479269997483, 0.987353020626042), (0.0668486582325197, 0.00499729966377194), (0.065427962556721, 0.0261435136813941), (0.0629228288613327, 0.0634309455838362), (0.0594179872743615, 0.115598437579816), (0.0550327189937492, 0.180870559657884), (0.049916341612757, 0.257024807845171), (0.0442430813822242, 0.341467927547823), (0.0382061320911832, 0.431324343595625), (0.0320110739664585, 0.523534116025168), (0.0258688722657604, 0.614957151876489), (0.0199886930663752, 0.702480137925041), (0.0145707808264693, 0.783122553964868), (0.00979964085046436, 0.854138147775211), (0.00583776148363679, 0.913108376537141), (0.00282010426200069, 0.958024417690475), (0.000849679705952344, 0.987353020626042), (0.121686637088555, 0.00499729966377194), (0.119100501724209, 0.0261435136813941), (0.114540330990658, 0.0634309455838362), (0.108160361705962, 0.115598437579816), (0.100177725047158, 0.180870559657884), (0.0908642283513329, 0.257024807845171), (0.0805370209393231, 0.341467927547823), (0.0695477793161675, 0.431324343595625), (0.0582707273947403, 0.523534116025168), (0.0470898916227224, 0.614957151876489), (0.0363860233451813, 0.702480137925041), (0.0265236336137095, 0.783122553964868), (0.0178385830216787, 0.854138147775211), (0.0106266540249461, 0.913108376537141), (0.00513352119482074, 0.958024417690475), (0.00154669770124771, 0.987353020626042), (0.190107084340995, 0.00499729966377194), (0.186066848982456, 0.0261435136813941), (0.178942642224885, 0.0634309455838362), (0.168975423244085, 0.115598437579816), (0.156504409031945, 0.180870559657884), (0.141954235370935, 0.257024807845171), (0.125820374353368, 0.341467927547823), (0.108652238771016, 0.431324343595625), (0.0910344664992385, 0.523534116025168), (0.0735670095954292, 0.614957151876489), (0.0568447035304454, 0.702480137925041), (0.0414370120916538, 0.783122553964868), (0.0278686393852616, 0.854138147775211), (0.0166016767437895, 0.913108376537141), (0.00801993357775072, 0.958024417690475), (0.00241635562766962, 0.987353020626042), (0.269637384883995, 0.00499729966377194), (0.263906938277184, 0.0261435136813941), (0.253802357029498, 0.0634309455838362), (0.239665404322737, 0.115598437579816), (0.221977206796226, 0.180870559657884), (0.201340044382407, 0.257024807845171), (0.178456667321848, 0.341467927547823), (0.154106332362967, 0.431324343595625), (0.129118257566538, 0.523534116025168), (0.10434338178301, 0.614957151876489), (0.0806253867791817, 0.702480137925041), (0.0587719685277958, 0.783122553964868), (0.0395273383428383, 0.854138147775211), (0.0235469010394975, 0.913108376537141), (0.0113750306799152, 0.958024417690475), (0.00342722531700029, 0.987353020626042), (0.357403203443298, 0.00499729966377194), (0.349807520910937, 0.0261435136813941), (0.3364139415713, 0.0634309455838362), (0.317675471063968, 0.115598437579816), (0.294229840696975, 0.180870559657884), (0.266875369951564, 0.257024807845171), (0.23654355127381, 0.341467927547823), (0.204267286159588, 0.431324343595625), (0.17114569961117, 0.523534116025168), (0.138306707444885, 0.614957151876489), (0.106868606243648, 0.702480137925041), (0.0779019935738509, 0.783122553964868), (0.0523933183575246, 0.854138147775211), (0.0312113168813717, 0.913108376537141), (0.0150775546425677, 0.958024417690475), (0.00454277253780982, 0.987353020626042), (0.450232498241028, 0.00499729966377194), (0.440663968665906, 0.0261435136813941), (0.423791638959911, 0.0634309455838362), (0.400186175135157, 0.115598437579816), (0.370650948166656, 0.180870559657884), (0.336191627200549, 0.257024807845171), (0.297981643719957, 0.341467927547823), (0.257322177502915, 0.431324343595625), (0.215597832243187, 0.523534116025168), (0.174229480364132, 0.614957151876489), (0.134625876626335, 0.702480137925041), (0.0981356877800786, 0.783122553964868), (0.0660015757776728, 0.854138147775211), (0.0393179161168928, 0.913108376537141), (0.0189936884412001, 0.958024417690475), (0.00572267906088686, 0.987353020626042), (0.5447702020952, 0.00499729966377194), (0.5331925176527, 0.0261435136813941), (0.512777415456253, 0.0634309455838362), (0.484215387285027, 0.115598437579816), (0.44847849217546, 0.180870559657884), (0.40678356495428, 0.257024807845171), (0.36055042873222, 0.341467927547823), (0.31135347890146, 0.431324343595625), (0.260868051731645, 0.523534116025168), (0.210813367759379, 0.614957151876489), (0.162893985448624, 0.702480137925041), (0.118741758255053, 0.783122553964868), (0.0798602764471166, 0.854138147775211), (0.0475737073459659, 0.913108376537141), (0.0229818938683244, 0.958024417690475), (0.00692430031307151, 0.987353020626042), (0.63759949689293, 0.00499729966377194), (0.624048965407669, 0.0261435136813941), (0.600155112844864, 0.0634309455838362), (0.566726091356216, 0.115598437579816), (0.524899599645142, 0.180870559657884), (0.476099822203266, 0.257024807845171), (0.421988521178367, 0.341467927547823), (0.364408370244786, 0.431324343595625), (0.305320184363661, 0.523534116025168), (0.246736140678625, 0.614957151876489), (0.190651255831311, 0.702480137925041), (0.138975452461281, 0.783122553964868), (0.0934685338672648, 0.854138147775211), (0.055680306581487, 0.913108376537141), (0.0268980276669569, 0.958024417690475), (0.00810420683614854, 0.987353020626042), (0.725365315452234, 0.00499729966377194), (0.709949548041422, 0.0261435136813941), (0.682766697386666, 0.0634309455838362), (0.644736158097447, 0.115598437579816), (0.59715223354589, 0.180870559657884), (0.541635147772422, 0.257024807845171), (0.480075405130329, 0.341467927547823), (0.414569324041408, 0.431324343595625), (0.347347626408293, 0.523534116025168), (0.280699466340501, 0.614957151876489), (0.216894475295777, 0.702480137925041), (0.158105477507336, 0.783122553964868), (0.106334513881951, 0.854138147775211), (0.0633447224233612, 0.913108376537141), (0.0306005516296094, 0.958024417690475), (0.00921975405695807, 0.987353020626042), (0.804895615995233, 0.00499729966377194), (0.78778963733615, 0.0261435136813941), (0.757626412191279, 0.0634309455838362), (0.715426139176099, 0.115598437579816), (0.662625031310171, 0.180870559657884), (0.601020956783894, 0.257024807845171), (0.532711698098809, 0.341467927547823), (0.460023417633359, 0.431324343595625), (0.385431417475593, 0.523534116025168), (0.311475838528081, 0.614957151876489), (0.240675158544514, 0.702480137925041), (0.175440433943478, 0.783122553964868), (0.117993212839528, 0.854138147775211), (0.0702899467190692, 0.913108376537141), (0.0339556487317738, 0.958024417690475), (0.0102306237462887, 0.987353020626042), (0.873316063247673, 0.00499729966377194), (0.854755984594397, 0.0261435136813941), (0.822028723425505, 0.0634309455838362), (0.776241200714222, 0.115598437579816), (0.718951715294959, 0.180870559657884), (0.652110963803496, 0.257024807845171), (0.577995051512854, 0.341467927547823), (0.499127877088207, 0.431324343595625), (0.418195156580092, 0.523534116025168), (0.337952956500788, 0.614957151876489), (0.261133838729778, 0.702480137925041), (0.190353812421422, 0.783122553964868), (0.128023269203111, 0.854138147775211), (0.0762649694379126, 0.913108376537141), (0.0368420611147038, 0.958024417690475), (0.0111002816727107, 0.987353020626042), (0.928154042103708, 0.00499729966377194), (0.908428523761885, 0.0261435136813941), (0.873646225554831, 0.0634309455838362), (0.824983575145822, 0.115598437579816), (0.764096721348367, 0.180870559657884), (0.693058850542072, 0.257024807845171), (0.614288991069953, 0.341467927547823), (0.530469524313191, 0.431324343595625), (0.444454810008373, 0.523534116025168), (0.35917397585775, 0.614957151876489), (0.277531169008584, 0.702480137925041), (0.202306665208663, 0.783122553964868), (0.136062211374325, 0.854138147775211), (0.0810538619792219, 0.913108376537141), (0.0391554780475239, 0.958024417690475), (0.011797299668006, 0.987353020626042), (0.967428699482125, 0.00499729966377194), (0.94686849967651, 0.0261435136813941), (0.910614395300494, 0.0634309455838362), (0.859892594324616, 0.115598437579816), (0.796429325176617, 0.180870559657884), (0.722385500713658, 0.257024807845171), (0.640282509991578, 0.341467927547823), (0.552916238836861, 0.431324343595625), (0.463261828661983, 0.523534116025168), (0.374372352636979, 0.614957151876489), (0.289274846329579, 0.702480137925041), (0.210867232313915, 0.783122553964868), (0.141819657327762, 0.854138147775211), (0.0844836403500796, 0.913108376537141), (0.0408123344690281, 0.958024417690475), (0.0122965001039609, 0.987353020626042), (0.989729651184054, 0.00499729966377194), (0.968695502214959, 0.0261435136813941), (0.931605676269881, 0.0634309455838362), (0.879714647593395, 0.115598437579816), (0.814788437247897, 0.180870559657884), (0.739037770974209, 0.257024807845171), (0.655042160329175, 0.341467927547823), (0.565661941278927, 0.431324343595625), (0.473940837535577, 0.523534116025168), (0.38300230103438, 0.614957151876489), (0.295943145895255, 0.702480137925041), (0.215728096960446, 0.783122553964868), (0.145088852597805, 0.854138147775211), (0.0864311384799767, 0.913108376537141), (0.0417531313466936, 0.958024417690475), (0.0125799562956864, 0.987353020626042)
    
    // Values of basis functions at quadrature points.
    static const double FE0_C0[256][32] = \
    {{0.944457527168746, 0.00514858621726442, 0.00488548273521769, -0.000116703703321661, -0.000116801798056398, 0.0438280227926876, -0.0219232173855719, 0.0462464398730884, -0.023113505963607, 0.000704170063553028, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.836506957584515, 0.00504174179774673, 0.0231482477455682, -0.000597767407636132, -0.00055954763579763, 0.217223276550646, -0.105024791238757, 0.0428819894250814, -0.0221490732349435, 0.00352896641357603, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.664491568869481, 0.00485307032491111, 0.0464737242451543, -0.00139564746783552, -0.00114714692399552, 0.477272055281738, -0.215314762327754, 0.0373458359671772, -0.0204977726745187, 0.00791907470564198, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.460816051273388, 0.00458852587127692, 0.0624162811176242, -0.002403818636627, -0.00159257843926876, 0.750107304099134, -0.298920426814302, 0.0304129460472809, -0.0182932789497159, 0.0128689944312099, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.261476137404333, 0.00425657182322601, 0.0602834699760322, -0.00348720532919496, -0.00161605286201824, 0.957860585731409, -0.303326479473602, 0.0229892348116584, -0.0157092153964244, 0.01727295331458, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0976459210877976, 0.0038679310889711, 0.0361547153655965, -0.0045002733092245, -0.00104254244770809, 1.04036373403136, -0.195680932101526, 0.0159375674133049, -0.0129398869436279, 0.0201937658150552, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0110234938166815, 0.00343529570720495, -0.00406487485038623, -0.00530647356507686, 0.000130868182858936, 0.971439856102483, 0.0245634199936891, 0.00992842799300533, -0.0101794740512225, 0.021076448304126, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0597329351899336, 0.00297296714460764, -0.0447613065796832, -0.00579661297008271, 0.00171959499141955, 0.765239516159272, 0.322760911556079, 0.00534682064363575, -0.00760198999705405, 0.0198530342417398, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0577943079543173, 0.00249642751844959, -0.0641369364600141, -0.00590370307003853, 0.00339437973348305, 0.470989675788124, 0.637111123498951, 0.0022716204491198, -0.00534445777635079, 0.0169161782725923, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0242830823857433, 0.00202184807745999, -0.0402992734044388, -0.00561225280778299, 0.00477083755512984, 0.157930184315888, 0.895466598741649, 0.000524042979105441, -0.00349537481238923, 0.0129764717411214, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0184598676555865, 0.00156554666606744, 0.0417918978877754, -0.00496067683973492, 0.00551976331236913, -0.10493823280857, 1.03603688494307, -0.000235533790361116, -0.00208985027542183, 0.00885033324921514, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0514829315108775, 0.00114341139217865, 0.184591941443299, -0.00403639947153573, 0.00546543198496308, -0.268223528783508, 1.0258391181159, -0.000393658008003407, -0.00111191380219875, 0.00524266561803052, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0641044120875669, 0.000770312827581186, 0.375276036802065, -0.00296422809372522, 0.00464211785305463, -0.314933010920577, 0.87130643975984, -0.000285016072166869, -0.000503520951589689, 0.00258645670795214, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0557201164551587, 0.000459531213393295, 0.587095255794177, -0.00188951323974101, 0.00329102426236882, -0.26305785808652, 0.617711726409709, -0.000132661353669149, -0.00017885366587389, 0.000981232210996635, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0342357250065591, 0.000222228332427507, 0.784659028034516, -0.00095837054513237, 0.00179725600915337, -0.157455353388175, 0.337337565361872, -3.656075389874e-05, -4.17682164575439e-05, 0.000240250159136035, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0118767662453118, 6.70028652081933e-05, 0.931872025471897, -0.000297729598223551, 0.000584280537024751, -0.0537844333556042, 0.109667055135382, -3.65097205493048e-06, -3.79340039008413e-06, 2.24770714492006e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.830250358213063, 0.0242468794749492, 0.00488548273521769, -0.000568785697893745, -0.000610783777359181, 0.0413849759935334, -0.021429235406269, 0.228353198761629, -0.11011138915415, 0.00359929885727953, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.732508409588015, 0.0237988605617583, 0.0231482477455682, -0.00291796110825823, -0.00292600477297518, 0.205034457720279, -0.102658334101579, 0.211657364559314, -0.105683019136688, 0.0180379789445651, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.577073477629818, 0.0230019385717767, 0.0464737242451543, -0.00683162495789348, -0.00599869816290112, 0.45014950410573, -0.210463211088848, 0.18419206623225, -0.0980747799467943, 0.0404776033717071, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.393703593560885, 0.0218721155295207, 0.0624162811176242, -0.0118119694931815, -0.00832796319118648, 0.706605798251292, -0.292185042062384, 0.149813261563563, -0.0878647264117395, 0.0657786511356068, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.215367671795773, 0.0204339243117709, 0.0602834699760322, -0.0172177979632383, -0.00845071640934604, 0.900575060126324, -0.296491815926274, 0.113026451727201, -0.0758153191919517, 0.0882890715537089, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.07046791037423, 0.0187212613150366, 0.0361547153655965, -0.0223432908614505, -0.00545169701892258, 0.975181988261571, -0.191271777530312, 0.078119681931203, -0.0627973209740238, 0.103218529137071, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0233342497877707, 0.0167782038661164, -0.00406487485038623, -0.0265070976612463, 0.000684340176203939, 0.905986651084015, 0.0240099480003442, 0.0484199499969471, -0.0497031482429866, 0.107730277418763, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0621474659378611, 0.0146594139647221, -0.0447613065796832, -0.0291422262445891, 0.00899216229429033, 0.706961251835106, 0.315488344253208, 0.0258304399859391, -0.0373575254115443, 0.101476911840412, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0550940524835676, 0.0124298528656771, -0.0641369364600142, -0.029875245741481, 0.0177500013690625, 0.425411947151886, 0.622755501863372, 0.0107293158344431, -0.0264358339796512, 0.0864654495802732, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0202084788242813, 0.0101635950703668, -0.0402992734044387, -0.0285832863904734, 0.0249478195676805, 0.127549678372541, 0.875289616729099, 0.00221319203009445, -0.0174008744177471, 0.0663280112671594, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0216443848527333, 0.00794162670782046, 0.0417918978877754, -0.0254191292946671, 0.0288641265987394, -0.120867090678355, 1.0126925216567, -0.00141861813870628, -0.0104673631659765, 0.0452376435739326, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.052967720700787, 0.00584863868315386, 0.184591941443299, -0.0207984081999753, 0.0285800154469052, -0.273016245216284, 1.00272453465395, -0.00209531187016184, -0.00560027642092488, 0.0267973907792459, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.06414775542816, 0.00396896507947025, 0.375276036802065, -0.0153482611614516, 0.0242747142973649, -0.313182950633712, 0.851673843315529, -0.00148213322187403, -0.0025483993943647, 0.0132204294888131, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0550784590653912, 0.00238195322159173, 0.587095255794177, -0.00982289652964033, 0.0172095315637295, -0.259158718474994, 0.603793219108349, -0.0006834345556921, -0.000908845082281909, 0.0050154758893696, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0336228297432636, 0.00115716576877001, 0.784659028034516, -0.0049973885802983, 0.00939826982477632, -0.15440410122011, 0.329736551546249, -0.000187479811570107, -0.000212891331833165, 0.0012280160262369, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0116244492426242, 0.000349926702994524, 0.931872025471897, -0.00155557313660287, 0.00305533886789433, -0.0526190021762828, 0.107195996804513, -1.86780909011836e-05, -1.93731166426014e-05, 0.000114889430507081, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.649634947999193, 0.048083596912069, 0.00488548273521769, -0.00120180524410511, -0.00148074543852675, 0.0372456280359796, -0.0205592737451016, 0.498233131241414, -0.223212628857185, 0.00837166636104464, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.568369539155746, 0.0474246637601491, 0.0231482477455682, -0.00618646473043204, -0.00709362033062488, 0.184386118656678, -0.0984907185439293, 0.461453200762145, -0.214965788105641, 0.0419548216303404, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.439663999248489, 0.0462271397153462, 0.0464737242451543, -0.0145702415503211, -0.0145428632374959, 0.404218223692873, -0.201919046014253, 0.400980213647325, -0.20067865012411, 0.0941475003769922, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.288962425232651, 0.0444747374943446, 0.0624162811176242, -0.0253991997377269, -0.0201897855913709, 0.632976070535766, -0.2803232196622, 0.325351837719271, -0.181264756204036, 0.152995609095678, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.144308721917261, 0.0421540427313822, 0.0602834699760322, -0.0373970018979949, -0.0204873807053736, 0.803690382253002, -0.284455151630246, 0.244535468061623, -0.157985504067473, 0.205352953361787, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.029609372367282, 0.0392636376436862, 0.0361547153655965, -0.0490882380311127, -0.0132167483686344, 0.865067848766635, -0.1835067261806, 0.168003324734552, -0.132364802099075, 0.24007761580167, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0406789045874784, 0.0358242715945952, -0.00406487485038623, -0.0589606824027711, 0.0016590709050855, 0.795598950477672, 0.0230352172714626, 0.103083617153666, -0.106068228328477, 0.250571562766631, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0640925142677473, 0.0318884078850177, -0.0447613065796832, -0.0656568511908494, 0.0218000277566873, 0.608926028143437, 0.302680478790811, 0.0539378512028033, -0.0807488822188179, 0.236026760478341, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0493861710761866, 0.027547493251767, -0.0641369364600142, -0.0681726562917988, 0.0430319771666594, 0.349063445223783, 0.597473526065775, 0.0213432046203234, -0.0578752445590023, 0.201111362058694, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0128426746631649, 0.0229353801338152, -0.0402992734044388, -0.0660314821658298, 0.0604819109403295, 0.0770525108667772, 0.83975552535645, 0.00324130153667848, -0.038566573148896, 0.154273374548279, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0271191561793165, 0.0182266667161879, 0.0417918978877754, -0.0593983645867084, 0.0699763572355218, -0.146869165274632, 0.971580291019921, -0.00417908280547379, -0.0234667098341596, 0.10521895346225, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0553907450067316, 0.0136293170812678, 0.184591941443299, -0.0491036326094608, 0.0692875761845053, -0.280242106724246, 0.962016973916355, -0.00521418556361777, -0.0126851054315275, 0.0623284766966941, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0640891402741986, 0.00937172742523833, 0.375276036802065, -0.0365587687759207, 0.0588500772282787, -0.309501620389615, 0.817098480384616, -0.00355095335614639, -0.00582372645189895, 0.0307496068591855, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0538863419584481, 0.00568529918240033, 0.587095255794177, -0.0235671938644917, 0.0417216964608279, -0.252064520256512, 0.57928105421125, -0.0016115201498046, -0.00209198834203488, 0.0116655750057396, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0325264372251474, 0.00278441674293191, 0.784659028034516, -0.0120549207293875, 0.0227845690880207, -0.148974815018384, 0.316350252283004, -0.000438532153258661, -0.000492697446190446, 0.00285626197360056, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.01117839497969, 0.000846433666179758, 0.931872025471897, -0.00376557907095615, 0.00740716970471855, -0.0505613299620284, 0.102844165967689, -4.3511221495568e-05, -4.4992686299275e-05, 0.000267223150606122, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.438528651797883, 0.0631607800095187, 0.00488548273521769, -0.00173749492224223, -0.00269544576604344, 0.0318141613831165, -0.0193445734175849, 0.774690046820589, -0.303640431332499, 0.014338822692045, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.377232141524964, 0.062870763922446, 0.0231482477455682, -0.00900528255031362, -0.0129127319177338, 0.157300378804215, -0.0926716069568205, 0.716604289129015, -0.294425579004025, 0.0718593793026847, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.280855356413509, 0.0622648345287289, 0.0464737242451543, -0.0214598566066009, -0.0264728143810186, 0.344001383630898, -0.18998909487073, 0.621179961604863, -0.27810745006005, 0.161253955495247, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.169524405957061, 0.0612103671142948, 0.0624162811176242, -0.038007571656316, -0.0367520781585067, 0.536532232528894, -0.263760927095064, 0.502009556116745, -0.255220084945871, 0.262047819021138, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0652300155823362, 0.0595416659148374, 0.0602834699760322, -0.0570320105783076, -0.0372937995571774, 0.676953913273335, -0.267648732778443, 0.374940527202253, -0.226699480056634, 0.351724431021767, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0136161722031533, 0.0570867561258867, 0.0361547153655965, -0.0764465980728866, -0.0240588473239148, 0.721303686328466, -0.172664627225319, 0.254997575583011, -0.193956626859299, 0.411200138281613, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0564270407162567, 0.0536997788701999, -0.00406487485038623, -0.0938533940447371, 0.00302005701339736, 0.651889264144353, 0.0216742311631508, 0.153751538815196, -0.158863521136833, 0.429173960741916, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0623892762746948, 0.049295536522474, -0.0447613065796832, -0.106824781713543, 0.0396832507381268, 0.481858804834925, 0.284797255809372, 0.0776960779464603, -0.123617475592984, 0.404261914309547, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0396808046413149, 0.0438814341666031, -0.0641369364600142, -0.11328195849148, 0.078332411257507, 0.250824591203472, 0.562173091974928, 0.0279174382920482, -0.0904887855804349, 0.344459518278686, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.00230936794222663, 0.037581220437419, -0.0402992734044388, -0.111903033885987, 0.110097054175993, 0.0129610870048885, 0.790140382120786, 0.000992485704915246, -0.0614969043416747, 0.264236350130325, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0344061311519647, 0.0306450597623545, 0.0417918978877754, -0.102466477608131, 0.12738008230591, -0.178799017678001, 0.914176565949533, -0.00926116608868659, -0.0380899945697615, 0.180216918887042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0583364816341323, 0.0234418370512756, 0.184591941443299, -0.0860331067589911, 0.126126273299049, -0.287739124061877, 0.905178276801811, -0.00974545690748859, -0.0209120906850653, 0.106754968183855, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0637107923556892, 0.0164321595973657, 0.375276036802065, -0.0648954694605362, 0.107126577849954, -0.303082624416618, 0.768821979762941, -0.00632984789658062, -0.00972691616508273, 0.0526673115708041, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0520875397776036, 0.0101238881381726, 0.587095255794177, -0.0422727587523179, 0.0759472676069035, -0.241673943896439, 0.545055483065175, -0.00281257455809501, -0.00353072070867228, 0.0199805635334924, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0309590745070317, 0.00501554129296018, 0.784659028034516, -0.0217903413886998, 0.0414754411403332, -0.141275280762533, 0.297659380230692, -0.000757015828309587, -0.000837975603052002, 0.00489214837706209, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0105519633412777, 0.00153594911980159, 0.931872025471897, -0.00684022765993431, 0.0134834953392219, -0.0476771526897702, 0.0967678403331852, -7.46867036681698e-05, -7.69010193361758e-05, 0.000457694467326075, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.236096823481758, 0.0583916354882495, 0.00488548273521769, -0.00183691931427642, -0.004211007451943, 0.0256063563168353, -0.0178290117316853, 0.974116036162595, -0.295865447837111, 0.0206460521503603, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.195137808569612, 0.0592610084486128, 0.0231482477455682, -0.00967098360096032, -0.0201731420515044, 0.126357236944376, -0.0854111968230499, 0.899301188466567, -0.291418389912392, 0.10346822221317, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.131577855702874, 0.0606347539388314, 0.0464737242451543, -0.0236575578698549, -0.0413576188535262, 0.275268177928286, -0.175104290398223, 0.776548648700408, -0.282568555855063, 0.232184862461113, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0599798225963616, 0.0621994675039565, 0.0624162811176242, -0.0433410956498316, -0.0574165790866713, 0.426598571822903, -0.243096426166899, 0.623578274397747, -0.268233320255836, 0.377315003720645, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.00396842577006952, 0.0635331987525646, 0.0602834699760322, -0.0675742964709458, -0.0582628928487277, 0.532782891093585, -0.246679639486892, 0.461008533785991, -0.247560578125693, 0.506437739094155, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0475266026206055, 0.0641470553838739, 0.0361547153655965, -0.0942652599815078, -0.0375863564544572, 0.558247413025564, -0.159137118094777, 0.308318816880833, -0.220427736997656, 0.592075073493135, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0640238231283804, 0.0635451730534492, -0.00406487485038623, -0.120359363778311, 0.00471813706991296, 0.489614138939423, 0.0199761511066352, 0.180407673108428, -0.187768267201191, 0.617955055680419, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0541946356194969, 0.0613003779463629, -0.0447613065796832, -0.142148718517488, 0.0619958548900314, 0.339359728580571, 0.262484651657467, 0.0854860032977217, -0.151606883023332, 0.582084927367846, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0254127188497645, 0.0571366571807848, -0.0641369364600142, -0.155896365601549, 0.122376184187976, 0.141921313246567, 0.518129319044458, 0.0246779161869393, -0.114772572281058, 0.49597720334566, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0108817565131953, 0.0510042232210298, -0.0402992734044387, -0.158651643809211, 0.17200105504353, -0.0565201587088032, 0.728236381253248, -0.0067614776824335, -0.0803570681933587, 0.380466205767241, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0427492464002985, 0.0431303375979297, 0.0417918978877754, -0.149051070653776, 0.199001769049382, -0.21148658554148, 0.842554879206061, -0.0171134977442657, -0.0510660559980915, 0.259489079796166, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0612331156388199, 0.0340305631384411, 0.184591941443299, -0.127873500510561, 0.197042983924591, -0.292857123939394, 0.834261566176269, -0.0154958175120418, -0.0286470901723652, 0.153713361812942, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0627347888603327, 0.0244710648016001, 0.375276036802065, -0.0981609322715619, 0.167360376272563, -0.29298397426267, 0.708588181340331, -0.00955941933474677, -0.0135602464357946, 0.0758341242278813, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0496196615055619, 0.0153819967958333, 0.587095255794177, -0.0648185812489724, 0.118649951661552, -0.227916987934978, 0.502352799010527, -0.00414387191634841, -0.00498965373603783, 0.0287694300686858, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0289433881247781, 0.00773281783764919, 0.784659028034516, -0.0337429517244119, 0.0647957357980671, -0.131474583664117, 0.274339085572958, -0.00110061644429754, -0.00119596514949949, 0.00704406161435833, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.00976444684375988, 0.00239014463083298, 0.931872025471897, -0.0106582555480991, 0.0210648272233824, -0.0440604512346903, 0.0891865084490246, -0.000107829435951043, -0.00011043730056684, 0.000659020900410923, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0751136561079528, 0.0306850593111976, 0.0048854827352177, -0.00115867350556727, -0.00597266030881977, 0.0191843657143222, -0.0160673588748085, 1.0351234766585, -0.16818314478216, 0.0263897969441643, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0520781057632081, 0.0332073314180039, 0.0231482477455682, -0.00646655756811139, -0.0286124701060811, 0.0943678859131328, -0.0769718687684732, 0.952601098174096, -0.175604919782908, 0.132253147211565, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0172852600433309, 0.0375017746816785, 0.0464737242451543, -0.0172849018934672, -0.0586593615453659, 0.204301546055258, -0.157802547706383, 0.817459261506077, -0.186053593744036, 0.296778838357753, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0198137095174607, 0.0431358081560412, 0.0624162811176242, -0.0350333767109432, -0.0814365034716204, 0.313321579704743, -0.21907650178195, 0.649596522713621, -0.195394377109972, 0.482284276899917, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0492808813096306, 0.0494642977430195, 0.0602834699760322, -0.0603565140838106, -0.0826368681523122, 0.384673808707614, -0.222305664183308, 0.472099040032246, -0.199269727822842, 0.64732903909299, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0634792683610633, 0.0556483669950136, 0.0361547153655965, -0.0922127177910754, -0.0533104113233301, 0.391479210129117, -0.143413063225904, 0.306664723156478, -0.194322289143983, 0.75679073419915, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0591517936552391, 0.0607208655220967, -0.00406487485038623, -0.127409689292922, 0.00669194493969333, 0.324748976300652, 0.0180023432368549, 0.169719072719295, -0.179127388753847, 0.789870543833802, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0382055473731331, 0.0637061603474172, -0.0447613065796832, -0.160827999881276, 0.0879314952630143, 0.196102614222206, 0.236549011284484, 0.0700648017977544, -0.154580552170783, 0.744021323089998, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.00699476067937938, 0.0637830894382395, -0.0641369364600141, -0.186360648349624, 0.173571618285097, 0.0344044236709786, 0.466933884947337, 0.00848509982635809, -0.123644146348317, 0.633958375669323, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0256607756149209, 0.0604616387981314, -0.0402992734044388, -0.198362676022441, 0.243956793298862, -0.122655066081456, 0.656280642997917, -0.0208116034567692, -0.0905433770978503, 0.486312145353124, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.05111537383683, 0.0537318052250734, 0.0417918978877754, -0.19322286965545, 0.282253114237011, -0.239504813004612, 0.759303534018432, -0.0274885610873072, -0.0596585877187253, 0.331679106260972, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0634024135597729, 0.0441418501132918, 0.184591941443299, -0.170597696459387, 0.279474881640214, -0.292896082671246, 0.751829668460646, -0.0219813351888745, -0.0344421573913361, 0.19647651649362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0608633574600314, 0.032774401872629, 0.375276036802065, -0.133912189742976, 0.23737471093077, -0.27832981821551, 0.638573846682124, -0.012880395196212, -0.0166711762450568, 0.0969312256521355, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0464320135551456, 0.0211105973716188, 0.587095255794177, -0.0899191612075391, 0.168286535946489, -0.210820081655732, 0.452716214725589, -0.00543655027972955, -0.00623792799802596, 0.0367731037480068, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.026515723454644, 0.0107993929627629, 0.784659028034516, -0.0473655465126551, 0.0919026916476542, -0.119811651281551, 0.247232129723371, -0.00142257460663109, -0.00151291744214548, 0.0090037240200353, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0088407633813154, 0.00337455003771531, 0.931872025471897, -0.0150709018429829, 0.0298771870876633, -0.0398311449719918, 0.0803741485847438, -0.000138258865473043, -0.000140729815482632, 0.000842360932596042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0253756330395391, -0.0119721821617586, 0.0048854827352177, 0.000580365180561593, -0.00791673576113783, 0.0130879246356212, -0.0141232834224904, 0.936038762115131, 0.0740481003816581, 0.0307471993367365, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0347928165262626, -0.0082169739482971, 0.0231482477455682, 0.00203390598359977, -0.0379257070703996, 0.0640301880202799, -0.0676586318041546, 0.856741813965724, 0.0485495920812359, 0.154090381552706, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0479285614585878, -0.00154017255956896, 0.0464737242451543, 0.000887453102355339, -0.0777527334989993, 0.137125978830824, -0.13870917575275, 0.727264753909885, 0.00839668259532184, 0.345782050586365, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0594860240734364, 0.00781165645832795, 0.0624162811176242, -0.00776250483855482, -0.107943737959409, 0.206417406124502, -0.192569267294161, 0.567254610869006, -0.0380559990116685, 0.561917578607769, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0641480035455144, 0.0192826801079453, 0.0602834699760322, -0.0280933750341205, -0.109534816223145, 0.245525682642177, -0.195407716112475, 0.399407082210988, -0.0815290301306257, 0.754214026108737, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0582886711598588, 0.0319081313941976, 0.0361547153655965, -0.0615409695584472, -0.0706627227972683, 0.235848495260522, -0.126060751751966, 0.24488746807307, -0.113995395660963, 0.881749700835117, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0411919627247249, 0.044314506900815, -0.00406487485038623, -0.105541755071015, 0.00887014447103305, 0.172460038658151, 0.0158241437055152, 0.119467471776846, -0.13042926012063, 0.920291547254396, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0154024831060743, 0.054858077760007, -0.0447613065796832, -0.153514204678247, 0.116552821872535, 0.0659382984101534, 0.207927684674963, 0.0312271669109652, -0.129697898963642, 0.866871843699022, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0139076512507762, 0.0618953863329681, -0.0641369364600142, -0.196183502965098, 0.230068439614263, -0.0604499857628828, 0.410437063618172, -0.0197613771255674, -0.114412378221276, 0.738635639718659, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0403763020131754, 0.0641327055108488, -0.0402992734044387, -0.223931801992572, 0.323363688845594, -0.177384311113652, 0.576873747451184, -0.0398945519173924, -0.0898470217481989, 0.56661051635545, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0582696784325524, 0.0609669707536073, 0.0417918978877754, -0.229518941124067, 0.374125298884483, -0.25797457903924, 0.66743134937096, -0.0392457839301318, -0.0622908350001569, 0.386444943764217, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0641405425308384, 0.0527201953116364, 0.184591941443299, -0.210371185049684, 0.370442763428826, -0.285564194327626, 0.660861786672034, -0.0284068182161315, -0.0373331485334892, 0.228918116740297, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0578294724547831, 0.0406877517852769, 0.375276036802065, -0.16972717948455, 0.314639166744566, -0.258519815381005, 0.561309390868328, -0.0158577520794097, -0.0185732842692587, 0.112936212559205, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0425057867254852, 0.0269644782748273, 0.587095255794177, -0.116238651496211, 0.223063085519567, -0.190572453556561, 0.397939665152511, -0.00651403205758729, -0.00708810029371626, 0.0428449659375073, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0237298338759949, 0.0140699819918767, 0.784659028034516, -0.0620608266280447, 0.121816625740027, -0.106603038481942, 0.217318195630998, -0.00167773713080306, -0.00174245436843834, 0.0104903913358153, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.00781105029073215, 0.00445032888425974, 0.931872025471897, -0.0199088676860135, 0.039602084034451, -0.0351322671845027, 0.0706492516379561, -0.000161642183922853, -0.000163412252994072, 0.000981448988137679, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0631826280962292, -0.0512609423748647, 0.0048854827352177, 0.00355072803833967, -0.00997297082206097, 0.00777075513842493, -0.0120670483615673, 0.700107404916265, 0.38707521285032, 0.0330940059761546, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0640055791013395, -0.0481013625983386, 0.0231482477455682, 0.016692791399939, -0.0477762529192676, 0.037610220674559, -0.0578080859552867, 0.63394191411412, 0.340446643157958, 0.165851463482088, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0637204493354234, -0.0418982814563154, 0.0464737242451543, 0.0328273470871686, -0.0979476599847467, 0.0787939701294613, -0.118514249267002, 0.526434304801406, 0.265377128477384, 0.372174165302914, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0599840245110462, -0.0320818858353676, 0.0624162811176242, 0.0417510774151061, -0.135980255192789, 0.114014977643244, -0.164532750060782, 0.394704450738502, 0.174885703850141, 0.604806424835366, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0507026928976569, -0.0184249483847847, 0.0602834699760322, 0.0337738557558068, -0.137984588491084, 0.126092412596778, -0.166957943844536, 0.258396238580886, 0.0837441313443486, 0.811780065364209, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0349419487923801, -0.00142904185044254, 0.0361547153655965, 0.00333428395323956, -0.0890161417441653, 0.103672931578713, -0.107707332805069, 0.135605476593116, 0.00527704669615243, 0.949050011005239, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0135178204299968, 0.017477032602523, -0.00406487485038623, -0.0485605250908053, 0.0111740109391203, 0.045236758673838, 0.0135202772374279, 0.0394758119832657, -0.0512742683234856, 0.990533597258499, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0109421427265798, 0.0360293159004821, -0.0447613065796832, -0.113891757009277, 0.146825399613517, -0.0398488940876899, 0.177655106933982, -0.0237733027360513, -0.0822132932897548, 0.933036588527895, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0345202516546247, 0.0515237141006635, -0.0641369364600142, -0.179403364126237, 0.289824733902751, -0.133607130013474, 0.350680769329683, -0.0550210706836798, -0.0893936128347069, 0.795012645130389, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0529837421018956, 0.0614279034852709, -0.0402992734044388, -0.230134093994913, 0.407351809012211, -0.21442905788009, 0.492885627284568, -0.0607519779474358, -0.0788922337812979, 0.609857555124229, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0629393189875452, 0.0640472006450257, 0.0417918978877754, -0.253694193293449, 0.471297868483308, -0.263295072152647, 0.570258779772135, -0.0504588357539106, -0.0588276536227893, 0.415940689047006, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0628274886441259, 0.0590509091404307, 0.184591941443299, -0.24401888637924, 0.466658858194401, -0.269388866672358, 0.564645691906459, -0.0337580134518432, -0.0369996132398594, 0.246390490414584, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0534527385104129, 0.0476924644219556, 0.375276036802065, -0.20345424018523, 0.396361243332717, -0.233412708991026, 0.479587314280177, -0.0180364343169432, -0.0190225807240338, 0.121556166869906, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0378735700108462, 0.0326348895307865, 0.587095255794177, -0.142500599412102, 0.280999860357324, -0.167580684801595, 0.340002890314755, -0.00721592691201495, -0.00742439998060883, 0.046115145098432, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.020659762659163, 0.0174011022893289, 0.784659028034516, -0.0772180472940927, 0.153456385409612, -0.0922465060271147, 0.185678435961413, -0.00182886924687393, -0.00185237133298771, 0.0112910795470363, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.00671003757058802, 0.00557615166604149, 0.931872025471897, -0.0249898491892422, 0.0498880397786101, -0.0301261956259616, 0.060363295893797, -0.000174610848694856, -0.000175253649859666, 0.00105635893282519, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0512609423748646, -0.0631826280962292, 0.0048854827352177, 0.00777075513842483, -0.0120670483615672, 0.00355072803833975, -0.00997297082206108, 0.38707521285032, 0.700107404916265, 0.0330940059761546, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0481013625983385, -0.0640055791013395, 0.0231482477455682, 0.0376102206745589, -0.0578080859552866, 0.016692791399939, -0.0477762529192677, 0.340446643157957, 0.633941914114121, 0.165851463482088, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0418982814563153, -0.0637204493354234, 0.0464737242451543, 0.0787939701294614, -0.118514249267002, 0.0328273470871686, -0.0979476599847467, 0.265377128477383, 0.526434304801406, 0.372174165302914, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0320818858353676, -0.0599840245110462, 0.0624162811176242, 0.114014977643244, -0.164532750060782, 0.0417510774151061, -0.135980255192789, 0.174885703850141, 0.394704450738503, 0.604806424835366, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0184249483847846, -0.050702692897657, 0.0602834699760322, 0.126092412596778, -0.166957943844536, 0.0337738557558067, -0.137984588491084, 0.0837441313443483, 0.258396238580887, 0.811780065364209, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.00142904185044253, -0.0349419487923801, 0.0361547153655965, 0.103672931578713, -0.107707332805069, 0.00333428395323946, -0.0890161417441655, 0.00527704669615232, 0.135605476593116, 0.949050011005239, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.017477032602523, -0.0135178204299967, -0.00406487485038623, 0.0452367586738381, 0.0135202772374281, -0.0485605250908054, 0.0111740109391201, -0.0512742683234857, 0.0394758119832657, 0.990533597258499, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.036029315900482, 0.0109421427265798, -0.0447613065796832, -0.0398488940876897, 0.177655106933982, -0.113891757009277, 0.146825399613516, -0.0822132932897549, -0.0237733027360512, 0.933036588527895, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0515237141006634, 0.0345202516546247, -0.0641369364600142, -0.133607130013473, 0.350680769329684, -0.179403364126238, 0.289824733902751, -0.089393612834707, -0.0550210706836797, 0.795012645130389, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0614279034852708, 0.0529837421018957, -0.0402992734044388, -0.21442905788009, 0.492885627284568, -0.230134093994913, 0.407351809012211, -0.0788922337812979, -0.0607519779474358, 0.609857555124229, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0640472006450256, 0.0629393189875453, 0.0417918978877754, -0.263295072152647, 0.570258779772135, -0.253694193293449, 0.471297868483308, -0.0588276536227893, -0.0504588357539106, 0.415940689047006, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0590509091404306, 0.062827488644126, 0.184591941443299, -0.269388866672358, 0.564645691906459, -0.24401888637924, 0.466658858194401, -0.0369996132398594, -0.0337580134518432, 0.246390490414584, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0476924644219556, 0.053452738510413, 0.375276036802065, -0.233412708991026, 0.479587314280177, -0.203454240185231, 0.396361243332718, -0.0190225807240338, -0.0180364343169432, 0.121556166869906, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0326348895307864, 0.0378735700108463, 0.587095255794177, -0.167580684801594, 0.340002890314755, -0.142500599412102, 0.280999860357324, -0.00742439998060889, -0.00721592691201489, 0.046115145098432, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0174011022893288, 0.020659762659163, 0.784659028034516, -0.0922465060271145, 0.185678435961413, -0.0772180472940928, 0.153456385409612, -0.00185237133298778, -0.00182886924687387, 0.0112910795470363, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.00557615166604135, 0.00671003757058815, 0.931872025471897, -0.0301261956259615, 0.0603632958937977, -0.0249898491892422, 0.0498880397786093, -0.000175253649859694, -0.000174610848694828, 0.00105635893282519, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0119721821617585, -0.0253756330395391, 0.0048854827352177, 0.0130879246356212, -0.0141232834224904, 0.000580365180561718, -0.00791673576113786, 0.0740481003816578, 0.936038762115131, 0.0307471993367362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.008216973948297, -0.0347928165262626, 0.0231482477455682, 0.0640301880202799, -0.0676586318041545, 0.00203390598359987, -0.0379257070703997, 0.0485495920812356, 0.856741813965724, 0.154090381552706, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.00154017255956888, -0.0479285614585878, 0.0464737242451543, 0.137125978830824, -0.13870917575275, 0.000887453102355412, -0.0777527334989995, 0.00839668259532162, 0.727264753909886, 0.345782050586364, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.00781165645832798, -0.0594860240734364, 0.0624162811176242, 0.206417406124502, -0.192569267294161, -0.00776250483855478, -0.10794373795941, -0.0380559990116685, 0.567254610869006, 0.561917578607769, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0192826801079453, -0.0641480035455144, 0.0602834699760322, 0.245525682642177, -0.195407716112475, -0.0280933750341205, -0.109534816223145, -0.0815290301306258, 0.399407082210988, 0.754214026108737, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0319081313941976, -0.0582886711598588, 0.0361547153655965, 0.235848495260522, -0.126060751751966, -0.0615409695584473, -0.0706627227972685, -0.113995395660963, 0.244887468073071, 0.881749700835117, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.044314506900815, -0.0411919627247249, -0.00406487485038623, 0.172460038658151, 0.0158241437055154, -0.105541755071016, 0.00887014447103285, -0.13042926012063, 0.119467471776846, 0.920291547254396, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0548580777600069, -0.0154024831060743, -0.0447613065796832, 0.0659382984101535, 0.207927684674964, -0.153514204678247, 0.116552821872535, -0.129697898963642, 0.0312271669109653, 0.866871843699022, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0618953863329681, 0.0139076512507762, -0.0641369364600142, -0.0604499857628826, 0.410437063618172, -0.196183502965098, 0.230068439614262, -0.114412378221276, -0.0197613771255674, 0.738635639718659, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0641327055108487, 0.0403763020131756, -0.0402992734044388, -0.177384311113652, 0.576873747451184, -0.223931801992573, 0.323363688845595, -0.0898470217481989, -0.0398945519173925, 0.566610516355451, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0609669707536072, 0.0582696784325525, 0.0417918978877754, -0.25797457903924, 0.66743134937096, -0.229518941124067, 0.374125298884483, -0.062290835000157, -0.0392457839301318, 0.386444943764217, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0527201953116362, 0.0641405425308385, 0.184591941443299, -0.285564194327625, 0.660861786672034, -0.210371185049685, 0.370442763428826, -0.0373331485334892, -0.0284068182161315, 0.228918116740297, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0406877517852768, 0.0578294724547831, 0.375276036802065, -0.258519815381004, 0.561309390868328, -0.169727179484551, 0.314639166744567, -0.0185732842692587, -0.0158577520794097, 0.112936212559205, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0269644782748272, 0.0425057867254852, 0.587095255794177, -0.190572453556561, 0.397939665152511, -0.116238651496211, 0.223063085519567, -0.00708810029371634, -0.00651403205758724, 0.0428449659375073, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0140699819918766, 0.023729833875995, 0.784659028034516, -0.106603038481941, 0.217318195630998, -0.0620608266280449, 0.121816625740027, -0.00174245436843841, -0.00167773713080299, 0.0104903913358153, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.00445032888425961, 0.00781105029073226, 0.931872025471897, -0.0351322671845027, 0.0706492516379569, -0.0199088676860135, 0.0396020840344502, -0.000163412252994072, -0.000161642183922825, 0.000981448988137623, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0306850593111977, 0.0751136561079529, 0.0048854827352177, 0.0191843657143223, -0.0160673588748085, -0.00115867350556723, -0.00597266030881979, -0.168183144782161, 1.0351234766585, 0.0263897969441642, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.033207331418004, 0.0520781057632081, 0.0231482477455682, 0.0943678859131328, -0.076971868768473, -0.00646655756811131, -0.0286124701060812, -0.175604919782908, 0.952601098174096, 0.132253147211564, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0375017746816786, 0.017285260043331, 0.0464737242451543, 0.204301546055258, -0.157802547706383, -0.0172849018934672, -0.0586593615453659, -0.186053593744036, 0.817459261506077, 0.296778838357753, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0431358081560413, -0.0198137095174607, 0.0624162811176242, 0.313321579704743, -0.21907650178195, -0.0350333767109432, -0.0814365034716205, -0.195394377109972, 0.649596522713621, 0.482284276899916, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0494642977430196, -0.0492808813096306, 0.0602834699760322, 0.384673808707615, -0.222305664183308, -0.0603565140838107, -0.0826368681523124, -0.199269727822842, 0.472099040032246, 0.64732903909299, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0556483669950136, -0.0634792683610633, 0.0361547153655965, 0.391479210129118, -0.143413063225904, -0.0922127177910755, -0.0533104113233304, -0.194322289143983, 0.306664723156478, 0.756790734199149, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0607208655220967, -0.0591517936552391, -0.00406487485038623, 0.324748976300652, 0.018002343236855, -0.127409689292923, 0.00669194493969311, -0.179127388753847, 0.169719072719295, 0.789870543833802, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0637061603474171, -0.0382055473731332, -0.0447613065796832, 0.196102614222206, 0.236549011284485, -0.160827999881276, 0.087931495263014, -0.154580552170783, 0.0700648017977545, 0.744021323089998, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0637830894382394, -0.00699476067937938, -0.0641369364600142, 0.0344044236709789, 0.466933884947338, -0.186360648349624, 0.173571618285097, -0.123644146348317, 0.00848509982635813, 0.633958375669323, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0604616387981314, 0.025660775614921, -0.0402992734044388, -0.122655066081456, 0.656280642997917, -0.198362676022441, 0.243956793298862, -0.0905433770978503, -0.0208116034567692, 0.486312145353124, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0537318052250732, 0.0511153738368301, 0.0417918978877754, -0.239504813004612, 0.759303534018432, -0.19322286965545, 0.282253114237011, -0.0596585877187252, -0.0274885610873072, 0.331679106260972, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0441418501132916, 0.063402413559773, 0.184591941443299, -0.292896082671246, 0.751829668460646, -0.170597696459388, 0.279474881640213, -0.0344421573913361, -0.0219813351888745, 0.196476516493621, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0327744018726289, 0.0608633574600315, 0.375276036802065, -0.27832981821551, 0.638573846682124, -0.133912189742976, 0.23737471093077, -0.0166711762450569, -0.012880395196212, 0.0969312256521357, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0211105973716187, 0.0464320135551457, 0.587095255794177, -0.210820081655732, 0.452716214725589, -0.0899191612075392, 0.168286535946489, -0.00623792799802605, -0.00543655027972951, 0.0367731037480069, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0107993929627627, 0.026515723454644, 0.784659028034516, -0.119811651281551, 0.247232129723371, -0.0473655465126552, 0.091902691647654, -0.00151291744214554, -0.0014225746066311, 0.0090037240200353, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.00337455003771515, 0.00884076338131549, 0.931872025471897, -0.0398311449719919, 0.0803741485847445, -0.0150709018429828, 0.0298771870876626, -0.000140729815482632, -0.00013825886547307, 0.000842360932595987, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0583916354882496, 0.236096823481758, 0.00488548273521769, 0.0256063563168355, -0.0178290117316852, -0.00183691931427632, -0.00421100745194303, -0.295865447837111, 0.974116036162594, 0.0206460521503601, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0592610084486129, 0.195137808569612, 0.0231482477455682, 0.126357236944376, -0.0854111968230498, -0.00967098360096025, -0.0201731420515045, -0.291418389912392, 0.899301188466567, 0.10346822221317, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0606347539388314, 0.131577855702874, 0.0464737242451543, 0.275268177928286, -0.175104290398223, -0.0236575578698548, -0.0413576188535263, -0.282568555855063, 0.776548648700408, 0.232184862461113, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0621994675039565, 0.0599798225963616, 0.0624162811176242, 0.426598571822903, -0.243096426166899, -0.0433410956498316, -0.0574165790866715, -0.268233320255836, 0.623578274397747, 0.377315003720645, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0635331987525646, -0.00396842577006959, 0.0602834699760322, 0.532782891093585, -0.246679639486892, -0.0675742964709458, -0.0582628928487279, -0.247560578125693, 0.461008533785991, 0.506437739094155, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0641470553838739, -0.0475266026206055, 0.0361547153655965, 0.558247413025564, -0.159137118094777, -0.0942652599815079, -0.0375863564544574, -0.220427736997656, 0.308318816880833, 0.592075073493135, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0635451730534492, -0.0640238231283804, -0.00406487485038623, 0.489614138939423, 0.0199761511066354, -0.120359363778311, 0.00471813706991276, -0.187768267201191, 0.180407673108428, 0.61795505568042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0613003779463629, -0.0541946356194969, -0.0447613065796832, 0.339359728580572, 0.262484651657467, -0.142148718517488, 0.0619958548900312, -0.151606883023332, 0.0854860032977217, 0.582084927367845, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0571366571807846, -0.0254127188497645, -0.0641369364600141, 0.141921313246567, 0.518129319044458, -0.155896365601549, 0.122376184187976, -0.114772572281058, 0.0246779161869393, 0.49597720334566, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0510042232210297, 0.0108817565131953, -0.0402992734044388, -0.0565201587088031, 0.728236381253249, -0.158651643809212, 0.17200105504353, -0.0803570681933586, -0.00676147768243355, 0.380466205767241, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0431303375979296, 0.0427492464002985, 0.0417918978877754, -0.21148658554148, 0.842554879206061, -0.149051070653776, 0.199001769049382, -0.0510660559980914, -0.0171134977442657, 0.259489079796166, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.034030563138441, 0.06123311563882, 0.184591941443299, -0.292857123939394, 0.834261566176269, -0.127873500510561, 0.197042983924591, -0.0286470901723652, -0.0154958175120418, 0.153713361812942, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0244710648016001, 0.0627347888603328, 0.375276036802065, -0.292983974262669, 0.708588181340331, -0.0981609322715624, 0.167360376272563, -0.0135602464357946, -0.00955941933474682, 0.0758341242278817, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0153819967958332, 0.0496196615055619, 0.587095255794177, -0.227916987934978, 0.502352799010527, -0.0648185812489725, 0.118649951661551, -0.00498965373603791, -0.00414387191634838, 0.0287694300686859, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.00773281783764913, 0.0289433881247781, 0.784659028034516, -0.131474583664117, 0.274339085572958, -0.0337429517244124, 0.0647957357980674, -0.00119596514949957, -0.00110061644429749, 0.00704406161435833, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.00239014463083285, 0.00976444684375997, 0.931872025471897, -0.0440604512346903, 0.0891865084490254, -0.0106582555480991, 0.0210648272233817, -0.000110437300566854, -0.000107829435951001, 0.000659020900410867, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0631607800095188, 0.438528651797882, 0.0048854827352177, 0.0318141613831165, -0.0193445734175847, -0.00173749492224221, -0.00269544576604355, -0.303640431332499, 0.774690046820589, 0.0143388226920448, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.062870763922446, 0.377232141524964, 0.0231482477455682, 0.157300378804215, -0.0926716069568204, -0.00900528255031356, -0.0129127319177339, -0.294425579004026, 0.716604289129016, 0.0718593793026846, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.062264834528729, 0.280855356413508, 0.0464737242451543, 0.344001383630898, -0.18998909487073, -0.0214598566066009, -0.0264728143810188, -0.278107450060051, 0.621179961604864, 0.161253955495247, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0612103671142949, 0.169524405957061, 0.0624162811176242, 0.536532232528894, -0.263760927095064, -0.0380075716563161, -0.0367520781585068, -0.255220084945871, 0.502009556116745, 0.262047819021138, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0595416659148375, 0.065230015582336, 0.0602834699760322, 0.676953913273335, -0.267648732778443, -0.0570320105783077, -0.0372937995571776, -0.226699480056634, 0.374940527202253, 0.351724431021767, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0570867561258868, -0.0136161722031535, 0.0361547153655965, 0.721303686328465, -0.172664627225319, -0.0764465980728868, -0.024058847323915, -0.193956626859299, 0.254997575583011, 0.411200138281613, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0536997788701999, -0.0564270407162567, -0.00406487485038623, 0.651889264144352, 0.0216742311631509, -0.0938533940447373, 0.00302005701339714, -0.158863521136833, 0.153751538815196, 0.429173960741916, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.049295536522474, -0.0623892762746948, -0.0447613065796832, 0.481858804834925, 0.284797255809372, -0.106824781713543, 0.0396832507381267, -0.123617475592984, 0.0776960779464603, 0.404261914309547, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0438814341666029, -0.039680804641315, -0.0641369364600141, 0.250824591203472, 0.562173091974928, -0.11328195849148, 0.0783324112575067, -0.0904887855804348, 0.0279174382920481, 0.344459518278686, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0375812204374189, -0.00230936794222657, -0.0402992734044387, 0.0129610870048883, 0.790140382120786, -0.111903033885987, 0.110097054175993, -0.0614969043416747, 0.000992485704915145, 0.264236350130325, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0306450597623544, 0.0344061311519647, 0.0417918978877754, -0.178799017678001, 0.914176565949533, -0.102466477608131, 0.12738008230591, -0.0380899945697615, -0.00926116608868667, 0.180216918887043, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0234418370512755, 0.0583364816341324, 0.184591941443299, -0.287739124061877, 0.905178276801811, -0.0860331067589916, 0.126126273299049, -0.0209120906850654, -0.00974545690748859, 0.106754968183855, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0164321595973657, 0.0637107923556892, 0.375276036802065, -0.303082624416618, 0.76882197976294, -0.0648954694605369, 0.107126577849954, -0.00972691616508283, -0.00632984789658067, 0.0526673115708047, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0101238881381725, 0.0520875397776037, 0.587095255794177, -0.241673943896439, 0.545055483065175, -0.042272758752318, 0.0759472676069034, -0.00353072070867238, -0.00281257455809498, 0.0199805635334925, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.00501554129296009, 0.0309590745070318, 0.784659028034516, -0.141275280762533, 0.297659380230692, -0.0217903413887001, 0.0414754411403331, -0.000837975603052099, -0.000757015828309546, 0.0048921483770622, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.00153594911980147, 0.0105519633412778, 0.931872025471897, -0.0476771526897703, 0.0967678403331859, -0.00684022765993425, 0.0134834953392212, -7.69010193361758e-05, -7.46867036681698e-05, 0.000457694467326075, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.048083596912069, 0.649634947999193, 0.0048854827352177, 0.0372456280359798, -0.0205592737451015, -0.00120180524410513, -0.00148074543852686, -0.223212628857185, 0.498233131241414, 0.00837166636104447, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0474246637601492, 0.568369539155746, 0.0231482477455682, 0.184386118656678, -0.0984907185439292, -0.00618646473043206, -0.00709362033062499, -0.214965788105641, 0.461453200762146, 0.0419548216303402, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0462271397153462, 0.439663999248489, 0.0464737242451543, 0.404218223692873, -0.201919046014253, -0.0145702415503212, -0.014542863237496, -0.20067865012411, 0.400980213647325, 0.0941475003769919, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0444747374943447, 0.288962425232651, 0.0624162811176242, 0.632976070535766, -0.2803232196622, -0.025399199737727, -0.020189785591371, -0.181264756204037, 0.325351837719271, 0.152995609095678, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0421540427313821, 0.144308721917261, 0.0602834699760322, 0.803690382253002, -0.284455151630246, -0.0373970018979951, -0.0204873807053738, -0.157985504067473, 0.244535468061623, 0.205352953361787, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0392636376436861, 0.0296093723672821, 0.0361547153655965, 0.865067848766635, -0.1835067261806, -0.0490882380311128, -0.0132167483686345, -0.132364802099074, 0.168003324734552, 0.240077615801669, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0358242715945951, -0.0406789045874784, -0.00406487485038623, 0.795598950477672, 0.0230352172714628, -0.0589606824027712, 0.00165907090508529, -0.106068228328477, 0.103083617153666, 0.250571562766631, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0318884078850175, -0.0640925142677474, -0.0447613065796832, 0.608926028143438, 0.302680478790812, -0.0656568511908496, 0.021800027756687, -0.0807488822188177, 0.0539378512028032, 0.23602676047834, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0275474932517668, -0.0493861710761867, -0.0641369364600142, 0.349063445223783, 0.597473526065775, -0.0681726562917988, 0.0430319771666591, -0.0578752445590021, 0.0213432046203233, 0.201111362058694, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0229353801338151, -0.0128426746631648, -0.0402992734044388, 0.0770525108667771, 0.83975552535645, -0.0660314821658301, 0.0604819109403294, -0.038566573148896, 0.00324130153667843, 0.15427337454828, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0182266667161877, 0.0271191561793166, 0.0417918978877754, -0.146869165274632, 0.971580291019922, -0.0593983645867088, 0.0699763572355217, -0.0234667098341596, -0.00417908280547384, 0.105218953462251, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0136293170812676, 0.0553907450067316, 0.184591941443299, -0.280242106724246, 0.962016973916355, -0.0491036326094611, 0.0692875761845051, -0.0126851054315275, -0.00521418556361779, 0.0623284766966944, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.00937172742523818, 0.0640891402741986, 0.375276036802065, -0.309501620389615, 0.817098480384616, -0.036558768775921, 0.0588500772282786, -0.00582372645189897, -0.00355095335614644, 0.0307496068591858, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.00568529918240023, 0.0538863419584482, 0.587095255794177, -0.252064520256512, 0.57928105421125, -0.023567193864492, 0.0417216964608278, -0.00209198834203498, -0.00161152014980458, 0.0116655750057397, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.00278441674293183, 0.0325264372251475, 0.784659028034516, -0.148974815018384, 0.316350252283005, -0.0120549207293878, 0.0227845690880206, -0.000492697446190529, -0.000438532153258606, 0.00285626197360067, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.000846433666179619, 0.0111783949796901, 0.931872025471897, -0.0505613299620285, 0.102844165967689, -0.00376557907095615, 0.00740716970471789, -4.49926862992889e-05, -4.35112214955402e-05, 0.000267223150606066, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0242468794749492, 0.830250358213063, 0.0048854827352177, 0.0413849759935335, -0.0214292354062691, -0.00056878569789387, -0.000610783777359292, -0.11011138915415, 0.228353198761629, 0.00359929885727941, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0237988605617582, 0.732508409588015, 0.0231482477455682, 0.205034457720279, -0.102658334101579, -0.00291796110825829, -0.00292600477297532, -0.105683019136688, 0.211657364559314, 0.0180379789445652, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0230019385717766, 0.577073477629819, 0.0464737242451543, 0.450149504105731, -0.210463211088848, -0.00683162495789354, -0.00599869816290131, -0.0980747799467938, 0.184192066232249, 0.0404776033717068, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0218721155295206, 0.393703593560885, 0.0624162811176242, 0.706605798251292, -0.292185042062384, -0.0118119694931816, -0.00832796319118665, -0.0878647264117396, 0.149813261563563, 0.0657786511356065, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0204339243117708, 0.215367671795773, 0.0602834699760322, 0.900575060126324, -0.296491815926274, -0.0172177979632385, -0.00845071640934619, -0.0758153191919513, 0.113026451727201, 0.0882890715537082, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0187212613150365, 0.07046791037423, 0.0361547153655965, 0.975181988261571, -0.191271777530312, -0.0223432908614506, -0.00545169701892276, -0.0627973209740237, 0.0781196819312029, 0.103218529137071, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0167782038661164, -0.0233342497877707, -0.00406487485038623, 0.905986651084015, 0.0240099480003443, -0.0265070976612466, 0.000684340176203703, -0.0497031482429865, 0.0484199499969471, 0.107730277418763, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.014659413964722, -0.0621474659378612, -0.0447613065796832, 0.706961251835106, 0.315488344253208, -0.0291422262445893, 0.00899216229429011, -0.0373575254115442, 0.0258304399859391, 0.101476911840412, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0124298528656769, -0.0550940524835676, -0.0641369364600142, 0.425411947151886, 0.622755501863372, -0.0298752457414811, 0.0177500013690623, -0.026435833979651, 0.010729315834443, 0.0864654495802729, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0101635950703667, -0.0202084788242813, -0.0402992734044388, 0.127549678372541, 0.875289616729098, -0.0285832863904738, 0.0249478195676806, -0.0174008744177471, 0.00221319203009438, 0.0663280112671599, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.00794162670782031, 0.0216443848527333, 0.0417918978877754, -0.120867090678355, 1.0126925216567, -0.0254191292946674, 0.0288641265987393, -0.0104673631659765, -0.00141861813870634, 0.0452376435739328, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.00584863868315365, 0.052967720700787, 0.184591941443299, -0.273016245216284, 1.00272453465396, -0.0207984081999754, 0.0285800154469047, -0.00560027642092482, -0.00209531187016189, 0.0267973907792458, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.00396896507947011, 0.0641477554281601, 0.375276036802065, -0.313182950633712, 0.851673843315529, -0.0153482611614519, 0.0242747142973649, -0.00254839939436472, -0.00148213322187405, 0.0132204294888134, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.00238195322159158, 0.0550784590653913, 0.587095255794177, -0.259158718474994, 0.603793219108349, -0.00982289652964027, 0.017209531563729, -0.000908845082282006, -0.000683434555692024, 0.00501547588936979, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.00115716576876983, 0.0336228297432637, 0.784659028034516, -0.15440410122011, 0.329736551546249, -0.0049973885802983, 0.00939826982477576, -0.000212891331833234, -0.000187479811570052, 0.00122801602623701, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.000349926702994385, 0.0116244492426243, 0.931872025471897, -0.0526190021762828, 0.107195996804513, -0.00155557313660282, 0.00305533886789366, -1.93731166426292e-05, -1.86780909011419e-05, 0.000114889430507081, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.00514858621726438, 0.944457527168746, 0.0048854827352177, 0.0438280227926878, -0.0219232173855718, -0.000116703703321758, -0.000116801798056482, -0.0231135059636072, 0.0462464398730883, 0.000704170063553028, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.00504174179774679, 0.836506957584515, 0.0231482477455682, 0.217223276550646, -0.105024791238757, -0.000597767407636174, -0.000559547635797797, -0.022149073234944, 0.0428819894250824, 0.0035289664135762, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.00485307032491104, 0.664491568869481, 0.0464737242451543, 0.477272055281738, -0.215314762327754, -0.00139564746783576, -0.00114714692399556, -0.0204977726745187, 0.0373458359671771, 0.00791907470564172, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0045885258712769, 0.460816051273388, 0.0624162811176242, 0.750107304099134, -0.298920426814302, -0.00240381863662717, -0.00159257843926893, -0.0182932789497161, 0.0304129460472809, 0.0128689944312097, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0042565718232259, 0.261476137404333, 0.0602834699760322, 0.95786058573141, -0.303326479473602, -0.00348720532919519, -0.00161605286201837, -0.0157092153964242, 0.0229892348116581, 0.0172729533145795, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0038679310889711, 0.0976459210877974, 0.0361547153655965, 1.04036373403136, -0.195680932101526, -0.0045002733092248, -0.00104254244770832, -0.012939886943628, 0.0159375674133052, 0.0201937658150553, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.00343529570720491, -0.0110234938166817, -0.00406487485038623, 0.971439856102483, 0.0245634199936892, -0.00530647356507712, 0.000130868182858707, -0.0101794740512226, 0.00992842799300548, 0.021076448304126, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.00297296714460744, -0.0597329351899337, -0.0447613065796832, 0.765239516159272, 0.322760911556079, -0.00579661297008281, 0.00171959499141924, -0.00760198999705365, 0.00534682064363551, 0.019853034241739, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.00249642751844941, -0.0577943079543173, -0.0641369364600142, 0.470989675788125, 0.637111123498952, -0.00590370307003865, 0.00339437973348285, -0.00534445777635053, 0.00227162044911972, 0.0169161782725922, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.00202184807745991, -0.0242830823857433, -0.0402992734044388, 0.157930184315888, 0.895466598741649, -0.00561225280778342, 0.0047708375551298, -0.00349537481238925, 0.000524042979105414, 0.0129764717411218, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.00156554666606728, 0.0184598676555865, 0.0417918978877754, -0.10493823280857, 1.03603688494307, -0.00496067683973513, 0.00551976331236895, -0.00208985027542176, -0.000235533790361155, 0.00885033324921533, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.00114341139217848, 0.0514829315108776, 0.184591941443299, -0.268223528783508, 1.0258391181159, -0.004036399471536, 0.00546543198496286, -0.00111191380219874, -0.000393658008003415, 0.00524266561803086, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.000770312827581107, 0.064104412087567, 0.375276036802065, -0.314933010920577, 0.871306439759839, -0.00296422809372573, 0.00464211785305488, -0.000503520951589776, -0.000285016072166886, 0.00258645670795263, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.00045953121339317, 0.0557201164551588, 0.587095255794177, -0.26305785808652, 0.61771172640971, -0.00188951323974126, 0.00329102426236871, -0.000178853665873994, -0.000132661353669128, 0.000981232210996913, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.000222228332427396, 0.0342357250065591, 0.784659028034516, -0.157455353388175, 0.337337565361872, -0.000958370545132536, 0.00179725600915304, -4.17682164576272e-05, -3.65607538987678e-05, 0.000240250159136146, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {6.70028652080684e-05, 0.011876766245312, 0.931872025471896, -0.0537844333556042, 0.109667055135383, -0.000297729598223662, 0.000584280537024306, -3.79340039008413e-06, -3.65097205481946e-06, 2.24770714490341e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_C0_D01[256][32] = \
    {{-5.3165577021878, 0.0, 0.955361438579109, -0.0233533530453869, -0.0230172440024172, 8.65928763836967, -4.29809137476096, -0.117181392462765, 0.0233533530454044, 0.140198636465155, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-4.94974865622051, 0.0, 0.773935401520186, -0.0228648457480018, -0.0195814194863111, 7.74274641664204, -3.5669331619417, -0.111759967915144, 0.0228648457480173, 0.131341387401429, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-4.33205225035762, 0.0, 0.483438535323884, -0.0220026275028478, -0.0138347438923552, 6.21421606685851, -2.36560235182477, -0.102510402214603, 0.0220026275028634, 0.116345146106933, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-3.53018929772946, 0.0, 0.140014545188739, -0.0207945599175282, -0.00646251588231239, 4.26336993400629, -0.873195181465559, -0.0902338691584686, 0.0207945599175389, 0.0966963850407595, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-2.62928673065268, 0.0, -0.186193885683042, -0.0192801157678205, 0.00166479687245807, 2.1307287192381, 0.684751897097625, -0.0759644625111546, 0.019280115767829, 0.0742996656386771, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.72204722474024, 0.0, -0.4213896206606, -0.0175091009578185, 0.00960600759076966, 0.0756507204032791, 2.06778612499757, -0.0608489849504375, 0.0175091009578236, 0.0512429773596516, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.897203686455051, 0.0, -0.499106683089033, -0.0155401814840594, 0.0164711080655539, -1.65774991958787, 3.05406028913196, -0.0460184640095673, 0.0155401814840621, 0.0295473559439993, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.228683857944157, 0.0, -0.370369785754966, -0.013439104599951, 0.021535276788718, -2.87243952913768, 3.47149317283681, -0.0324663685401966, 0.0134391045999509, 0.0109310917514658, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.233098651787213, 0.0, -0.0116194405560797, -0.0112766348731334, 0.0243298858217913, -3.44381469130409, 3.22233548007297, -0.020948801877748, 0.0112766348731318, -0.00338108394405512, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.466695414241413, 0.0, 0.570711664806186, -0.00912625016338985, 0.0246984618063527, -3.33518798971109, 2.2977809106635, -0.0119189623225788, 0.00912625016338731, -0.0127794994837857, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.481126647425159, 0.0, 1.33963640509363, -0.00706166135087671, 0.0228102957747797, -2.6013647827885, 0.780601730269722, -0.00550347254428514, 0.00706166135087433, -0.0173068232305066, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.313281613098641, 0.0, 2.23118963045037, -0.00515423729160869, 0.0191301210985675, -1.37987521678315, -1.16459602676585, -0.00152249515679836, 0.00515423729160647, -0.0176076259417817, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0216142088802485, 0.0, 3.16170833906882, -0.00347043168772765, 0.0143482103584023, 0.128907349638889, -3.31222989758795, 0.000450350340108707, 0.0034704316877246, -0.0147985606985241, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.32296936661597, 0.0, 4.0378778597467, -0.00206931979631886, 0.0092805803457896, 1.69003027762087, -5.40493877075159, 0.000997575907234483, 0.00206931979631608, -0.0102781562530381, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.647756691572695, 0.0, 4.76822583681658, -0.00100036129293501, 0.00475303392879844, 3.06674163992036, -7.18721078516424, 0.000750252677467866, 0.00100036129293302, -0.00550328660628097, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.888916839894247, 0.0, 5.27451364344711, -0.000301543208979904, 0.00148513299493569, 4.053252074149, -8.43884887770185, 0.000278838872545761, 0.000301543208978572, -0.00176397186749666, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-4.9280386005135, 0.0, 0.955361438579109, -0.113818609281567, -0.120362524123172, 8.17342325657461, -4.20074609464021, -0.596165750373248, 0.113818609281586, 0.716528274496392, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-4.58174290458663, 0.0, 0.773935401520185, -0.111613195678997, -0.10239579834316, 7.2919262861513, -3.48411878308485, -0.568514069480021, 0.111613195679012, 0.670909867823155, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-3.99892123083009, 0.0, 0.483438535323884, -0.107701767568058, -0.0723450946301827, 5.82257469659316, -2.30709200108695, -0.521340561807336, 0.107701767568073, 0.593685656437494, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-3.24307284703177, 0.0, 0.140014545188739, -0.102181047949067, -0.0337939991294602, 3.94892200006145, -0.845863698218411, -0.458736807887707, 0.102181047949079, 0.492530807017145, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-2.39518161842776, 0.0, -0.186193885683042, -0.0951940326596278, 0.00870561018086163, 1.90366442032159, 0.677711083789221, -0.38598349162788, 0.0951940326596366, 0.377277881446998, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.54338145073494, 0.0, -0.4213896206606, -0.0869304836710944, 0.0502320486436968, -0.0623890125490999, 2.02716008394465, -0.308936141669021, 0.0869304836710997, 0.258704093025308, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.771940260190857, 0.0, -0.499106683089033, -0.0776269029176564, 0.0861312562733318, -1.71335319764428, 2.98440014092418, -0.233368611707358, 0.077626902917659, 0.147237355434012, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.150924807256517, 0.0, -0.370369785754966, -0.0675645292859114, 0.112612972765627, -2.85912088384841, 3.38041547685991, -0.164350843913797, 0.0675645292859111, 0.0517378711481575, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.272100912372041, 0.0, -0.0116194405560799, -0.057064563372314, 0.127226633598485, -3.37992020411223, 3.11943873229627, -0.105738990961757, 0.0570645633723128, -0.0214876426367401, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.477263285077028, 0.0, 0.570711664806186, -0.0464801267913731, 0.129154003175326, -3.24130031917773, 2.19332536929453, -0.0598407097861771, 0.0464801267913709, -0.0693132933891607, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.473794471259687, 0.0, 1.33963640509362, -0.0361848370115602, 0.119280343692018, -2.49756255870579, 0.684131682352483, -0.027294472039497, 0.0361848370115576, -0.0919858716525331, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.297527730364869, 0.0, 2.23118963045037, -0.0265583057143288, 0.100035854073839, -1.28321560107411, -1.24550175974112, -0.00717268084574707, 0.0265583057143267, -0.0928631732281053, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.00485391068824292, 0.0, 3.16170833906882, -0.0179692959522295, 0.0750301302452954, 0.206349567717789, -3.37291181747484, 0.00271178426761176, 0.0179692959522273, -0.0777419145129208, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.33600329092111, 0.0, 4.0378778597467, -0.010757645841454, 0.0485303138651401, 1.74231393544536, -5.44418850427094, 0.00534317416723862, 0.0107576458414519, -0.0538734880323926, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.655175219483712, 0.0, 4.76822583681658, -0.00521634781747826, 0.0248547202633489, 3.09426185416593, -7.20731247149879, 0.003952794063942, 0.00521634781747604, -0.0288075143273043, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.891372751914249, 0.0, 5.27451364344711, -0.00157549843279803, 0.00776610596428462, 4.06198895913835, -8.4451298506712, 0.00146079566872948, 0.0015754984327967, -0.00922690163303042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-4.27645762035824, 0.0, 0.955361438579109, -0.240490930095227, -0.291799267059024, 7.3504055334835, -4.02930935170436, -1.37441905134217, 0.240490930095246, 1.66621831840116, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-3.96491545372971, 0.0, 0.773935401520185, -0.236634784666859, -0.248241876980589, 6.52925275665696, -3.33827270444742, -1.31036310932481, 0.236634784666874, 1.55860498630537, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-3.44116329026026, 0.0, 0.483438535323884, -0.229702417585163, -0.175388857471944, 5.16177299318157, -2.20404823824518, -1.20109915239427, 0.229702417585178, 1.37648800986619, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-2.76321946370277, 0.0, 0.140014545188739, -0.219719230376179, -0.0819280274221981, 3.42093458843972, -0.797729669925675, -1.05612837364381, 0.219719230376191, 1.13805640106599, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-2.00502080213158, 0.0, -0.186193885683042, -0.20676113331396, 0.0211053289932664, 1.52590332283781, 0.665311364976816, -0.887711408578393, 0.206761133313969, 0.866606079585106, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.24693304436978, 0.0, -0.4213896206606, -0.190986381597388, 0.12177939174911, -0.287290075808842, 1.95561274083923, -0.70944044596047, 0.190986381597393, 0.587661054211342, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.565637101791928, 0.0, -0.499106683089034, -0.172668287842393, 0.208811153093764, -1.79697645922278, 2.86172024410375, -0.534713155031025, 0.172668287842396, 0.325902001937245, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0246461502196411, 0.0, -0.370369785754966, -0.152221529263852, 0.273011746419719, -2.8250007672312, 3.22001670320581, -0.375286500928615, 0.152221529263852, 0.102274754508881, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.333302235191036, 0.0, -0.0116194405560801, -0.130216263286511, 0.308440178576178, -3.25990798195353, 2.93822518731858, -0.24009201369495, 0.13021626328651, -0.068348164881241, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.490985526117988, 0.0, 0.570711664806186, -0.107375744739853, 0.31311277109591, -3.07106379229811, 2.00936660137394, -0.134458568775617, 0.107375744739851, -0.178654202320305, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.457962599165091, 0.0, 1.33963640509362, -0.0845552228169264, 0.289175697480939, -2.31183533282227, 0.514236328563563, -0.0598329857502676, 0.0845552228169241, -0.229342711730684, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.268232165241986, 0.0, 2.23118963045037, -0.0627023603915684, 0.242520577821235, -1.11143531220383, -1.38798648348852, -0.0140211704001038, 0.0627023603915662, -0.228499407421144, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0253645900460439, 0.0, 3.16170833906882, -0.042801938856327, 0.181898287464614, 0.343436225671393, -3.47977997469416, 0.00809764209780101, 0.0428019388563249, -0.189995929562428, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.359206577500588, 0.0, 4.0378778597467, -0.0258098539779894, 0.117653813918872, 1.83464072207857, -5.51331200432467, 0.013494252610181, 0.0258098539779876, -0.131148066529067, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.668298242297547, 0.0, 4.76822583681658, -0.0125831038403592, 0.0602562068936017, 3.14278636361002, -7.24271395812904, 0.00970906085489476, 0.0125831038403578, -0.0699652677485112, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.895703182760618, 0.0, 5.27451364344711, -0.00381381227616107, 0.0188276545776107, 4.07738093859805, -8.45619139928453, 0.00355291267173574, 0.00381381227615951, -0.0223805672493622, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-3.43634820617754, 0.0, 0.955361438579108, -0.347686758678537, -0.531171042952101, 6.27092434340972, -3.78993757581128, -2.32172429410618, 0.347686758678553, 2.85289533705825, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-3.17040134684959, 0.0, 0.773935401520185, -0.344455709360986, -0.451882206659194, 5.53109832009823, -3.13463237476882, -2.21269814089905, 0.344455709361003, 2.66458034755822, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-2.7241129880141, 0.0, 0.483438535323885, -0.33831840924138, -0.319265648897961, 4.30084589950939, -2.06017144681917, -2.02676544629666, 0.338318409241395, 2.34603109519459, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-2.14825961633648, 0.0, 0.140014545188739, -0.328789665777899, -0.149136069502368, 2.73876669899325, -0.730521627845504, -1.78015865641183, 0.32878966577791, 1.92929472591418, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.50747074284048, 0.0, -0.186193885683042, -0.315319478671282, 0.0384186695401692, 1.04566660409362, 0.647998024429914, -1.49381981322681, 0.315319478671291, 1.45540114368662, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.871858898790324, 0.0, -0.4213896206606, -0.297428869663575, 0.221678714883021, -0.562464898254388, 1.85571341770532, -1.19095707960612, 0.297428869663582, 0.969278364723078, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.308101310624499, 0.0, -0.499106683089034, -0.274852735712915, 0.380105265810749, -1.88321813767322, 2.69042613138676, -0.894433394068976, 0.274852735712918, 0.514328128258212, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.128914285025024, 0.0, -0.370369785754967, -0.247666943217322, 0.496971550153384, -2.7546013987422, 2.99605689947215, -0.62429235012675, 0.247666943217323, 0.127320799973352, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.402779357895681, 0.0, -0.0116194405560804, -0.216379324716327, 0.561462998155885, -3.07636228507847, 2.68520236773888, -0.395732197829412, 0.216379324716326, -0.165730800326486, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.499711897604171, 0.0, 0.570711664806186, -0.181968830746225, 0.569968659828757, -2.82293427505145, 1.7525107126411, -0.217778026268173, 0.181968830746224, -0.352190633560597, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.429627645216377, 0.0, 1.33963640509362, -0.1458638786725, 0.526395279794481, -2.04628079656001, 0.277016746250021, -0.092806687657128, 0.145863878672498, -0.433588592137367, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.224017564097302, 0.0, 2.23118963045037, -0.109859058870701, 0.441467552530214, -0.868273736350167, -1.58693345819749, -0.0169632677345533, 0.109859058870699, -0.424504284795674, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0690550028476118, 0.0, 3.16170833906882, -0.075977720500578, 0.331114961451362, 0.536343312459709, -3.62899664868091, 0.0186122732551177, 0.0759777205005762, -0.349727234706494, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.392135940164228, 0.0, 4.0378778597467, -0.0462954451394295, 0.214168800615736, 1.96408507143908, -5.60982699102154, 0.0259380241123812, 0.0462954451394276, -0.240106824728131, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.686745505774595, 0.0, 4.76822583681658, -0.0227450793386268, 0.109686198264297, 3.21066361845776, -7.29214394949974, 0.0179943488336755, 0.0227450793386249, -0.127680547097988, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.901760884363992, 0.0, 5.27451364344711, -0.00692784395960899, 0.0342725498220924, 4.09888353544591, -8.47163629452901, 0.00649658259166208, 0.00692784395960788, -0.0407691324137698, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-2.50200831679557, 0.0, 0.955361438579108, -0.367582382059899, -0.82983128368074, 5.03792421329912, -3.49127733508264, -3.27595980686951, 0.367582382059916, 4.10579109055022, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-2.28816218534667, 0.0, 0.773935401520185, -0.369919044502526, -0.705960907696352, 4.39478045755815, -2.88055367373166, -3.12040063754351, 0.369919044502542, 3.82636154523984, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.9303323263512, 0.0, 0.483438535323885, -0.372965555725257, -0.498778362968949, 3.32755252377551, -1.88065873274818, -2.85519325444343, 0.372965555725271, 3.35397161741235, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.47093131573677, 0.0, 0.140014545188739, -0.374928040181385, -0.232990441855482, 1.97758402604043, -0.646667255492389, -2.50362533141502, 0.374928040181397, 2.73661577327048, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.963845801812338, 0.0, -0.186193885683043, -0.373605835016831, 0.0600202407206598, 0.523643234245967, 0.626396453249424, -2.09573111060051, 0.37360583501684, 2.03571086987982, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.467364960606227, 0.0, -0.421389620660601, -0.366755492482626, 0.346321462694398, -0.842316088627109, 1.73107066989395, -1.66477764060927, 0.366755492482632, 1.31845617791485, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0366483865434977, 0.0, -0.499106683089034, -0.352476335457468, 0.593826122200706, -1.94095020536427, 2.47670527499681, -1.24350991789453, 0.352476335457471, 0.649683795693809, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.283319904290703, 0.0, -0.370369785754967, -0.329563403105201, 0.776402525869219, -2.62957604229204, 2.71662592375632, -0.86059442928031, 0.329563403105203, 0.0841919034110757, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.463358159987527, 0.0, -0.0116194405560808, -0.297776899020769, 0.877155422308966, -2.82124866301723, 2.3695099435858, -0.537708574225701, 0.297776899020769, -0.339446848083279, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.493550373931315, 0.0, 0.570711664806186, -0.257988127018452, 0.890443541528202, -2.49629786967914, 1.43203583094165, -0.287635798867545, 0.257988127018452, -0.602807742660671, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.384095245704858, 0.0, 1.33963640509362, -0.212178341574248, 0.822370263875126, -1.70477341296785, -0.0189582378306224, -0.113588751047358, 0.212178341574247, -0.708781512827783, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.163442736350575, 0.0, 2.23118963045037, -0.163286703802821, 0.68969043151056, -0.559476029623095, -1.83515633717784, -0.00981608491994634, 0.16328670380282, -0.679874346590628, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.126013461172874, 0.0, 3.16170833906882, -0.11492395290768, 0.517290159455973, 0.779476968789582, -3.81517184668552, 0.0366244991732766, 0.114923952907679, -0.553914658629264, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.434089613760271, 0.0, 4.0378778597467, -0.0709867337925427, 0.334588967334482, 2.12645891175387, -5.73024715774028, 0.0432004090553098, 0.0709867337925413, -0.377789376389807, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.709964473504781, 0.0, 4.76822583681658, -0.0352213900829041, 0.171359188185132, 3.29555557610878, -7.35381693942057, 0.0287370058195839, 0.0352213900829025, -0.20009619400473, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.909337372723622, 0.0, 5.27451364344711, -0.0107947768685133, 0.0535428924284229, 4.12573036641187, -8.49090663713534, 0.0102061380423876, 0.0107947768685122, -0.0637490304708259, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.574802512555, 0.0, 0.955361438579108, -0.231859921062388, -1.17698684403183, 3.76356284870746, -3.14412177473155, -4.06744315011257, 0.231859921062404, 5.24442999414437, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.41483693794417, 0.0, 0.773935401520185, -0.247348449291008, -1.00129594665781, 3.22612017119419, -2.5852186347702, -3.8711552897345, 0.247348449291024, 4.87245123639228, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.14839962483399, 0.0, 0.483438535323884, -0.272499514777391, -0.707439672192499, 2.33695851303475, -1.67199742352463, -3.53665991501277, 0.272499514777405, 4.24409958720524, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.809118210159441, 0.0, 0.140014545188739, -0.303060988058365, -0.330460769847964, 1.21830059247062, -0.549196927499908, -3.09357138486933, 0.303060988058376, 3.42403215471727, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.439605563476406, 0.0, -0.186193885683043, -0.333700046032777, 0.0851293932792046, 0.0245121484685803, 0.601287300690879, -2.58006555995239, 0.333700046032787, 2.49493616667316, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0857602196313259, 0.0, -0.421389620660601, -0.358769717850051, 0.491203228190171, -1.07903906410624, 1.58618890439817, -2.03839660695159, 0.358769717850057, 1.5471933787614, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.209301318923786, 0.0, -0.499106683089034, -0.373123444441439, 0.842250162433709, -1.93847587059855, 2.22828123476381, -1.51010673234579, 0.373123444441444, 0.667856569912061, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.410909636484645, 0.0, -0.370369785754967, -0.372870213029427, 1.10120644592707, -2.43236185442814, 2.39182200369847, -1.03149097139848, 0.372870213029429, -0.0697154745286048, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.49734859445972, 0.0, -0.0116194405560811, -0.355966579149674, 1.24410878757138, -2.48828573222701, 2.00255657832338, -0.629888688826801, 0.355966579149676, -0.614220098744594, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.462600626612638, 0.0, 0.570711664806185, -0.322563410177701, 1.26295592169435, -2.09283574219432, 1.0595234507755, -0.321261334708119, 0.322563410177702, -0.941694586986249, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.31696689657528, 0.0, 1.33963640509362, -0.275058125096877, 1.16640454576596, -1.29361078194744, -0.362992519721457, -0.10934018544041, 0.275058125096877, -1.05706436032557, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0854851803254146, 0.0, 2.23118963045037, -0.217842910532556, 0.978218802190734, -0.192990102917759, -2.12368470785801, 0.0135852643754776, 0.217842910532556, -0.991804066566226, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.195634264436341, 0.0, 3.16170833906882, -0.156780481110449, 0.733695781540399, 1.06550339413747, -4.03157746876994, 0.0643887742339747, 0.156780481110448, -0.798084555774389, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.484066975284805, 0.0, 4.0378778597467, -0.0984758912721375, 0.474562504999984, 2.3164098109439, -5.87022069540578, 0.0656886131002486, 0.0984758912721365, -0.540251118100247, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.737236351094012, 0.0, 4.76822583681658, -0.0494408551995473, 0.243046404810486, 3.39451467032336, -7.42550415604592, 0.0417894182921703, 0.0494408551995469, -0.284835823102672, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.918169765663139, 0.0, 5.27451364344711, -0.0152639446359712, 0.0759422803393734, 4.15696214726233, -8.51330602504629, 0.0145693632144467, 0.0152639446359698, -0.0905116435538362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.749801626878224, 0.0, 0.955361438579109, 0.116135757230847, -1.56009104096811, 2.5554577660944, -2.76101757779527, -4.54444835749611, -0.116135757230829, 6.10453939846419, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.640960312887143, 0.0, 0.773935401520185, 0.0777977286598466, -1.32721350596192, 2.12632598683306, -2.25930107546609, -4.31988573684067, -0.077797728659831, 5.64709924280256, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.461117137292955, 0.0, 0.483438535323885, 0.013990854056922, -0.937708267691637, 1.41940742999457, -1.44172882802549, -3.9374520337195, -0.0139908540569074, 4.87516030141111, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.235374423216632, 0.0, 0.140014545188739, -0.0671506034257102, -0.438024340752349, 0.536993234623426, -0.441633356595522, -3.43140478717949, 0.0671506034257225, 3.86942912793181, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0045819357532651, 0.0, -0.186193885683043, -0.155323094522727, 0.11283864764622, -0.391966096394076, 0.573578046323865, -2.84587610767201, 0.155323094522736, 2.73303746002576, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.224839350352641, 0.0, -0.421389620660601, -0.239435913110453, 0.651087783589012, -1.22975407869136, 1.42630434899933, -2.22966237219596, 0.23943591311046, 1.57857458860693, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.39389347852018, 0.0, -0.499106683089034, -0.309082483467602, 1.11639899743114, -1.84891919519751, 1.95413239976638, -1.63065793096835, 0.309082483467608, 0.514258933537187, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.486963618092846, 0.0, -0.370369785754967, -0.35591361108561, 1.45964444654464, -2.14997783541876, 2.03338400308089, -1.09058835106286, 0.355913611085613, -0.369056095481794, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.489406057044837, 0.0, -0.0116194405560814, -0.374729166562414, 1.64906089080069, -2.07539109158282, 1.59760447509407, -0.640708738824659, 0.374729166562417, -1.00835215197605, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.398762504028362, 0.0, 0.570711664806185, -0.364142121624683, 1.67404268668249, -1.6179108546219, 0.648436685787362, -0.299001923570826, 0.364142121624685, -1.37504076311168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.225164634256041, 0.0, 1.33963640509362, -0.326726591590216, 1.54606424975873, -0.822148815635429, -0.742652223714226, -0.0692063896145117, 0.326726591590217, -1.47685786014424, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0099623090705141, 0.0, 2.23118963045037, -0.268631242944805, 1.29662484941341, 0.220863433700841, -2.44209075508068, 0.0582444213591569, 0.268631242944805, -1.35486927077258, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.276724147309117, 0.0, 3.16170833906882, -0.198711625193946, 0.972510628628851, 1.3854081240987, -4.27039231585839, 0.103547513023252, 0.198711625193946, -1.07605814165212, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.540731244070234, 0.0, 4.0378778597467, -0.127299950896346, 0.629030575986491, 2.52754215071584, -6.02468876639229, 0.0935288222614687, 0.127299950896346, -0.722559398247974, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.76768505354442, 0.0, 4.76822583681658, -0.0647800050625715, 0.322156972787791, 3.50407394075108, -7.50461472402323, 0.0568989708795559, 0.0647800050625703, -0.379055943667362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.927948793748651, 0.0, 5.27451364344711, -0.0201638798586967, 0.100661168634898, 4.19146006364337, -8.53802491334181, 0.0194484560772323, 0.0201638798586961, -0.120109624712145, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.103524917869612, 0.0, 0.955361438579109, 0.710529341292211, -1.96529768085851, 1.50397441719539, -2.35581093790487, -4.59633148244336, -0.710529341292193, 6.56162916330184, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0392398630168386, 0.0, 0.773935401520185, 0.638506040288654, -1.67193423766631, 1.17988480525837, -1.91458034376171, -4.36089787508216, -0.638506040288638, 6.03283211274844, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0652975887793433, 0.0, 0.483438535323885, 0.517528893586829, -1.18126175679634, 0.64943921481757, -1.19817533892079, -3.96032872026189, -0.517528893586814, 5.1415904770582, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.192667178236792, 0.0, 0.140014545188739, 0.361173371277439, -0.551793580268219, -0.00481760634586792, -0.327864117079651, -3.43112241392976, -0.361173371277427, 3.98291599419795, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.321011497335485, 0.0, -0.186193885683043, 0.186729425837409, 0.142146532931, -0.679087772691515, 0.544270161039085, -2.82025314889409, -0.186729425837398, 2.67810661596307, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.427168356910191, 0.0, -0.421389620660601, 0.0129726152941945, 0.820196563867684, -1.26297430497024, 1.25719556872066, -2.17958285034887, -0.012972615294186, 1.35938628648116, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.489999601193644, 0.0, -0.499106683089034, -0.142211086820167, 1.40636431012557, -1.65506000517654, 1.66416708707195, -1.55989265699438, 0.142211086820174, 0.153528346868786, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.493477960988571, 0.0, -0.370369785754968, -0.26405130779276, 1.838761822446, -1.77737480241313, 1.65426662717953, -1.00524039066574, 0.264051307792765, -0.83352143178028, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.429108569992234, 0.0, -0.0116194405560816, -0.342677503976868, 2.0773759089559, -1.58677858637501, 1.16928945693886, -0.548359589186511, 0.342677503976871, -1.52901631976941, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.297349583482716, 0.0, 0.570711664806185, -0.374227851961202, 2.10884629383788, -1.08169432692087, 0.213633078631981, -0.207674733361701, 0.374227851961205, -1.90117156047619, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.107830787350571, 0.0, 1.33963640509362, -0.361140734943492, 1.94762767346166, -0.303251545027028, -1.14421564741716, 0.0137133139376817, 0.361140734943493, -1.96134098739936, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.121668845276794, 0.0, 2.23118963045037, -0.31159731659343, 1.63340070712436, 0.669345827618078, -2.77886661279164, 0.12698488391681, 0.311597316593432, -1.76038559104119, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.367355972657788, 0.0, 3.16170833906882, -0.238198282930203, 1.22510342849511, 1.72863274931363, -4.52298511572465, 0.154692680635666, 0.238198282930203, -1.37979610913079, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.602390611899946, 0.0, 4.0378778597467, -0.156060992401065, 0.792410378440612, 2.75258132099967, -6.18806856884641, 0.126427148586461, 0.156060992401065, -0.918837527027087, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.800293215703047, 0.0, 4.76822583681658, -0.0806013352772927, 0.405831669348832, 3.62035679947074, -7.58828942058427, 0.0736858028234595, 0.0806013352772924, -0.479517472172307, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.938328567302508, 0.0, 5.27451364344711, -0.0253099435229447, 0.126806164560695, 4.22798483312302, -8.56416990926761, 0.0246821659668421, 0.0253099435229436, -0.151488330527553, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.315516900792423, 0.0, 0.955361438579109, 1.55499082729802, -2.37796165083881, 0.672268628553052, -1.94314696792457, -4.17091181509959, -1.554990827298, 6.54887346593836, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.34448181870793, 0.0, 0.773935401520186, 1.43860619245399, -2.02299913067527, 0.445098230524638, -1.56351545075274, -3.9445194046416, -1.43860619245398, 5.96751853531683, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.389533481732774, 0.0, 0.483438535323884, 1.2422007807738, -1.42929754846966, 0.0771675301908221, -0.950139547247467, -3.55989272602835, -1.24220078077378, 4.98919027449798, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.43966441683077, 0.0, 0.140014545188739, 0.986302064545831, -0.667656602781761, -0.367677867453388, -0.212001094566108, -3.05299095925535, -0.986302064545816, 3.72064756203708, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.481199840912545, 0.0, -0.186193885683043, 0.697141717454085, 0.171993793816498, -0.809428855383077, 0.514422900153587, -2.47002920085448, -0.697141717454073, 2.29803540703795, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.499889707108274, 0.0, -0.421389620660601, 0.403357685384067, 0.992417583363311, -1.1634746356727, 1.08497454922504, -1.86191913045708, -0.403357685384057, 0.869501547093742, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.483128483559971, 0.0, -0.499106683089034, 0.13247732810134, 1.7016660779481, -1.35288711972034, 1.36886531924942, -1.2783331244392, -0.132477328101332, -0.423332953508921, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.422001106555869, 0.0, -0.370369785754968, -0.092387305932007, 2.22485638760486, -1.31980338282156, 1.26817206202067, -0.762099534372287, 0.0923873059320131, -1.4627568532326, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.312867749071202, 0.0, -0.0116194405560816, -0.255202337199841, 2.51357353849602, -1.03434013591385, 0.733091827398742, -0.344643601488454, 0.255202337199846, -2.16892993700759, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.158260513599786, 0.0, 0.570711664806185, -0.348689428565521, 2.55165192688235, -0.499799623993468, -0.229172554412491, -0.0430472400830904, 0.348689428565525, -2.50860468679928, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0330428202380135, 0.0, 1.33963640509362, -0.374807852831772, 2.35658137833914, 0.246575767439028, -1.55316935229463, 0.140919803637985, 0.374807852831775, -2.49750118197714, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.246792088396228, 0.0, 2.23118963045037, -0.343993242575478, 1.97637451050062, 1.13744287411377, -3.12184041616789, 0.219712201054196, 0.34399324257548, -2.19608671155483, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.464794626070283, 0.0, 3.16170833906882, -0.273272783330201, 1.4823448883326, 2.08331286256362, -4.78022657556214, 0.217056833648163, 0.273272783330201, -1.69940172198078, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.667008385072932, 0.0, 4.0378778597467, -0.183527705043222, 0.958796985317413, 2.98358570104946, -6.35445517572321, 0.16357820911729, 0.183527705043222, -1.12237519443472, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.833927066737322, 0.0, 4.76822583681658, -0.0962882618895096, 0.491046295839443, 3.73920527699563, -7.67350404707488, 0.0916327272455192, 0.0962882618895087, -0.582679023084977, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.948938000703082, 0.0, 5.27451364344711, -0.0305120812886877, 0.153432326996675, 4.26522042895958, -8.59079607170359, 0.030089461601673, 0.0305120812886869, -0.183521788598364, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.492178658264003, 0.0, 0.955361438579109, 2.61899936289641, -2.78316829072921, 0.0904002311910701, -1.53794032803417, -3.28356503697277, -2.61899936289639, 6.06673332770195, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.496336115439377, 0.0, 0.773935401520185, 2.44918065722166, -2.36771986237966, -0.0514767979111959, -1.21879471904835, -3.08579923660538, -2.44918065722164, 5.453519098985, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.499871883013932, 0.0, 0.483438535323884, 2.16181514509485, -1.67285103757436, -0.276724360195042, -0.70658605814276, -2.75061676298846, -2.16181514509483, 4.42346780056279, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.496690223213569, 0.0, 0.140014545188739, 1.78564183431961, -0.781425842297631, -0.538472913352056, -0.0982318550502377, -2.31067699586438, -1.78564183431959, 3.09210283816197, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.479357377659113, 0.0, -0.186193885683043, 1.35746626264987, 0.201301679101279, -0.778278506844864, 0.485115014868807, -1.80786219240526, -1.35746626264986, 1.60656051330395, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.440375077892487, 0.0, -0.421389620660601, 0.917609849562052, 1.16152636364198, -0.934851226178236, 0.915865768946364, -1.28815233706331, -0.91760984956204, 0.126625973421298, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.373528464199742, 0.0, -0.499106683089034, 0.505054866782468, 1.99163139064253, -0.953321787665686, 1.07890000655499, -0.796155566397843, -0.505054866782458, -1.19547582424471, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.275116398803751, 0.0, -0.370369785754968, 0.152874048008686, 2.60397376350622, -0.793801299168085, 0.889054686119314, -0.369953472679479, -0.152874048008678, -2.23402029082677, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.144884814812672, 0.0, -0.0116194405560819, -0.115465227408367, 2.94188855665123, -0.438042183500113, 0.304776809243535, -0.0369235574384519, 0.115465227408374, -2.9049649992128, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0134776948733418, 0.0, 0.570711664806184, -0.288449870974558, 2.98645553403773, 0.10674219163504, -0.663976161567871, 0.188930525980999, 0.288449870974562, -3.17538606001875, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.192364680313382, 0.0, 1.33963640509362, -0.36723398301515, 2.75814480204207, 0.807461051217327, -1.95473277599756, 0.307815533529974, 0.367233983015154, -3.06596033557206, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.38080978597288, 0.0, 2.23118963045037, -0.364648154853732, 2.31315036821157, 1.60823642940137, -3.45861627387885, 0.333074986352592, 0.364648154853735, -2.64622535456419, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.565518442197207, 0.0, 3.16170833906882, -0.302667450288204, 1.73493768819886, 2.4366294785568, -5.0328193754284, 0.288385982817083, 0.302667450288205, -2.02332367101596, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.732249123137496, 0.0, 4.0378778597467, -0.208707376313088, 1.12217678777153, 3.21220624156814, -6.51783497817733, 0.203639275911987, 0.208707376313089, -1.32581606368354, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.867370999045891, 0.0, 4.76822583681658, -0.111273821954289, 0.574720992400483, 3.85632390586524, -7.75717874363592, 0.110091099489307, 0.111273821954289, -0.684812091889805, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.959393643721176, 0.0, 5.27451364344711, -0.0355822754886983, 0.179577322922473, 4.30182106790347, -8.61694106762939, 0.0354749104197567, 0.0355822754886974, -0.215052233342246, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.445228153040374, 0.0, 0.955361438579108, 3.83894643209006, -3.16627248766549, -0.245753460521581, -1.15483613109788, -2.01666746255551, -3.83894643209003, 5.18293995022096, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.434929671538347, 0.0, 0.773935401520185, 3.60960990413057, -2.69363742168376, -0.31598791331427, -0.892877159744245, -1.86396354579544, -3.60960990413055, 4.55760096747916, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.414610121410139, 0.0, 0.483438535323884, 3.22084976307399, -1.9031196330735, -0.421731194090386, -0.476317462643621, -1.60632038340553, -3.22084976307397, 3.50944001647899, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.381555307510686, 0.0, 0.140014545188739, 2.71043092159795, -0.888989413202016, -0.530901568553558, 0.0093317158541486, -1.27075299288315, -2.71043092159793, 2.15974240608513, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.332597476615796, 0.0, -0.186193885683043, 2.12679061443291, 0.229010933468293, -0.60380935143453, 0.457405760501792, -0.891777939578905, -2.1267906144329, 0.662767006110578, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.264799917570883, 0.0, -0.421389620660601, 1.52311838460722, 1.32141091904082, -0.599391510457792, 0.755981213547524, -0.507068641696538, -1.52311838460721, -0.814342277344315, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.176178447389749, 0.0, -0.499106683089034, 0.951038004162693, 2.26578022563996, -0.48182293585826, 0.80475117155756, -0.152822412207627, -0.951038004162681, -2.11295781343236, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0663487086627714, 0.0, -0.370369785754968, 0.454652321701684, 2.9624117641238, -0.22659560840953, 0.53061668550174, 0.140592491154498, -0.454652321701675, -3.10300425527832, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0630012618009117, 0.0, -0.0116194405560818, 0.0657157243775943, 3.34684065988054, 0.174795996342781, -0.100175293985775, 0.352143470961092, -0.065715724377587, -3.69898413084166, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.207891371798767, 0.0, 0.570711664806184, -0.199453028080391, 3.39754229902588, 0.71224263354861, -1.07506292655601, 0.47234104580059, 0.199453028080397, -3.86988334482649, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.362127634396818, 0.0, 1.33963640509362, -0.340941757744291, 3.13780450603484, 1.35688370929353, -2.33439247999033, 0.503870712884268, 0.340941757744296, -3.64167521891912, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.517683231092376, 0.0, 2.23118963045037, -0.374010531542412, 2.63155641543425, 2.06351592174354, -3.77702232110152, 0.460586054783408, 0.374010531542416, -3.09214247021768, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.665346496346793, 0.0, 3.16170833906882, -0.325860423094892, 1.97375253528731, 2.77527237979484, -5.27163422251685, 0.365021064159981, 0.325860423094894, -2.33877359944731, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.79556305405014, 0.0, 4.0378778597467, -0.230881773810084, 1.27664485875804, 3.42998824346729, -6.67230304916384, 0.244778809327635, 0.230881773810085, -1.52142366808569, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.89937150674085, 0.0, 4.76822583681658, -0.125061166572762, 0.653831560377787, 3.9674349815375, -7.83628931161322, 0.128304262565794, 0.125061166572762, -0.782135822943597, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.969313541437546, 0.0, 5.27451364344711, -0.0403413410805671, 0.204296211217996, 4.33645985391536, -8.64165995592491, 0.0406357425442566, 0.0403413410805662, -0.244931953762269, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.223064261594389, 0.0, 0.955361438579108, 5.12403858877413, -3.51342804801658, -0.370745129426685, -0.807680570746794, -0.509411414425456, -5.1240385887741, 4.02283946244199, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.207219864923586, 0.0, 0.773935401520185, 4.83321555335935, -2.98897246064522, -0.383613145660968, -0.597542120782784, -0.412648089951906, -4.83321555335932, 3.40162055059708, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.178207445737246, 0.0, 0.483438535323884, 4.33965118121196, -2.11178094229705, -0.393989827641042, -0.26765615342007, -0.251116289594674, -4.33965118121193, 2.36289723189168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.135317444779775, 0.0, 0.140014545188739, 3.69034894202922, -0.986459741194499, -0.382134033815127, 0.106802043846631, -0.0445971097209784, -3.69034894202919, 1.03105685091544, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0778756756605858, 0.0, -0.186193885683043, 2.94565844270811, 0.254120086026839, -0.323978397920774, 0.432296607943248, 0.181811689651498, -2.94565844270809, -0.435931775678374, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.00554955165183336, 0.0, -0.421389620660601, 2.17195926613375, 1.4662926845366, -0.195259379042967, 0.611099448051751, 0.401022605749036, -2.17195926613373, -1.86731529028567, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.081331979952381, 0.0, -0.499106683089034, 1.43385102798813, 2.51420426587296, 0.0241115317168737, 0.556327131324557, 0.587501038959942, -1.43385102798812, -3.10170530483293, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.181501522425236, 0.0, -0.370369785754968, 0.786785475059409, 3.28721568418164, 0.346058542736326, 0.205812765443892, 0.720575875600228, -0.786785475059397, -4.0077915597819, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.292568001732669, 0.0, -0.0116194405560818, 0.271083218652638, 3.71379402514295, 0.771316101536954, -0.46712865924819, 0.787077705167892, -0.271083218652629, -4.50087173031087, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.410960329802128, 0.0, 0.570711664806184, -0.0919091005549551, 3.77005467919202, 1.28782397171812, -1.44757530672216, 0.782953931329385, 0.0919091005549622, -4.55300861052143, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.532020492538761, 0.0, 1.33963640509362, -0.301057032254555, 3.48183878792567, 1.87081084932631, -2.67842676188116, 0.713648296515947, 0.30105703225456, -4.19548708444164, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.650246741784752, 0.0, 2.23118963045037, -0.373960783604933, 2.92008478611442, 2.48460780311609, -4.0655506917817, 0.593199313413261, 0.373960783604937, -3.5132840995277, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.759667169858658, 0.0, 3.16170833906882, -0.343017081049263, 2.19015815737174, 3.08599867539113, -5.48803984460128, 0.442185079717473, 0.343017081049265, -2.63234323708923, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.854305720860421, 0.0, 4.0378778597467, -0.249605626003931, 1.41661839642354, 3.62870444794307, -6.81227658682934, 0.284797623944068, 0.249605626003933, -1.70141602036763, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.928688908817234, 0.0, 4.76822583681658, -0.137235107202252, 0.72551877700314, 4.06843960023924, -7.90797652823858, 0.145447724012687, 0.137235107202252, -0.870966501015844, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.978331622806991, 0.0, 5.27451364344711, -0.0446248204180955, 0.226695599128947, 4.36787732319576, -8.66405934383586, 0.0453703445761733, 0.0446248204180951, -0.272065943705136, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.104723374422954, 0.0, 0.955361438579107, 6.36627049079207, -3.81208828874522, -0.341617734137978, -0.509020330018155, 1.06060812360983, -6.36627049079204, 2.75148016513534, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.119592032880062, 0.0, 0.773935401520185, 6.01680327752438, -3.24305116168238, -0.310879948894477, -0.343463419745626, 1.09775153201676, -6.01680327752434, 2.14529962966557, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.146250101300647, 0.0, 0.483438535323884, 5.42324224342887, -2.29129365636804, -0.249044994674134, -0.0881434393490836, 1.15693231966013, -5.42324224342884, 1.13436133670786, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.184488706545264, 0.0, 0.140014545188738, 4.64134501955047, -1.07031411354761, -0.146182254843201, 0.190656416199745, 1.22620511912531, -4.64134501955045, -0.155891005577746, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.233880758616505, 0.0, -0.186193885683043, 3.7427534616678, 0.275721657207328, 0.0093796075368085, 0.410695036762758, 1.29066314288827, -3.74275346166777, -1.56638480009564, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.293682102755427, 0.0, -0.421389620660601, 2.80635823590606, 1.59093543234797, 0.22861502317567, 0.486456700240375, 1.3346532299286, -2.80635823590604, -2.92558866227661, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.362730670060135, 0.0, -0.499106683089034, 1.90907904243234, 2.72792512226291, 0.519231078214584, 0.342606274934601, 1.3441277435119, -1.90907904243232, -4.07205286577484, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.439368049859932, 0.0, -0.370369785754968, 1.1171611618719, 3.56664665989748, 0.883356045886856, -0.0736182102719415, 1.30881808984742, -1.11716116187189, -4.87546474974493, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.521402402007353, 0.0, -0.0116194405560818, 0.479098846714726, 4.02948644929603, 1.31584292596472, -0.78282108340127, 1.22392773350466, -0.479098846714716, -5.25341418280072, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.606126656951536, 0.0, 0.570711664806184, 0.0210764066493694, 4.09052956089147, 1.80346518056697, -1.76805018842161, 1.09110576568312, -0.021076406649361, -5.18163532657461, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.690399016274198, 0.0, 1.33963640509362, -0.254525370932386, 3.77781377200632, 2.32516435714239, -2.97440174596181, 0.918558481573552, 0.254525370932391, -4.69637225357989, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.77078458986762, 0.0, 2.23118963045037, -0.367425408200911, 3.16830766509477, 2.8533685301793, -4.31377357076204, 0.720272536900151, 0.367425408200916, -3.88858020199494, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.843748655901883, 0.0, 3.16170833906882, -0.354840285738402, 2.37633335537635, 3.35625535943896, -5.67421504260589, 0.514443361071559, 0.354840285738404, -2.89077671644792, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.90588461174833, 0.0, 4.0378778597467, -0.264671697365178, 1.53703856314229, 3.80070350554973, -6.93269675354808, 0.321310443470729, 0.26467169736518, -1.85834900661303, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.954154075284697, 0.0, 4.76822583681658, -0.147465219209253, 0.787191766923975, 4.15557775662754, -7.96964951815941, 0.160682778473148, 0.147465219209253, -0.947874545397141, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.986112016384794, 0.0, 5.27451364344711, -0.0482878481088265, 0.245965941735277, 4.39492805937989, -8.6833296864422, 0.0494877104632455, 0.048287848108826, -0.295453652198539, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.458690107858419, 0.0, 0.955361438579107, 7.45315080982493, -4.0514600646383, -0.22702277659559, -0.269648554125076, 2.50145517607815, -7.45315080982489, 1.55000488856009, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.468939383827885, 0.0, 0.773935401520184, 7.0528438106582, -3.44669149136098, -0.165172927625257, -0.13982309006702, 2.48313941609841, -7.05284381065816, 0.963552075262524, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.48714485253883, 0.0, 0.483438535323884, 6.37257130525701, -2.43517044779406, -0.0520270348619671, 0.055733352076935, 2.44715613272645, -6.37257130525698, -0.0119856849324411, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.512899826889188, 0.0, 0.140014545188738, 5.47564555185898, -1.13752215562778, 0.115020823420553, 0.257864458279916, 2.38891677177774, -5.47564555185895, -1.25139461615, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.545591631214166, 0.0, -0.186193885683043, 4.44345604819923, 0.29303499775423, 0.338403820681372, 0.393381696215855, 2.30307660201737, -4.44345604819921, -2.59611159977164, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.584390081145208, 0.0, -0.421389620660601, 3.36569787180911, 1.69083475548188, 0.619222324699364, 0.386557377106462, 2.18470084422143, -3.36569787180909, -3.87553559970335, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.628237845937604, 0.0, -0.499106683089034, 2.32993756160671, 2.8992192349799, 0.956032366809038, 0.171312162217616, 2.03049343856374, -2.3299375616067, -4.92971267354368, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.675850876325833, 0.0, -0.370369785754968, 1.411759009629, 3.79060646363114, 1.34379867608642, -0.297578014005607, 1.83989876407041, -1.41175900962899, -5.63050522770159, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.725733903864437, 0.0, -0.011619440556082, 0.666744409846641, 4.28250926887574, 1.77319724740151, -1.03584390298098, 1.61590479849366, -0.666744409846629, -5.89841406736943, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.776214330064238, 0.0, 0.570711664806184, 0.125297365241882, 4.34738544962432, 2.23040874241252, -2.02490607715445, 1.36541439738833, -0.125297365241873, -5.71279984701267, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.825495658384399, 0.0, 1.33963640509362, -0.209072338626471, 4.01503335431986, 2.69748058156614, -3.21162132827535, 1.09910815598967, 0.209072338626478, -5.11414151030955, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.871729125889336, 0.0, 2.23118963045037, -0.357852171803014, 3.36725463980375, 3.15326004091, -4.51272054547102, 0.830790309319763, 0.357852171803019, -4.19804494912353, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.913099677316599, 0.0, 3.16170833906882, -0.362355458769505, 2.5255500293631, 3.57482305484043, -5.82343171659264, 0.576279209455172, 0.362355458769508, -3.10182923881829, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.947920219345662, 0.0, 4.0378778597467, -0.276051043592926, 1.63355354983915, 3.93925409984392, -7.02921174024495, 0.351966704840313, 0.276051043592928, -1.98552025467948, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.974726426980655, 0.0, 4.76822583681658, -0.155502106488611, 0.836621758294671, 4.22558009969419, -8.01907950953011, 0.173218242889748, 0.155502106488611, -1.00984000118444, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.992362629047072, 0.0, 5.27451364344711, -0.0512089687333726, 0.261410836979759, 4.41662356728665, -8.69877458168668, 0.0528172025009771, 0.0512089687333719, -0.314228039480753, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.762098386874954, 0.0, 0.955361438579107, 8.28146774818307, -4.22289680757415, -0.0950512405149053, -0.0982118111892243, 3.63318039345282, -8.28146774818303, 0.589716414121272, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.766940864431562, 0.0, 0.773935401520184, 7.84265115313093, -3.59253756999841, -0.0130175256590077, 0.00602298857040839, 3.57094823917481, -7.84265115313089, 0.0215893308235446, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.775502266411418, 0.0, 0.483438535323883, 7.09668600968232, -2.53821421063582, 0.133286616168861, 0.158777114918695, 3.45962825102434, -7.09668600968229, -0.92141404038858, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.787528595620871, 0.0, 0.140014545188738, 6.11258952149254, -1.18565618392052, 0.3415155638595, 0.305998486572654, 3.30048951014298, -6.11258952149251, -2.11483332622251, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.802655449095625, 0.0, -0.186193885683043, 4.97911358172254, 0.305434716566635, 0.607867357375238, 0.38098197740345, 3.09579795342213, -4.97911358172251, -3.40123266998882, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.820415904843638, 0.0, -0.421389620660601, 3.7941162039464, 1.76238209858729, 0.926795491503207, 0.315010034001049, 2.84914500005715, -3.79411620394638, -4.61152709864449, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.840250066009653, 0.0, -0.499106683089034, 2.65321155515296, 3.02189913180033, 1.29072448370152, 0.0486322653971835, 2.56577965218203, -2.65321155515294, -5.5876787839824, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.861518091660288, 0.0, -0.370369785754968, 1.63904788202239, 3.95100523728523, 1.68986466507497, -0.457976787659699, 2.25285485179826, -1.63904788202238, -6.20386008908352, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.88351718771988, 0.0, -0.011619440556082, 0.812577316606882, 4.46372281385343, 2.11219407623464, -1.21705744795867, 1.91952098910934, -0.812577316606869, -6.3832438029628, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.905502643519249, 0.0, 0.570711664806184, 0.207412301789373, 4.5313442175449, 2.54365582378812, -2.20886484507504, 1.57681764739083, -0.207412301789364, -6.10816186493576, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.926712592134245, 0.0, 1.33963640509362, -0.172057662776588, 4.18492870810878, 2.9685928691049, -3.38151668206427, 1.2373397655894, 0.172057662776596, -5.4222684736982, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.946395732540212, 0.0, 2.23118963045037, -0.348625184952259, 3.50973936355114, 3.37041137130827, -4.65520526921842, 0.914683902821393, 0.348625184952265, -4.42442326637256, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.963840827011164, 0.0, 3.16170833906882, -0.366665452713325, 2.63241818658242, 3.73243236175431, -5.93029987381195, 0.622710365205917, 0.366665452713328, -3.25512855178835, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.978406430151057, 0.0, 4.0378778597467, -0.283820327503545, 1.70267704989288, 4.03886381070305, -7.09833524029868, 0.374683631735089, 0.283820327503547, -2.07736068162799, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.989549036900306, 0.0, 4.76822583681658, -0.161169275405677, 0.872023244924926, 4.2758041962441, -8.05448099616036, 0.182373683892333, 0.161169275405677, -1.05439692881728, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.996847344852231, 0.0, 5.27451364344711, -0.0532929976179446, 0.272472385593085, 4.43216983170514, -8.7098361303, 0.0552178894215646, 0.053292997617944, -0.327690275014666, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.952917925769819, 0.0, 0.955361438579106, 8.77034113251606, -4.3202420876949, -0.00157698174079246, -0.000866531068470788, 4.31287331668066, -8.77034113251601, 0.00736877101417521, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.953910725785576, 0.0, 0.773935401520184, 8.30887841618783, -3.67535194885526, 0.0911379568381576, 0.0888373674272573, 4.22414536358572, -8.30887841618779, -0.548793414730521, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.955662170838869, 0.0, 0.483438535323883, 7.52427779357209, -2.59672456137365, 0.254936169858484, 0.217287465656524, 4.06737993934156, -7.52427779357205, -1.47065537796797, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.958114323361916, 0.0, 0.140014545188738, 6.48890521189975, -1.21298766716767, 0.484769808353398, 0.333329969819801, 3.84739092829123, -6.48890521189971, -2.63440326112362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.961185370308188, 0.0, -0.186193885683043, 5.29583469826822, 0.312475529875038, 0.773438091896205, 0.373941164095046, 3.57104899118037, -5.29583469826818, -3.88352452105546, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.964772503729391, 0.0, -0.421389620660601, 4.04771719412419, 1.80300813964022, 1.11177813144189, 0.274383992948122, 3.24710258912069, -4.04771719412416, -5.05011072876095, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.968755213962437, 0.0, -0.499106683089034, 2.84489340793634, 3.09155928000811, 1.48888977986208, -0.0210278828105944, 2.88596665291819, -2.84489340793632, -5.97752593292634, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.972999177335543, 0.0, -0.370369785754968, 1.77416259369933, 4.04208293326214, 1.89242344672713, -0.549054483636609, 2.49945064915045, -1.77416259369931, -6.54153358241262, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.977360656150231, 0.0, -0.0116194405560821, 0.89963511712288, 4.56661956163013, 2.30893429244169, -1.31995419573536, 2.10042225805569, -0.899635117122866, -6.66704181968585, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.981691287935535, 0.0, 0.570711664806184, 0.25681494041329, 4.63579975891387, 2.72430000957338, -2.31332038644401, 1.70240893043104, -0.256814940413281, -6.33820868934493, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.985843115840471, 0.0, 1.33963640509362, -0.149382490896518, 4.28139875602602, 3.12419344072837, -3.47798672998151, 1.31914546117569, 0.149382490896526, -5.60054421720173, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.989673691872322, 0.0, 2.23118963045037, -0.342505176776641, 3.59064509652641, 3.49459506361565, -4.73611100219369, 0.964081870329121, 0.342505176776647, -4.55472696685556, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.993051069990859, 0.0, 3.16170833906882, -0.368714372190138, 2.69310010646931, 3.8223245246209, -5.99098179369884, 0.649871688708799, 0.368714372190141, -3.34297179517813, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.99585849778073, 0.0, 4.0378778597467, -0.288090510224147, 1.74192678341223, 4.09556561185207, -7.13758497381803, 0.387865516644159, 0.28809051022415, -2.12979230005641, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.997998609374343, 0.0, 4.76822583681658, -0.164354217367199, 0.892124931259475, 4.30435545505268, -8.07458268249491, 0.187638314404849, 0.164354217367199, -1.07976324566434, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.999396852938814, 0.0, 5.27451364344711, -0.0544733567751812, 0.278753358562436, 4.44100031276107, -8.71611710326935, 0.0565870383509109, 0.0544733567751808, -0.335340396913363, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_C0_D10[256][32] = \
    {{-5.3165577021878, 0.952917925769816, 0.0, -0.0217763713045874, -0.022150712933927, -0.111053494146381, 0.0221507129339268, 8.65315974005328, -4.2895199636353, 0.132829865450969, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-4.94974865622051, 0.953910725785575, 0.0, -0.114002802586152, -0.10841878691355, -0.566131999545791, 0.10841878691355, 8.19711844827269, -4.20128051783775, 0.680134802131944, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-4.33205225035761, 0.955662170838868, 0.0, -0.276938797361328, -0.231122209548859, -1.31006172671357, 0.231122209548859, 7.42176739135748, -4.04537731183874, 1.5870005240749, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-3.53018929772946, 0.958114323361915, 0.0, -0.505564368270922, -0.339792485702095, -2.22553527789345, 0.339792485702095, 6.39867134274128, -3.82659636837373, 2.73109964616437, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-2.62928673065267, 0.961185370308189, 0.0, -0.792718207664022, -0.37227636722257, -3.16510597903011, 0.37227636722257, 5.21987023575706, -3.55176887541258, 3.95782418669413, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.72204722474024, 0.964772503729393, 0.0, -1.12928723239971, -0.264777985357334, -3.97206647372091, 0.264777985357334, 3.98686820917375, -3.2295934881629, 5.10135370612061, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.897203686455049, 0.968755213962438, 0.0, -1.50442996134614, 0.0374989908761695, -4.50264332752421, -0.0374989908761686, 2.79887494392678, -2.87042647143416, 6.00707328887034, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.228683857944156, 0.972999177335543, 0.0, -1.90586255132708, 0.570589760425348, -4.64660212283701, -0.570589760425347, 1.74169622515914, -2.48601154455052, 6.55246467416409, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.233098651787214, 0.977360656150231, 0.0, -2.32021092731482, 1.34428408155718, -4.34344980842697, -1.34428408155718, 0.878686315245138, -2.08914562318258, 6.66366073574179, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.466695414241415, 0.981691287935535, 0.0, -2.73342625973677, 2.33801884825039, -3.59200293012439, -2.33801884825039, 0.244895978090721, -1.69328268026767, 6.32542918986115, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.48112664742516, 0.985843115840469, 0.0, -3.13125510207924, 3.50079702575631, -2.45198229189198, -3.50079702575631, -0.154885963440794, -1.31208379982483, 5.58323739397122, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.313281613098642, 0.989673691872319, 0.0, -3.49974930090726, 4.75524112329228, -1.03737004000651, -4.75524112329228, -0.344027671933429, -0.958927633037532, 4.53711934091377, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0216142088802487, 0.993051069990856, 0.0, -3.82579495630862, 6.00533000405727, 0.497621721829024, -6.00533000405727, -0.368264021850016, -0.646401257021089, 3.3281732344796, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.32296936661597, 0.995858497780725, 0.0, -4.09763493164838, 7.14686555416384, 1.97812078784502, -7.14686555416384, -0.287092934316899, -0.385796196847857, 2.11951414380337, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.647756691572696, 0.997998609374338, 0.0, -4.30535581634561, 8.07933571642372, 3.23109585728756, -8.07933571642372, -0.163603964689715, -0.186637953111928, 1.07425995905805, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.888916839894248, 0.999396852938808, 0.0, -4.44130185597003, 8.7176022362643, 4.10772543092418, -8.7176022362643, -0.0541945179026181, -0.0562854951419437, 0.333576425045852, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-4.92803860051349, 0.762098386874952, 0.0, -0.0187673687666582, -0.0221507129339267, -0.108044491608452, 0.0221507129339266, 7.68530199780982, -3.51936178417127, 0.12681186037511, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-4.58174290458663, 0.766940864431561, 0.0, -0.0985956700199824, -0.10841878691355, -0.550724866979622, 0.10841878691355, 7.27413708365091, -3.45933504349585, 0.649320536999604, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-3.99892123083009, 0.775502266411416, 0.0, -0.240988383736914, -0.231122209548859, -1.27411131308915, 0.231122209548859, 6.57534544787499, -3.35192648345631, 1.51509969682607, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-3.24307284703176, 0.78752859562087, 0.0, -0.443696611808564, -0.339792485702095, -2.16366752143109, 0.339792485702095, 5.65385271360484, -3.19830846219394, 2.60736413323966, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-2.39518161842776, 0.802655449095625, 0.0, -0.703061390034862, -0.37227636722257, -3.07544916140095, 0.37227636722257, 4.59313009009467, -3.00060392076253, 3.77851055143581, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.54338145073494, 0.820415904843639, 0.0, -1.0137259751743, -0.264777985357334, -3.8565052164955, 0.264777985357334, 3.48518006227739, -2.76221451638609, 4.8702311916698, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.771940260190856, 0.840250066009654, 0.0, -1.36835138661918, 0.0374989908761695, -4.36656475279724, -0.0374989908761686, 2.4198429434456, -2.4881527492644, 5.73491613941641, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.150924807256516, 0.861518091660288, 0.0, -1.75742919436088, 0.570589760425348, -4.49816876587081, -0.570589760425347, 1.4746970381086, -2.18529032251237, 6.25559796023169, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.272100912372042, 0.883517187719879, 0.0, -2.16925863960696, 1.34428408155718, -4.19249752071911, -1.34428408155718, 0.706838325645132, -1.86245642573705, 6.36175616032607, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.477263285077029, 0.905502643519249, 0.0, -2.59013595057949, 2.33801884825039, -3.44871262096711, -2.33801884825039, 0.147571592003205, -1.53033752059948, 6.0388485715466, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.473794471259688, 0.926712592134244, 0.0, -3.00477770611646, 3.50079702575631, -2.3255048959292, -3.50079702575631, -0.199352134816075, -1.20115492857786, 5.33028260204566, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.29752773036487, 0.946395732540209, 0.0, -3.3969696770226, 4.75524112329228, -0.934590416121853, -4.75524112329228, -0.355797865797996, -0.888125597107083, 4.33156009314445, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.00485391068824326, 0.96384082701116, 0.0, -3.75040165770653, 6.00533000405727, 0.57301502043111, -6.00533000405727, -0.3639536684457, -0.604741069253704, 3.17738663727542, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.33600329092111, 0.978406430151052, 0.0, -4.04962145654449, 7.14686555416384, 2.02613426294891, -7.14686555416384, -0.278477153336293, -0.36392598589365, 2.02348719359559, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.655175219483713, 0.9895490369003, 0.0, -4.28102054406156, 8.07933571642372, 3.2554311295716, -8.07933571642372, -0.157216481341719, -0.177157336074869, 1.02558941448996, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.89137275191425, 0.996847344852225, 0.0, -4.43374533013792, 8.7176022362643, 4.1152819567563, -8.7176022362643, -0.0518322019491977, -0.053642390988779, 0.318463373381623, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-4.27645762035824, 0.458690107858418, 0.0, -0.0134681534996345, -0.0221507129339261, -0.102745276341429, 0.0221507129339259, 6.07873175848276, -2.26096424598294, 0.116213429841064, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-3.96491545372971, 0.468939383827884, 0.0, -0.0714618570415974, -0.108418786913549, -0.523591054001238, 0.108418786913549, 5.74248070133339, -2.24650463143157, 0.595052911042835, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-3.44116329026026, 0.487144852538829, 0.0, -0.177675382723193, -0.231122209548859, -1.21079831207543, 0.231122209548859, 5.17147215286274, -2.21745371514131, 1.38847369479863, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-2.76321946370277, 0.512899826889188, 0.0, -0.334740053796729, -0.339792485702095, -2.05471096341926, 0.339792485702095, 4.41951717821517, -2.16919754140159, 2.38945101721599, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-2.00502080213158, 0.545591631214166, 0.0, -0.54516495399533, -0.37227636722257, -2.91755272536142, 0.37227636722257, 3.55574463962084, -2.09631546870343, 3.46271767935675, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.24693304436978, 0.584390081145208, 0.0, -0.810208706296749, -0.264777985357334, -3.65298794761795, 0.264777985357334, 2.65625742584865, -1.99371446262407, 4.4631966539147, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.565637101791926, 0.628237845937604, 0.0, -1.12870065465143, 0.0374989908761693, -4.1269140208295, -0.0374989908761685, 1.7952244065757, -1.85782515072137, 5.25561467548092, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0246461502196394, 0.675850876325833, 0.0, -1.49602020535027, 0.570589760425348, -4.2367597768602, -0.570589760425347, 1.03647250870039, -1.68767723480659, 5.73277998221047, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.333302235191038, 0.725733903864436, 0.0, -1.90341351068802, 1.34428408155718, -3.92665239180017, -1.34428408155718, 0.426652396151698, -1.48568853520717, 5.83006590248819, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.490985526117989, 0.776214330064237, 0.0, -2.33778448715237, 2.33801884825039, -3.19636115753999, -2.33801884825039, -0.00916120353372543, -1.2580386526485, 5.53414564469237, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.457962599165092, 0.825495658384398, 0.0, -2.78203580438306, 3.50079702575631, -2.1027629941958, -3.50079702575631, -0.268905324376729, -1.01455293317276, 4.88479879857886, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.268232165241987, 0.871729125889333, 0.0, -3.21596240130156, 4.75524112329228, -0.753583140400821, -4.75524112329228, -0.371873342203107, -0.768087948928213, 3.96954554170238, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0253645900460435, 0.913099677316596, 0.0, -3.61762499369675, 6.00533000405727, 0.705791684440895, -6.00533000405727, -0.354257816671691, -0.533477270598862, 2.91183330925585, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.359206577500588, 0.947920219345657, 0.0, -3.9650639538219, 7.14686555416383, 2.1106917656715, -7.14686555416384, -0.262556790982731, -0.326156850862338, 1.85437218815041, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.668298242297547, 0.974726426980649, 0.0, -4.23816320353454, 8.07933571642372, 3.29828847009863, -8.07933571642372, -0.1457930456337, -0.160635139049403, 0.939874733435915, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.895703182760619, 0.992362629047066, 0.0, -4.4204373795628, 8.7176022362643, 4.12858990733142, -8.7176022362643, -0.047656056061619, -0.0490033902248288, 0.291847472231378, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-3.43634820617754, 0.104723374422954, 0.0, -0.00606902454055624, -0.0221507129339259, -0.0953461473823509, 0.0221507129339258, 4.0445461966859, -0.712921364931318, 0.101415171922907, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-3.17040134684958, 0.119592032880062, 0.0, -0.0335757604665075, -0.108418786913549, -0.485704957426148, 0.108418786913549, 3.80410513662533, -0.753295822655806, 0.519280717892655, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-2.7241129880141, 0.146250101300648, 0.0, -0.0892734145672441, -0.231122209548859, -1.12239634391948, 0.231122209548859, 3.39647679713223, -0.818613910418778, 1.21166975848673, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-2.14825961633647, 0.184488706545264, 0.0, -0.182607410934696, -0.339792485702095, -1.90257832055723, 0.339792485702095, 2.86118636313865, -0.897415453347441, 2.08518573149192, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.50747074284048, 0.233880758616506, 0.0, -0.32469908620809, -0.37227636722257, -2.69708685757418, 0.37227636722257, 2.24893364844099, -0.975343664217019, 3.02178594378227, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.871858898790322, 0.293682102755428, 0.0, -0.526043892839245, -0.264777985357334, -3.36882313416045, 0.264777985357334, 1.61540115629995, -1.03722436026505, 3.89486702699969, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.308101310624497, 0.362730670060136, 0.0, -0.794083813927499, 0.0374989908761689, -3.79229718010557, -0.0374989908761682, 1.01464564836337, -1.06927500779901, 4.58638099403306, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.128914285025026, 0.439368049859932, 0.0, -1.13102298910418, 0.570589760425348, -3.87176256061411, -0.570589760425347, 0.492868811745163, -1.06115114663012, 5.00278554971828, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.402779357895683, 0.521402402007352, 0.0, -1.53222225068104, 1.34428408155718, -3.5554611317932, -1.34428408155718, 0.0833666488853236, -1.00754840878836, 5.08768338247424, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.499711897604173, 0.606126656951536, 0.0, -1.9854340113132, 2.33801884825039, -2.84401068170082, -2.33801884825039, -0.196701619618794, -0.909136934936914, 4.82944469301402, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.429627645216378, 0.690399016274196, 0.0, -2.47102823581489, 3.50079702575631, -1.79175542562763, -3.50079702575631, -0.347332058589503, -0.772694602901072, 4.26278366144252, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.224017564097303, 0.770784589867618, 0.0, -2.96322758905, 4.75524112329228, -0.50084832814926, -4.75524112329228, -0.384388675935453, -0.610413478029469, 3.46407591719926, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0690550028476116, 0.84374865590188, 0.0, -3.43223307993954, 6.00533000405727, 0.891183598198108, -6.00533000405727, -0.336228012483271, -0.438465640570998, 2.54104948174143, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.392135940164229, 0.905884611748325, 0.0, -3.84699895068915, 7.14686555416383, 2.22875676880425, -7.14686555416384, -0.238733673252783, -0.275014998331314, 1.61824218188489, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.686745505774595, 0.954154075284692, 0.0, -4.17832283596615, 8.07933571642372, 3.35812883766701, -8.07933571642372, -0.129470870375561, -0.137937699134536, 0.820193998299143, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.901760884363994, 0.986112016384788, 0.0, -4.40185590333949, 8.7176022362643, 4.14717138355473, -8.7176022362643, -0.0417912655171471, -0.0425598665036483, 0.254684519784756, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-2.50200831679557, -0.22306426159439, 0.0, 0.00316274736678757, -0.0221507129339252, -0.0861143754750078, 0.0221507129339253, 1.84807878190462, 0.876993796485336, 0.0829516281082203, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-2.28816218534666, -0.207219864923587, 0.0, 0.0136941011584447, -0.108418786913548, -0.438435095801196, 0.108418786913549, 1.71281491581584, 0.782567134454412, 0.424740994642751, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.9303323263512, -0.178207445737247, 0.0, 0.0210242719157862, -0.231122209548859, -1.01209865743645, 0.231122209548859, 1.48445792676853, 0.624081845319911, 0.991074385520668, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.47093131573677, -0.135317444779775, 0.0, 0.00720599363374322, -0.339792485702094, -1.71276491598879, 0.339792485702095, 1.1867236106142, 0.419525149902343, 1.70555892235504, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.963845801812336, -0.0778756756605856, 0.0, -0.0496274370960548, -0.37227636722257, -2.42201520846214, 0.37227636722257, 0.849927332107612, 0.19179414536531, 2.4716426455582, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.467364960606226, -0.0055495516518336, 0.0, -0.171496113439656, -0.264777985357334, -3.01427535476086, 0.264777985357335, 0.507181625524492, -0.0342671132664322, 3.18577146820052, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0366483865434959, 0.081331979952381, 0.0, -0.37658786717434, 0.0374989908761687, -3.37480123335241, -0.0374989908761681, 0.190341110093614, -0.235024703502498, 3.75138910052675, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.283319904290705, 0.181501522425235, 0.0, -0.675621945841524, 0.570589760425347, -3.41636151735145, -0.570589760425347, -0.0738089542208921, -0.391012472495048, 4.09198346319298, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.463358159987529, 0.292568001732668, 0.0, -1.06909300055772, 1.34428408155718, -3.09233188166988, -1.34428408155718, -0.266625355573053, -0.489300806147143, 4.16142488222759, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.493550373931316, 0.410960329802127, 0.0, -1.54581209873657, 2.33801884825039, -2.40438876912419, -2.33801884825039, -0.37954489942249, -0.524965804310952, 3.95020086786076, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.384095245704859, 0.532020492538759, 0.0, -2.08298919090056, 3.50079702575631, -1.4037163807133, -3.50079702575631, -0.414645783301901, -0.501469954941717, 3.48670557161386, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.163442736350576, 0.650246741784749, 0.0, -2.64789450691891, 4.75524112329228, -0.185515246018165, -4.75524112329228, -0.383776868524868, -0.429912609610457, 2.83340975293707, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.126013461172874, 0.759667169858654, 0.0, -3.2009226282988, 6.00533000405727, 1.12249404983884, -6.00533000405727, -0.306392581875972, -0.327261126809809, 2.07842857845996, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.434089613760271, 0.854305720860416, 0.0, -3.6996911817356, 7.14686555416383, 2.3760645377578, -7.14686555416384, -0.206405216948607, -0.213810890151539, 1.32362664397781, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.709964473504782, 0.928688908817229, 0.0, -4.10366099032214, 8.07933571642372, 3.43279068331103, -8.07933571642372, -0.108498101382652, -0.110226333929797, 0.670870307011106, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.909337372723623, 0.978331622806985, 0.0, -4.37867210006426, 8.7176022362643, 4.17035518682996, -8.7176022362643, -0.0344186823756909, -0.0345755677076721, 0.208316913234297, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.574802512555, -0.445228153040375, 0.0, 0.013893539459195, -0.0221507129339249, -0.075383583382601, 0.0221507129339249, -0.228496718022507, 2.24852738361788, 0.0614900439234058, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.41483693794416, -0.434929671538347, 0.0, 0.068639464023263, -0.108418786913548, -0.383489732936379, 0.108418786913548, -0.261545385603924, 2.11131199508644, 0.314850268913115, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.14839962483399, -0.414610121410141, 0.0, 0.149231679312996, -0.231122209548858, -0.883891250039245, 0.231122209548858, -0.315810151938772, 1.8788198981829, 0.734659570726249, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.809118210159438, -0.381555307510687, 0.0, 0.227840580495194, -0.339792485702094, -1.49213032912734, 0.339792485702095, -0.38314046327137, 1.5738139809415, 1.26428974863214, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.439605563476404, -0.332597476615797, 0.0, 0.270109305401755, -0.37227636722257, -2.10227846596434, 0.37227636722257, -0.453274945519463, 1.22547798561167, 1.83216916056258, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0857602196313236, -0.264799917570884, 0.0, 0.240621792607743, -0.264777985357334, -2.60215744871346, 0.264777985357335, -0.515278222344362, 0.86583835954657, 2.36153565610572, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.209301318923788, -0.176178447389749, 0.0, 0.108699491416823, 0.0374989908761685, -2.88951387476125, -0.0374989908761681, -0.559068728183086, 0.525945856649047, 2.78081438334442, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.410909636484647, -0.0663487086627733, 0.0, -0.146274604619892, 0.570589760425347, -2.88701417612982, -0.570589760425347, -0.576838649696785, 0.232277721874911, 3.03328878074971, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.497348594459722, 0.0630012618009101, 0.0, -0.530762575492454, 1.34428408155718, -2.55400145660461, -1.34428408155718, -0.564172964449196, 0.00382310818856439, 3.08476403209706, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.46260062661264, 0.207891371798766, 0.0, -1.03480604372631, 2.33801884825039, -1.89338271411393, -2.33801884825039, -0.520714362788498, -0.149777635622907, 2.92818875784024, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.316966896575281, 0.362127634396816, 0.0, -1.63194183439041, 3.50079702575631, -0.952669024203151, -3.50079702575631, -0.450281943184689, -0.228812587787408, 2.58461085859356, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0854851803254152, 0.517683231092373, 0.0, -2.28135883227609, 4.75524112329228, 0.181020428624648, -4.75524112329228, -0.360425267166922, -0.242743144250867, 2.10033840365144, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.19563426443634, 0.66534649634679, 0.0, -2.93205286090528, 6.00533000405727, 1.39136381723236, -6.00533000405727, -0.261471648860903, -0.208240583049547, 1.54068904367292, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.484066975284805, 0.795563054050135, 0.0, -3.52846413473942, 7.14686555416383, 2.54729158475398, -7.14686555416384, -0.16519316070982, -0.146302918055511, 0.981172549985435, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.737236351094013, 0.899371506740845, 0.0, -4.01687583673704, 8.07933571642372, 3.51957583689613, -8.07933571642372, -0.0832717482805745, -0.0788634073662592, 0.497299999840915, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.918169765663141, 0.96931354143754, 0.0, -4.35172379855132, 8.7176022362643, 4.1973034883429, -8.7176022362643, -0.0257719778661023, -0.0253717979082981, 0.15442031020842, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.74980162687822, -0.492178658264004, 0.0, 0.0257355260397764, -0.0221507129339245, -0.0635415968020199, 0.0221507129339245, -1.92544899459969, 3.16742927974191, 0.0378060707622434, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.640960312887139, -0.496336115439379, 0.0, 0.129274526571045, -0.108418786913548, -0.322854670388597, 0.108418786913548, -1.870705079619, 3.00800150794552, 0.193580143817552, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.461117137292952, -0.499871883013934, 0.0, 0.290715214251965, -0.231122209548858, -0.742407715100276, 0.231122209548858, -1.77563688862464, 2.73662590893153, 0.45169250084831, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.235374423216629, -0.496690223213571, 0.0, 0.471322309926348, -0.339792485702094, -1.24864859969618, 0.339792485702094, -1.64576295285987, 2.37782759929007, 0.777326289769834, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.00458193575326812, -0.479357377659115, 0.0, 0.62295541232214, -0.37227636722257, -1.74943235904395, 0.37227636722257, -1.48840984502213, 1.96318528692797, 1.12647694672181, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.224839350352644, -0.440375077892488, 0.0, 0.695415313067786, -0.264777985357334, -2.14736392825342, 0.264777985357335, -1.3120525226339, 1.52758825017375, 1.45194861518563, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.393893478520183, -0.373528464199744, 0.0, 0.644239304198086, 0.0374989908761683, -2.35397406197998, -0.0374989908761681, -1.12560306418587, 1.10523804986543, 1.7097347577819, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.486963618092849, -0.275116398803753, 0.0, 0.437887688082478, 0.570589760425347, -2.30285188342745, -0.570589760425346, -0.937714303054168, 0.725867083765072, 1.86496419534498, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.489406057044839, -0.144884814812675, 0.0, 0.0633130169377025, 1.34428408155718, -1.95992586417446, -1.34428408155718, -0.756173966233015, 0.411652724000851, 1.89661284723675, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.398762504028364, 0.0134776948733399, 0.0, -0.470884313259722, 2.33801884825039, -1.32946098364735, -2.33801884825039, -0.587451794545372, 0.175211595643668, 1.80034529690707, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.225164634256043, 0.192364680313379, 0.0, -1.13418764280754, 3.50079702575631, -0.454914832620284, -3.50079702575631, -0.436440372629649, 0.0189110580602266, 1.58910247542782, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.00996230907051332, 0.380809785972877, 0.0, -1.87686767234617, 4.75524112329228, 0.585511588554569, -4.75524112329228, -0.306403733494562, -0.0644437434078021, 1.2913560837916, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.276724147309117, 0.565518442197203, 0.0, -2.63534110375074, 6.00533000405727, 1.6880755743869, -6.00533000405727, -0.199119937264937, -0.0896743576231509, 0.947265529363839, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.540731244070235, 0.732249123137492, 0.0, -3.33950619246448, 7.14686555416383, 2.73624952702892, -7.14686555416384, -0.115178554051604, -0.0763393250156542, 0.603256665435555, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.767685053544421, 0.867370999045885, 0.0, -3.9211039109278, 8.07933571642372, 3.61534776270537, -8.07933571642372, -0.054374851074717, -0.0453110944267485, 0.305756148222433, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.927948793748652, 0.95939364372117, 0.0, -4.32198494776215, 8.7176022362643, 4.22704233913207, -8.7176022362643, -0.0161338194114482, -0.0153110305610715, 0.0949426086300869, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.103524917869607, -0.315516900792426, 0.0, 0.0382607127391614, -0.0221507129339241, -0.0510164101026357, 0.0221507129339242, -3.04134065514534, 3.46038247380737, 0.0127556973634743, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0392398630168339, -0.344481818707932, 0.0, 0.193407809764018, -0.108418786913548, -0.258721387195624, 0.108418786913548, -2.92229168262817, 3.30601336435293, 0.0653135774316062, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0652975887793478, -0.389533481732776, 0.0, 0.44036136339601, -0.231122209548858, -0.592761565956233, 0.231122209548858, -2.71812793948809, 3.04236383244151, 0.152400202560223, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.192667178236796, -0.439664416830773, 0.0, 0.72885123873083, -0.339792485702094, -0.991119670891702, 0.339792485702094, -2.44482034938392, 2.6918175879779, 0.262268432160871, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.321011497335488, -0.481199840912548, 0.0, 0.996158281220489, -0.37227636722257, -1.3762294901456, 0.37227636722257, -2.12311143144, 2.28329977501706, 0.380071208925114, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.427168356910194, -0.499889707108276, 0.0, 1.17644725096689, -0.264777985357335, -1.66633199035431, 0.264777985357335, -1.77622516496479, 1.84894651516287, 0.489884739387419, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.489999601193646, -0.483128483559974, 0.0, 1.21067603290018, 0.037498990876168, -1.78753733327789, -0.037498990876168, -1.42741532889303, 1.42054421125935, 0.576861300377708, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.493477960988574, -0.422001106555871, 0.0, 1.05575207502881, 0.570589760425346, -1.68498749648113, -0.570589760425346, -1.09762769659774, 1.02615084216503, 0.629235421452318, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.429108569992236, -0.312867749071205, 0.0, 0.691662631936989, 1.34428408155718, -1.33157624917517, -1.34428408155718, -0.803561926386341, 0.687321105465309, 0.639913617238181, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.297349583482718, -0.158260513599789, 0.0, 0.12557177203227, 2.33801884825039, -0.733004898355356, -2.33801884825039, -0.556364161927209, 0.417275092044279, 0.607433126323086, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.107830787350573, 0.0330428202380103, 0.0, -0.607716502382514, 3.50079702575631, 0.0715563078047385, -3.50079702575631, -0.361094538894077, 0.220220931305494, 0.536160194577776, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.121668845276794, 0.246792088396225, 0.0, -1.44904019070719, 4.75524112329228, 1.01333907019355, -4.75524112329228, -0.217008358658653, 0.0918851155392212, 0.435701120513638, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.367355972657788, 0.46479462607028, 0.0, -2.32151114549381, 6.00533000405727, 2.00190553264383, -6.00533000405727, -0.118580102694519, 0.0211414492820262, 0.319605612849982, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.602390611899946, 0.667008385072928, 0.0, -3.13964669345051, 7.14686555416383, 2.93610902604289, -7.14686555416384, -0.0571005564567451, -0.00751721671623756, 0.203537667407624, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.800293215703048, 0.833927066737317, 0.0, -3.81980661227291, 8.07933571642372, 3.71664506136025, -8.07933571642372, -0.0226024590660323, -0.0110313919682389, 0.103161550912661, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.93832856730251, 0.948938000703076, 0.0, -4.2905303724825, 8.7176022362643, 4.25849691441171, -8.7176022362643, -0.00582991532182764, -0.00477951807874033, 0.0320334580707969, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.315516900792429, 0.103524917869608, 0.0, 0.0510164101026365, -0.0221507129339239, -0.0382607127391619, 0.022150712933924, -3.46038247380738, 3.04134065514534, -0.0127556973634747, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.344481818707936, 0.0392398630168348, 0.0, 0.258721387195625, -0.108418786913548, -0.193407809764019, 0.108418786913548, -3.30601336435294, 2.92229168262817, -0.0653135774316068, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.389533481732779, -0.065297588779347, 0.0, 0.592761565956234, -0.231122209548858, -0.44036136339601, 0.231122209548858, -3.04236383244152, 2.71812793948809, -0.152400202560224, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.439664416830775, -0.192667178236796, 0.0, 0.991119670891703, -0.339792485702094, -0.728851238730831, 0.339792485702094, -2.69181758797791, 2.44482034938393, -0.262268432160872, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.481199840912549, -0.321011497335489, 0.0, 1.3762294901456, -0.37227636722257, -0.996158281220489, 0.37227636722257, -2.28329977501706, 2.12311143144, -0.380071208925116, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.499889707108277, -0.427168356910195, 0.0, 1.66633199035431, -0.264777985357335, -1.17644725096689, 0.264777985357334, -1.84894651516287, 1.77622516496479, -0.489884739387419, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.483128483559974, -0.489999601193647, 0.0, 1.78753733327789, 0.0374989908761678, -1.21067603290018, -0.037498990876168, -1.42054421125935, 1.42741532889303, -0.576861300377707, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.422001106555871, -0.493477960988575, 0.0, 1.68498749648113, 0.570589760425346, -1.05575207502881, -0.570589760425347, -1.02615084216503, 1.09762769659774, -0.629235421452317, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.312867749071204, -0.429108569992238, 0.0, 1.33157624917517, 1.34428408155718, -0.691662631936989, -1.34428408155718, -0.687321105465309, 0.803561926386342, -0.639913617238181, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.158260513599787, -0.29734958348272, 0.0, 0.733004898355355, 2.33801884825039, -0.125571772032271, -2.33801884825039, -0.417275092044279, 0.556364161927211, -0.607433126323084, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0330428202380122, -0.107830787350574, 0.0, -0.0715563078047379, 3.50079702575631, 0.607716502382514, -3.50079702575631, -0.220220931305493, 0.361094538894079, -0.536160194577776, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.246792088396228, 0.121668845276791, 0.0, -1.01333907019355, 4.75524112329228, 1.44904019070719, -4.75524112329228, -0.0918851155392193, 0.217008358658655, -0.435701120513642, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.464794626070283, 0.367355972657784, 0.0, -2.00190553264383, 6.00533000405727, 2.32151114549381, -6.00533000405727, -0.0211414492820239, 0.118580102694522, -0.319605612849987, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.667008385072933, 0.602390611899941, 0.0, -2.93610902604288, 7.14686555416383, 3.13964669345052, -7.14686555416384, 0.00751721671624139, 0.0571005564567489, -0.203537667407638, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.833927066737324, 0.800293215703041, 0.0, -3.71664506136024, 8.07933571642372, 3.81980661227292, -8.07933571642372, 0.0110313919682437, 0.0226024590660371, -0.10316155091268, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.948938000703084, 0.938328567302502, 0.0, -4.2584969144117, 8.7176022362643, 4.29053037248252, -8.7176022362643, 0.00477951807874644, 0.00582991532183352, -0.032033458070823, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.49217865826401, 0.749801626878218, 0.0, 0.0635415968020219, -0.0221507129339238, -0.0257355260397781, 0.0221507129339238, -3.16742927974193, 1.9254489945997, -0.0378060707622436, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.496336115439384, 0.640960312887137, 0.0, 0.322854670388599, -0.108418786913548, -0.129274526571046, 0.108418786913548, -3.00800150794554, 1.87070507961901, -0.193580143817553, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.499871883013938, 0.461117137292949, 0.0, 0.742407715100278, -0.231122209548858, -0.290715214251967, 0.231122209548858, -2.73662590893154, 1.77563688862465, -0.451692500848311, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.496690223213575, 0.235374423216626, 0.0, 1.24864859969618, -0.339792485702094, -0.471322309926349, 0.339792485702094, -2.37782759929008, 1.64576295285988, -0.777326289769835, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.479357377659118, -0.00458193575327065, 0.0, 1.74943235904395, -0.37227636722257, -0.622955412322141, 0.37227636722257, -1.96318528692798, 1.48840984502213, -1.12647694672181, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.440375077892491, -0.224839350352646, 0.0, 2.14736392825342, -0.264777985357335, -0.695415313067787, 0.264777985357334, -1.52758825017375, 1.31205252263391, -1.45194861518563, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.373528464199746, -0.393893478520185, 0.0, 2.35397406197998, 0.0374989908761676, -0.644239304198088, -0.0374989908761681, -1.10523804986544, 1.12560306418587, -1.70973475778189, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.275116398803754, -0.486963618092851, 0.0, 2.30285188342745, 0.570589760425346, -0.437887688082481, -0.570589760425347, -0.725867083765076, 0.937714303054172, -1.86496419534497, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.144884814812674, -0.489406057044841, 0.0, 1.95992586417446, 1.34428408155718, -0.0633130169377049, -1.34428408155718, -0.411652724000853, 0.756173966233018, -1.89661284723675, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0134776948733399, -0.398762504028365, 0.0, 1.32946098364735, 2.33801884825039, 0.470884313259718, -2.33801884825039, -0.17521159564367, 0.587451794545374, -1.80034529690706, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.192364680313381, -0.225164634256045, 0.0, 0.454914832620286, 3.50079702575631, 1.13418764280754, -3.50079702575631, -0.0189110580602267, 0.436440372629651, -1.58910247542782, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.380809785972879, 0.00996230907051043, 0.0, -0.585511588554565, 4.75524112329227, 1.87686767234617, -4.75524112329228, 0.0644437434078032, 0.306403733494565, -1.29135608379161, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.565518442197207, 0.276724147309113, 0.0, -1.6880755743869, 6.00533000405727, 2.63534110375074, -6.00533000405727, 0.0896743576231526, 0.19911993726494, -0.947265529363845, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.732249123137497, 0.54073124407023, 0.0, -2.73624952702891, 7.14686555416383, 3.33950619246448, -7.14686555416384, 0.076339325015658, 0.115178554051608, -0.603256665435569, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.867370999045892, 0.767685053544415, 0.0, -3.61534776270536, 8.07933571642372, 3.92110391092781, -8.07933571642372, 0.0453110944267534, 0.0543748510747217, -0.305756148222453, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.959393643721178, 0.927948793748645, 0.0, -4.22704233913205, 8.7176022362643, 4.32198494776217, -8.7176022362643, 0.0153110305610776, 0.0161338194114541, -0.0949426086301129, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.445228153040382, 1.57480251255499, 0.0, 0.0753835833826041, -0.022150712933924, -0.0138935394591976, 0.022150712933924, -2.2485273836179, 0.228496718022522, -0.0614900439234065, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.434929671538354, 1.41483693794416, 0.0, 0.383489732936381, -0.108418786913548, -0.0686394640232652, 0.108418786913548, -2.11131199508645, 0.261545385603937, -0.314850268913116, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.414610121410147, 1.14839962483399, 0.0, 0.883891250039248, -0.231122209548858, -0.149231679312998, 0.231122209548858, -1.87881989818292, 0.315810151938785, -0.73465957072625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.381555307510692, 0.809118210159434, 0.0, 1.49213032912734, -0.339792485702094, -0.227840580495196, 0.339792485702094, -1.57381398094151, 0.383140463271384, -1.26428974863214, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.332597476615801, 0.439605563476401, 0.0, 2.10227846596434, -0.37227636722257, -0.270109305401757, 0.372276367222569, -1.22547798561168, 0.453274945519475, -1.83216916056258, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.264799917570887, 0.0857602196313197, 0.0, 2.60215744871346, -0.264777985357335, -0.240621792607745, 0.264777985357334, -0.865838359546581, 0.515278222344373, -2.36153565610572, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.176178447389752, -0.209301318923792, 0.0, 2.88951387476125, 0.0374989908761676, -0.108699491416826, -0.0374989908761684, -0.525945856649055, 0.559068728183094, -2.78081438334442, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0663487086627744, -0.41090963648465, 0.0, 2.88701417612983, 0.570589760425346, 0.146274604619891, -0.570589760425347, -0.232277721874916, 0.576838649696791, -3.03328878074972, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0630012618009095, -0.497348594459724, 0.0, 2.55400145660461, 1.34428408155718, 0.53076257549245, -1.34428408155718, -0.00382310818856825, 0.564172964449201, -3.08476403209706, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.207891371798765, -0.462600626612642, 0.0, 1.89338271411393, 2.33801884825039, 1.0348060437263, -2.33801884825039, 0.149777635622904, 0.520714362788502, -2.92818875784024, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.362127634396817, -0.316966896575284, 0.0, 0.952669024203154, 3.50079702575631, 1.6319418343904, -3.50079702575631, 0.228812587787407, 0.450281943184693, -2.58461085859356, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.517683231092376, -0.0854851803254181, 0.0, -0.181020428624643, 4.75524112329227, 2.28135883227609, -4.75524112329228, 0.242743144250868, 0.360425267166925, -2.10033840365145, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.665346496346793, 0.195634264436337, 0.0, -1.39136381723236, 6.00533000405727, 2.93205286090528, -6.00533000405727, 0.208240583049549, 0.261471648860906, -1.54068904367292, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.79556305405014, 0.4840669752848, 0.0, -2.54729158475397, 7.14686555416383, 3.52846413473942, -7.14686555416384, 0.146302918055514, 0.165193160709824, -0.981172549985449, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.899371506740851, 0.737236351094007, 0.0, -3.51957583689611, 8.07933571642372, 4.01687583673705, -8.07933571642372, 0.078863407366264, 0.0832717482805791, -0.497299999840934, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.969313541437547, 0.918169765663133, 0.0, -4.19730348834288, 8.7176022362643, 4.35172379855133, -8.7176022362643, 0.0253717979083042, 0.0257719778661082, -0.154420310208446, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.223064261594399, 2.50200831679556, 0.0, 0.0861143754750122, -0.0221507129339241, -0.00316274736679134, 0.022150712933924, -0.876993796485361, -1.8480787819046, -0.0829516281082203, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.207219864923596, 2.28816218534666, 0.0, 0.4384350958012, -0.108418786913548, -0.0136941011584482, 0.108418786913548, -0.782567134454436, -1.71281491581582, -0.424740994642752, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.178207445737255, 1.93033232635119, 0.0, 1.01209865743646, -0.231122209548858, -0.0210242719157889, 0.231122209548857, -0.624081845319934, -1.48445792676851, -0.991074385520669, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.135317444779781, 1.47093131573676, 0.0, 1.71276491598879, -0.339792485702094, -0.00720599363374583, 0.339792485702094, -0.419525149902363, -1.18672361061418, -1.70555892235504, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0778756756605916, 0.96384580181233, 0.0, 2.42201520846215, -0.37227636722257, 0.0496274370960523, 0.372276367222569, -0.191794145365329, -0.849927332107594, -2.4716426455582, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.00554955165183801, 0.467364960606221, 0.0, 3.01427535476086, -0.264777985357335, 0.171496113439653, 0.264777985357334, 0.0342671132664182, -0.507181625524477, -3.18577146820051, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0813319799523771, 0.0366483865434912, 0.0, 3.37480123335241, 0.0374989908761678, 0.376587867174335, -0.0374989908761688, 0.235024703502485, -0.190341110093601, -3.75138910052674, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.181501522425233, -0.283319904290709, 0.0, 3.41636151735146, 0.570589760425346, 0.67562194584152, -0.570589760425347, 0.39101247249504, 0.0738089542209006, -4.09198346319298, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.292568001732667, -0.463358159987532, 0.0, 3.09233188166988, 1.34428408155718, 1.06909300055772, -1.34428408155718, 0.489300806147138, 0.266625355573059, -4.16142488222759, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.410960329802126, -0.493550373931319, 0.0, 2.40438876912419, 2.33801884825039, 1.54581209873657, -2.33801884825039, 0.524965804310949, 0.379544899422495, -3.95020086786076, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.53202049253876, -0.384095245704862, 0.0, 1.4037163807133, 3.50079702575631, 2.08298919090055, -3.50079702575631, 0.501469954941716, 0.414645783301905, -3.48670557161386, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.650246741784751, -0.163442736350579, 0.0, 0.185515246018171, 4.75524112329227, 2.64789450691891, -4.75524112329228, 0.429912609610457, 0.383776868524871, -2.83340975293707, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.759667169858657, 0.12601346117287, 0.0, -1.12249404983883, 6.00533000405727, 3.2009226282988, -6.00533000405727, 0.32726112680981, 0.306392581875975, -2.07842857845997, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.854305720860421, 0.434089613760266, 0.0, -2.37606453775779, 7.14686555416383, 3.69969118173561, -7.14686555416384, 0.213810890151543, 0.206405216948611, -1.32362664397782, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.928688908817235, 0.709964473504776, 0.0, -3.43279068331102, 8.07933571642372, 4.10366099032214, -8.07933571642372, 0.110226333929801, 0.108498101382656, -0.670870307011122, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.978331622806993, 0.909337372723616, 0.0, -4.17035518682995, 8.7176022362643, 4.37867210006427, -8.7176022362643, 0.034575567707678, 0.0344186823756971, -0.208316913234323, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.104723374422943, 3.43634820617752, 0.0, 0.0953461473823571, -0.0221507129339245, 0.00606902454055169, 0.0221507129339241, 0.712921364931282, -4.04454619668586, -0.101415171922909, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.119592032880051, 3.17040134684957, 0.0, 0.485704957426154, -0.108418786913548, 0.0335757604665033, 0.108418786913547, 0.753295822655772, -3.80410513662529, -0.519280717892656, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.146250101300637, 2.72411298801409, 0.0, 1.12239634391949, -0.231122209548858, 0.0892734145672397, 0.231122209548858, 0.818613910418746, -3.39647679713219, -1.21166975848673, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.184488706545256, 2.14825961633646, 0.0, 1.90257832055723, -0.339792485702094, 0.182607410934692, 0.339792485702093, 0.897415453347415, -2.86118636313862, -2.08518573149192, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.233880758616499, 1.50747074284047, 0.0, 2.69708685757418, -0.37227636722257, 0.324699086208085, 0.372276367222569, 0.975343664216995, -2.24893364844097, -3.02178594378227, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.293682102755422, 0.871858898790315, 0.0, 3.36882313416045, -0.264777985357335, 0.526043892839239, 0.264777985357334, 1.03722436026503, -1.61540115629993, -3.89486702699969, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.362730670060131, 0.308101310624492, 0.0, 3.79229718010557, 0.0374989908761679, 0.794083813927493, -0.0374989908761691, 1.06927500779899, -1.01464564836336, -4.58638099403306, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.439368049859929, -0.128914285025031, 0.0, 3.87176256061411, 0.570589760425346, 1.13102298910417, -0.570589760425348, 1.06115114663011, -0.492868811745151, -5.00278554971828, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.521402402007351, -0.402779357895686, 0.0, 3.5554611317932, 1.34428408155718, 1.53222225068104, -1.34428408155718, 1.00754840878835, -0.0833666488853149, -5.08768338247424, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.606126656951535, -0.499711897604176, 0.0, 2.84401068170082, 2.33801884825039, 1.98543401131319, -2.33801884825039, 0.909136934936908, 0.196701619618801, -4.82944469301401, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.690399016274197, -0.429627645216381, 0.0, 1.79175542562764, 3.50079702575631, 2.47102823581489, -3.50079702575631, 0.772694602901069, 0.347332058589507, -4.26278366144252, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.77078458986762, -0.224017564097306, 0.0, 0.500848328149266, 4.75524112329227, 2.96322758905, -4.75524112329228, 0.610413478029468, 0.384388675935457, -3.46407591719926, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.843748655901883, 0.069055002847608, 0.0, -0.891183598198101, 6.00533000405727, 3.43223307993954, -6.00533000405727, 0.438465640570999, 0.336228012483274, -2.54104948174143, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.90588461174833, 0.392135940164224, 0.0, -2.22875676880424, 7.14686555416384, 3.84699895068915, -7.14686555416384, 0.275014998331318, 0.238733673252787, -1.61824218188491, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.954154075284698, 0.68674550577459, 0.0, -3.358128837667, 8.07933571642372, 4.17832283596616, -8.07933571642372, 0.137937699134541, 0.129470870375567, -0.820193998299162, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.986112016384796, 0.901760884363987, 0.0, -4.14717138355472, 8.7176022362643, 4.4018559033395, -8.7176022362643, 0.0425598665036542, 0.0417912655171531, -0.254684519784782, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.458690107858407, 4.27645762035823, 0.0, 0.102745276341436, -0.0221507129339245, 0.0134681534996294, 0.022150712933924, 2.26096424598291, -6.07873175848273, -0.116213429841066, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.468939383827873, 3.9649154537297, 0.0, 0.523591054001244, -0.108418786913548, 0.0714618570415923, 0.108418786913547, 2.24650463143154, -5.74248070133336, -0.595052911042836, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.48714485253882, 3.44116329026025, 0.0, 1.21079831207544, -0.231122209548858, 0.177675382723189, 0.231122209548857, 2.21745371514128, -5.17147215286271, -1.38847369479863, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.512899826889179, 2.76321946370276, 0.0, 2.05471096341926, -0.339792485702094, 0.334740053796725, 0.339792485702093, 2.16919754140156, -4.41951717821514, -2.38945101721599, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.545591631214159, 2.00502080213157, 0.0, 2.91755272536142, -0.37227636722257, 0.545164953995327, 0.372276367222569, 2.09631546870341, -3.55574463962082, -3.46271767935675, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.584390081145203, 1.24693304436978, 0.0, 3.65298794761795, -0.264777985357334, 0.810208706296745, 0.264777985357333, 1.99371446262405, -2.65625742584863, -4.4631966539147, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.6282378459376, 0.565637101791921, 0.0, 4.1269140208295, 0.0374989908761679, 1.12870065465142, -0.0374989908761694, 1.85782515072136, -1.79522440657568, -5.25561467548092, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.67585087632583, 0.0246461502196345, 0.0, 4.2367597768602, 0.570589760425346, 1.49602020535027, -0.570589760425348, 1.68767723480658, -1.03647250870038, -5.73277998221047, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.725733903864435, -0.333302235191041, 0.0, 3.92665239180018, 1.34428408155718, 1.90341351068801, -1.34428408155718, 1.48568853520716, -0.42665239615169, -5.83006590248819, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.776214330064236, -0.490985526117993, 0.0, 3.19636115754, 2.33801884825039, 2.33778448715237, -2.33801884825039, 1.2580386526485, 0.00916120353373327, -5.53414564469236, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.825495658384399, -0.457962599165095, 0.0, 2.10276299419581, 3.50079702575631, 2.78203580438306, -3.50079702575631, 1.01455293317276, 0.268905324376734, -4.88479879857886, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.871729125889335, -0.268232165241991, 0.0, 0.753583140400828, 4.75524112329227, 3.21596240130156, -4.75524112329228, 0.768087948928214, 0.37187334220311, -3.96954554170239, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.913099677316599, 0.0253645900460397, 0.0, -0.705791684440886, 6.00533000405727, 3.61762499369675, -6.00533000405727, 0.533477270598864, 0.354257816671695, -2.91183330925586, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.947920219345662, 0.359206577500583, 0.0, -2.11069176567149, 7.14686555416384, 3.96506395382191, -7.14686555416384, 0.326156850862342, 0.262556790982735, -1.85437218815042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.974726426980656, 0.668298242297541, 0.0, -3.29828847009861, 8.07933571642372, 4.23816320353455, -8.07933571642372, 0.160635139049407, 0.145793045633705, -0.939874733435934, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.992362629047073, 0.895703182760612, 0.0, -4.1285899073314, 8.7176022362643, 4.42043737956281, -8.7176022362643, 0.0490033902248348, 0.047656056061625, -0.291847472231404, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.76209838687494, 4.92803860051349, 0.0, 0.10804449160846, -0.0221507129339246, 0.0187673687666509, 0.022150712933924, 3.51936178417124, -7.68530199780978, -0.126811860375111, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.766940864431549, 4.58174290458662, 0.0, 0.55072486697963, -0.108418786913548, 0.0985956700199766, 0.108418786913548, 3.45933504349581, -7.27413708365087, -0.649320536999606, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.775502266411406, 3.99892123083008, 0.0, 1.27411131308916, -0.231122209548858, 0.240988383736909, 0.231122209548857, 3.35192648345628, -6.57534544787496, -1.51509969682607, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.787528595620862, 3.24307284703175, 0.0, 2.1636675214311, -0.339792485702094, 0.443696611808559, 0.339792485702093, 3.19830846219392, -5.65385271360481, -2.60736413323966, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.802655449095618, 2.39518161842775, 0.0, 3.07544916140095, -0.37227636722257, 0.703061390034857, 0.372276367222569, 3.00060392076251, -4.59313009009464, -3.77851055143581, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.820415904843632, 1.54338145073493, 0.0, 3.8565052164955, -0.264777985357334, 1.01372597517429, 0.264777985357333, 2.76221451638607, -3.48518006227737, -4.8702311916698, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.840250066009648, 0.771940260190849, 0.0, 4.36656475279724, 0.037498990876168, 1.36835138661917, -0.0374989908761695, 2.48815274926438, -2.41984294344559, -5.73491613941641, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.861518091660284, 0.150924807256511, 0.0, 4.49816876587081, 0.570589760425346, 1.75742919436087, -0.570589760425348, 2.18529032251236, -1.47469703810859, -6.25559796023168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.883517187719877, -0.272100912372046, 0.0, 4.19249752071911, 1.34428408155718, 2.16925863960695, -1.34428408155718, 1.86245642573704, -0.706838325645123, -6.36175616032606, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.905502643519248, -0.477263285077033, 0.0, 3.44871262096711, 2.33801884825039, 2.59013595057948, -2.33801884825039, 1.53033752059948, -0.147571592003197, -6.03884857154659, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.926712592134244, -0.473794471259691, 0.0, 2.32550489592921, 3.50079702575631, 3.00477770611646, -3.50079702575631, 1.20115492857785, 0.199352134816081, -5.33028260204566, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.946395732540211, -0.297527730364873, 0.0, 0.934590416121861, 4.75524112329227, 3.39696967702259, -4.75524112329227, 0.888125597107084, 0.355797865798, -4.33156009314445, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.963840827011164, -0.00485391068824725, 0.0, -0.5730150204311, 6.00533000405727, 3.75040165770654, -6.00533000405727, 0.604741069253706, 0.363953668445704, -3.17738663727543, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.978406430151058, 0.336003290921105, 0.0, -2.02613426294889, 7.14686555416383, 4.0496214565445, -7.14686555416384, 0.363925985893654, 0.278477153336297, -2.02348719359561, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.989549036900307, 0.655175219483706, 0.0, -3.25543112957159, 8.07933571642372, 4.28102054406157, -8.07933571642372, 0.177157336074874, 0.157216481341724, -1.02558941448998, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.996847344852233, 0.891372751914243, 0.0, -4.11528195675628, 8.7176022362643, 4.43374533013793, -8.7176022362643, 0.053642390988785, 0.0518322019492036, -0.318463373381649, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.952917925769804, 5.31655770218779, 0.0, 0.111053494146389, -0.0221507129339247, 0.0217763713045797, 0.022150712933924, 4.28951996363527, -8.65315974005325, -0.132829865450969, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.953910725785564, 4.9497486562205, 0.0, 0.5661319995458, -0.108418786913548, 0.114002802586147, 0.108418786913548, 4.20128051783772, -8.19711844827265, -0.680134802131946, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.955662170838858, 4.3320522503576, 0.0, 1.31006172671357, -0.231122209548858, 0.276938797361323, 0.231122209548857, 4.0453773118387, -7.42176739135745, -1.5870005240749, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.958114323361906, 3.53018929772945, 0.0, 2.22553527789346, -0.339792485702094, 0.505564368270916, 0.339792485702093, 3.8265963683737, -6.39867134274125, -2.73109964616437, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.961185370308181, 2.62928673065267, 0.0, 3.16510597903011, -0.37227636722257, 0.792718207664017, 0.372276367222569, 3.55176887541255, -5.21987023575704, -3.95782418669413, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.964772503729386, 1.72204722474024, 0.0, 3.97206647372091, -0.264777985357334, 1.1292872323997, 0.264777985357333, 3.22959348816288, -3.98686820917373, -5.10135370612061, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.968755213962431, 0.897203686455042, 0.0, 4.50264332752421, 0.0374989908761682, 1.50442996134613, -0.0374989908761698, 2.87042647143414, -2.79887494392676, -6.00707328887034, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.97299917733554, 0.228683857944151, 0.0, 4.64660212283701, 0.570589760425346, 1.90586255132708, -0.570589760425348, 2.48601154455051, -1.74169622515912, -6.55246467416409, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.977360656150228, -0.233098651787218, 0.0, 4.34344980842698, 1.34428408155718, 2.32021092731481, -1.34428408155718, 2.08914562318257, -0.878686315245129, -6.66366073574179, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.981691287935534, -0.466695414241419, 0.0, 3.59200293012439, 2.33801884825039, 2.73342625973676, -2.33801884825039, 1.69328268026766, -0.244895978090713, -6.32542918986115, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.98584311584047, -0.481126647425163, 0.0, 2.45198229189199, 3.50079702575631, 3.13125510207924, -3.50079702575631, 1.31208379982483, 0.154885963440799, -5.58323739397122, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.989673691872321, -0.313281613098645, 0.0, 1.03737004000652, 4.75524112329227, 3.49974930090726, -4.75524112329228, 0.958927633037532, 0.344027671933433, -4.53711934091378, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.993051069990859, -0.0216142088802527, 0.0, -0.497621721829015, 6.00533000405727, 3.82579495630862, -6.00533000405727, 0.64640125702109, 0.368264021850019, -3.3281732344796, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.995858497780731, 0.322969366615965, 0.0, -1.97812078784501, 7.14686555416383, 4.09763493164839, -7.14686555416384, 0.38579619684786, 0.287092934316903, -2.11951414380338, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.997998609374344, 0.64775669157269, 0.0, -3.23109585728755, 8.07933571642372, 4.30535581634562, -8.07933571642372, 0.186637953111932, 0.16360396468972, -1.07425995905807, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.999396852938816, 0.88891683989424, 0.0, -4.10772543092417, 8.71760223626429, 4.44130185597005, -8.71760223626429, 0.0562854951419499, 0.0541945179026236, -0.333576425045879, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_C1[256][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.944457527168746, 0.00514858621726442, 0.00488548273521769, -0.000116703703321661, -0.000116801798056398, 0.0438280227926876, -0.0219232173855719, 0.0462464398730884, -0.023113505963607, 0.000704170063553028, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.836506957584515, 0.00504174179774673, 0.0231482477455682, -0.000597767407636132, -0.00055954763579763, 0.217223276550646, -0.105024791238757, 0.0428819894250814, -0.0221490732349435, 0.00352896641357603, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.664491568869481, 0.00485307032491111, 0.0464737242451543, -0.00139564746783552, -0.00114714692399552, 0.477272055281738, -0.215314762327754, 0.0373458359671772, -0.0204977726745187, 0.00791907470564198, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.460816051273388, 0.00458852587127692, 0.0624162811176242, -0.002403818636627, -0.00159257843926876, 0.750107304099134, -0.298920426814302, 0.0304129460472809, -0.0182932789497159, 0.0128689944312099, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.261476137404333, 0.00425657182322601, 0.0602834699760322, -0.00348720532919496, -0.00161605286201824, 0.957860585731409, -0.303326479473602, 0.0229892348116584, -0.0157092153964244, 0.01727295331458, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0976459210877976, 0.0038679310889711, 0.0361547153655965, -0.0045002733092245, -0.00104254244770809, 1.04036373403136, -0.195680932101526, 0.0159375674133049, -0.0129398869436279, 0.0201937658150552, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0110234938166815, 0.00343529570720495, -0.00406487485038623, -0.00530647356507686, 0.000130868182858936, 0.971439856102483, 0.0245634199936891, 0.00992842799300533, -0.0101794740512225, 0.021076448304126, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0597329351899336, 0.00297296714460764, -0.0447613065796832, -0.00579661297008271, 0.00171959499141955, 0.765239516159272, 0.322760911556079, 0.00534682064363575, -0.00760198999705405, 0.0198530342417398, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0577943079543173, 0.00249642751844959, -0.0641369364600141, -0.00590370307003853, 0.00339437973348305, 0.470989675788124, 0.637111123498951, 0.0022716204491198, -0.00534445777635079, 0.0169161782725923, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0242830823857433, 0.00202184807745999, -0.0402992734044388, -0.00561225280778299, 0.00477083755512984, 0.157930184315888, 0.895466598741649, 0.000524042979105441, -0.00349537481238923, 0.0129764717411214, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0184598676555865, 0.00156554666606744, 0.0417918978877754, -0.00496067683973492, 0.00551976331236913, -0.10493823280857, 1.03603688494307, -0.000235533790361116, -0.00208985027542183, 0.00885033324921514, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0514829315108775, 0.00114341139217865, 0.184591941443299, -0.00403639947153573, 0.00546543198496308, -0.268223528783508, 1.0258391181159, -0.000393658008003407, -0.00111191380219875, 0.00524266561803052, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0641044120875669, 0.000770312827581186, 0.375276036802065, -0.00296422809372522, 0.00464211785305463, -0.314933010920577, 0.87130643975984, -0.000285016072166869, -0.000503520951589689, 0.00258645670795214, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0557201164551587, 0.000459531213393295, 0.587095255794177, -0.00188951323974101, 0.00329102426236882, -0.26305785808652, 0.617711726409709, -0.000132661353669149, -0.00017885366587389, 0.000981232210996635, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0342357250065591, 0.000222228332427507, 0.784659028034516, -0.00095837054513237, 0.00179725600915337, -0.157455353388175, 0.337337565361872, -3.656075389874e-05, -4.17682164575439e-05, 0.000240250159136035, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0118767662453118, 6.70028652081933e-05, 0.931872025471897, -0.000297729598223551, 0.000584280537024751, -0.0537844333556042, 0.109667055135382, -3.65097205493048e-06, -3.79340039008413e-06, 2.24770714492006e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.830250358213063, 0.0242468794749492, 0.00488548273521769, -0.000568785697893745, -0.000610783777359181, 0.0413849759935334, -0.021429235406269, 0.228353198761629, -0.11011138915415, 0.00359929885727953, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.732508409588015, 0.0237988605617583, 0.0231482477455682, -0.00291796110825823, -0.00292600477297518, 0.205034457720279, -0.102658334101579, 0.211657364559314, -0.105683019136688, 0.0180379789445651, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.577073477629818, 0.0230019385717767, 0.0464737242451543, -0.00683162495789348, -0.00599869816290112, 0.45014950410573, -0.210463211088848, 0.18419206623225, -0.0980747799467943, 0.0404776033717071, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.393703593560885, 0.0218721155295207, 0.0624162811176242, -0.0118119694931815, -0.00832796319118648, 0.706605798251292, -0.292185042062384, 0.149813261563563, -0.0878647264117395, 0.0657786511356068, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.215367671795773, 0.0204339243117709, 0.0602834699760322, -0.0172177979632383, -0.00845071640934604, 0.900575060126324, -0.296491815926274, 0.113026451727201, -0.0758153191919517, 0.0882890715537089, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.07046791037423, 0.0187212613150366, 0.0361547153655965, -0.0223432908614505, -0.00545169701892258, 0.975181988261571, -0.191271777530312, 0.078119681931203, -0.0627973209740238, 0.103218529137071, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0233342497877707, 0.0167782038661164, -0.00406487485038623, -0.0265070976612463, 0.000684340176203939, 0.905986651084015, 0.0240099480003442, 0.0484199499969471, -0.0497031482429866, 0.107730277418763, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0621474659378611, 0.0146594139647221, -0.0447613065796832, -0.0291422262445891, 0.00899216229429033, 0.706961251835106, 0.315488344253208, 0.0258304399859391, -0.0373575254115443, 0.101476911840412, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0550940524835676, 0.0124298528656771, -0.0641369364600142, -0.029875245741481, 0.0177500013690625, 0.425411947151886, 0.622755501863372, 0.0107293158344431, -0.0264358339796512, 0.0864654495802732, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0202084788242813, 0.0101635950703668, -0.0402992734044387, -0.0285832863904734, 0.0249478195676805, 0.127549678372541, 0.875289616729099, 0.00221319203009445, -0.0174008744177471, 0.0663280112671594, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0216443848527333, 0.00794162670782046, 0.0417918978877754, -0.0254191292946671, 0.0288641265987394, -0.120867090678355, 1.0126925216567, -0.00141861813870628, -0.0104673631659765, 0.0452376435739326, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.052967720700787, 0.00584863868315386, 0.184591941443299, -0.0207984081999753, 0.0285800154469052, -0.273016245216284, 1.00272453465395, -0.00209531187016184, -0.00560027642092488, 0.0267973907792459, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.06414775542816, 0.00396896507947025, 0.375276036802065, -0.0153482611614516, 0.0242747142973649, -0.313182950633712, 0.851673843315529, -0.00148213322187403, -0.0025483993943647, 0.0132204294888131, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0550784590653912, 0.00238195322159173, 0.587095255794177, -0.00982289652964033, 0.0172095315637295, -0.259158718474994, 0.603793219108349, -0.0006834345556921, -0.000908845082281909, 0.0050154758893696, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0336228297432636, 0.00115716576877001, 0.784659028034516, -0.0049973885802983, 0.00939826982477632, -0.15440410122011, 0.329736551546249, -0.000187479811570107, -0.000212891331833165, 0.0012280160262369, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0116244492426242, 0.000349926702994524, 0.931872025471897, -0.00155557313660287, 0.00305533886789433, -0.0526190021762828, 0.107195996804513, -1.86780909011836e-05, -1.93731166426014e-05, 0.000114889430507081, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.649634947999193, 0.048083596912069, 0.00488548273521769, -0.00120180524410511, -0.00148074543852675, 0.0372456280359796, -0.0205592737451016, 0.498233131241414, -0.223212628857185, 0.00837166636104464, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.568369539155746, 0.0474246637601491, 0.0231482477455682, -0.00618646473043204, -0.00709362033062488, 0.184386118656678, -0.0984907185439293, 0.461453200762145, -0.214965788105641, 0.0419548216303404, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.439663999248489, 0.0462271397153462, 0.0464737242451543, -0.0145702415503211, -0.0145428632374959, 0.404218223692873, -0.201919046014253, 0.400980213647325, -0.20067865012411, 0.0941475003769922, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.288962425232651, 0.0444747374943446, 0.0624162811176242, -0.0253991997377269, -0.0201897855913709, 0.632976070535766, -0.2803232196622, 0.325351837719271, -0.181264756204036, 0.152995609095678, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.144308721917261, 0.0421540427313822, 0.0602834699760322, -0.0373970018979949, -0.0204873807053736, 0.803690382253002, -0.284455151630246, 0.244535468061623, -0.157985504067473, 0.205352953361787, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.029609372367282, 0.0392636376436862, 0.0361547153655965, -0.0490882380311127, -0.0132167483686344, 0.865067848766635, -0.1835067261806, 0.168003324734552, -0.132364802099075, 0.24007761580167, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0406789045874784, 0.0358242715945952, -0.00406487485038623, -0.0589606824027711, 0.0016590709050855, 0.795598950477672, 0.0230352172714626, 0.103083617153666, -0.106068228328477, 0.250571562766631, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0640925142677473, 0.0318884078850177, -0.0447613065796832, -0.0656568511908494, 0.0218000277566873, 0.608926028143437, 0.302680478790811, 0.0539378512028033, -0.0807488822188179, 0.236026760478341, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0493861710761866, 0.027547493251767, -0.0641369364600142, -0.0681726562917988, 0.0430319771666594, 0.349063445223783, 0.597473526065775, 0.0213432046203234, -0.0578752445590023, 0.201111362058694, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0128426746631649, 0.0229353801338152, -0.0402992734044388, -0.0660314821658298, 0.0604819109403295, 0.0770525108667772, 0.83975552535645, 0.00324130153667848, -0.038566573148896, 0.154273374548279, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0271191561793165, 0.0182266667161879, 0.0417918978877754, -0.0593983645867084, 0.0699763572355218, -0.146869165274632, 0.971580291019921, -0.00417908280547379, -0.0234667098341596, 0.10521895346225, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0553907450067316, 0.0136293170812678, 0.184591941443299, -0.0491036326094608, 0.0692875761845053, -0.280242106724246, 0.962016973916355, -0.00521418556361777, -0.0126851054315275, 0.0623284766966941, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0640891402741986, 0.00937172742523833, 0.375276036802065, -0.0365587687759207, 0.0588500772282787, -0.309501620389615, 0.817098480384616, -0.00355095335614639, -0.00582372645189895, 0.0307496068591855, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0538863419584481, 0.00568529918240033, 0.587095255794177, -0.0235671938644917, 0.0417216964608279, -0.252064520256512, 0.57928105421125, -0.0016115201498046, -0.00209198834203488, 0.0116655750057396, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0325264372251474, 0.00278441674293191, 0.784659028034516, -0.0120549207293875, 0.0227845690880207, -0.148974815018384, 0.316350252283004, -0.000438532153258661, -0.000492697446190446, 0.00285626197360056, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01117839497969, 0.000846433666179758, 0.931872025471897, -0.00376557907095615, 0.00740716970471855, -0.0505613299620284, 0.102844165967689, -4.3511221495568e-05, -4.4992686299275e-05, 0.000267223150606122, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.438528651797883, 0.0631607800095187, 0.00488548273521769, -0.00173749492224223, -0.00269544576604344, 0.0318141613831165, -0.0193445734175849, 0.774690046820589, -0.303640431332499, 0.014338822692045, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.377232141524964, 0.062870763922446, 0.0231482477455682, -0.00900528255031362, -0.0129127319177338, 0.157300378804215, -0.0926716069568205, 0.716604289129015, -0.294425579004025, 0.0718593793026847, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.280855356413509, 0.0622648345287289, 0.0464737242451543, -0.0214598566066009, -0.0264728143810186, 0.344001383630898, -0.18998909487073, 0.621179961604863, -0.27810745006005, 0.161253955495247, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.169524405957061, 0.0612103671142948, 0.0624162811176242, -0.038007571656316, -0.0367520781585067, 0.536532232528894, -0.263760927095064, 0.502009556116745, -0.255220084945871, 0.262047819021138, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0652300155823362, 0.0595416659148374, 0.0602834699760322, -0.0570320105783076, -0.0372937995571774, 0.676953913273335, -0.267648732778443, 0.374940527202253, -0.226699480056634, 0.351724431021767, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0136161722031533, 0.0570867561258867, 0.0361547153655965, -0.0764465980728866, -0.0240588473239148, 0.721303686328466, -0.172664627225319, 0.254997575583011, -0.193956626859299, 0.411200138281613, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0564270407162567, 0.0536997788701999, -0.00406487485038623, -0.0938533940447371, 0.00302005701339736, 0.651889264144353, 0.0216742311631508, 0.153751538815196, -0.158863521136833, 0.429173960741916, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0623892762746948, 0.049295536522474, -0.0447613065796832, -0.106824781713543, 0.0396832507381268, 0.481858804834925, 0.284797255809372, 0.0776960779464603, -0.123617475592984, 0.404261914309547, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0396808046413149, 0.0438814341666031, -0.0641369364600142, -0.11328195849148, 0.078332411257507, 0.250824591203472, 0.562173091974928, 0.0279174382920482, -0.0904887855804349, 0.344459518278686, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00230936794222663, 0.037581220437419, -0.0402992734044388, -0.111903033885987, 0.110097054175993, 0.0129610870048885, 0.790140382120786, 0.000992485704915246, -0.0614969043416747, 0.264236350130325, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0344061311519647, 0.0306450597623545, 0.0417918978877754, -0.102466477608131, 0.12738008230591, -0.178799017678001, 0.914176565949533, -0.00926116608868659, -0.0380899945697615, 0.180216918887042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0583364816341323, 0.0234418370512756, 0.184591941443299, -0.0860331067589911, 0.126126273299049, -0.287739124061877, 0.905178276801811, -0.00974545690748859, -0.0209120906850653, 0.106754968183855, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0637107923556892, 0.0164321595973657, 0.375276036802065, -0.0648954694605362, 0.107126577849954, -0.303082624416618, 0.768821979762941, -0.00632984789658062, -0.00972691616508273, 0.0526673115708041, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0520875397776036, 0.0101238881381726, 0.587095255794177, -0.0422727587523179, 0.0759472676069035, -0.241673943896439, 0.545055483065175, -0.00281257455809501, -0.00353072070867228, 0.0199805635334924, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0309590745070317, 0.00501554129296018, 0.784659028034516, -0.0217903413886998, 0.0414754411403332, -0.141275280762533, 0.297659380230692, -0.000757015828309587, -0.000837975603052002, 0.00489214837706209, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0105519633412777, 0.00153594911980159, 0.931872025471897, -0.00684022765993431, 0.0134834953392219, -0.0476771526897702, 0.0967678403331852, -7.46867036681698e-05, -7.69010193361758e-05, 0.000457694467326075, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.236096823481758, 0.0583916354882495, 0.00488548273521769, -0.00183691931427642, -0.004211007451943, 0.0256063563168353, -0.0178290117316853, 0.974116036162595, -0.295865447837111, 0.0206460521503603, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.195137808569612, 0.0592610084486128, 0.0231482477455682, -0.00967098360096032, -0.0201731420515044, 0.126357236944376, -0.0854111968230499, 0.899301188466567, -0.291418389912392, 0.10346822221317, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.131577855702874, 0.0606347539388314, 0.0464737242451543, -0.0236575578698549, -0.0413576188535262, 0.275268177928286, -0.175104290398223, 0.776548648700408, -0.282568555855063, 0.232184862461113, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0599798225963616, 0.0621994675039565, 0.0624162811176242, -0.0433410956498316, -0.0574165790866713, 0.426598571822903, -0.243096426166899, 0.623578274397747, -0.268233320255836, 0.377315003720645, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00396842577006952, 0.0635331987525646, 0.0602834699760322, -0.0675742964709458, -0.0582628928487277, 0.532782891093585, -0.246679639486892, 0.461008533785991, -0.247560578125693, 0.506437739094155, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0475266026206055, 0.0641470553838739, 0.0361547153655965, -0.0942652599815078, -0.0375863564544572, 0.558247413025564, -0.159137118094777, 0.308318816880833, -0.220427736997656, 0.592075073493135, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0640238231283804, 0.0635451730534492, -0.00406487485038623, -0.120359363778311, 0.00471813706991296, 0.489614138939423, 0.0199761511066352, 0.180407673108428, -0.187768267201191, 0.617955055680419, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0541946356194969, 0.0613003779463629, -0.0447613065796832, -0.142148718517488, 0.0619958548900314, 0.339359728580571, 0.262484651657467, 0.0854860032977217, -0.151606883023332, 0.582084927367846, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0254127188497645, 0.0571366571807848, -0.0641369364600142, -0.155896365601549, 0.122376184187976, 0.141921313246567, 0.518129319044458, 0.0246779161869393, -0.114772572281058, 0.49597720334566, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0108817565131953, 0.0510042232210298, -0.0402992734044387, -0.158651643809211, 0.17200105504353, -0.0565201587088032, 0.728236381253248, -0.0067614776824335, -0.0803570681933587, 0.380466205767241, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0427492464002985, 0.0431303375979297, 0.0417918978877754, -0.149051070653776, 0.199001769049382, -0.21148658554148, 0.842554879206061, -0.0171134977442657, -0.0510660559980915, 0.259489079796166, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0612331156388199, 0.0340305631384411, 0.184591941443299, -0.127873500510561, 0.197042983924591, -0.292857123939394, 0.834261566176269, -0.0154958175120418, -0.0286470901723652, 0.153713361812942, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0627347888603327, 0.0244710648016001, 0.375276036802065, -0.0981609322715619, 0.167360376272563, -0.29298397426267, 0.708588181340331, -0.00955941933474677, -0.0135602464357946, 0.0758341242278813, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0496196615055619, 0.0153819967958333, 0.587095255794177, -0.0648185812489724, 0.118649951661552, -0.227916987934978, 0.502352799010527, -0.00414387191634841, -0.00498965373603783, 0.0287694300686858, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0289433881247781, 0.00773281783764919, 0.784659028034516, -0.0337429517244119, 0.0647957357980671, -0.131474583664117, 0.274339085572958, -0.00110061644429754, -0.00119596514949949, 0.00704406161435833, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00976444684375988, 0.00239014463083298, 0.931872025471897, -0.0106582555480991, 0.0210648272233824, -0.0440604512346903, 0.0891865084490246, -0.000107829435951043, -0.00011043730056684, 0.000659020900410923, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0751136561079528, 0.0306850593111976, 0.0048854827352177, -0.00115867350556727, -0.00597266030881977, 0.0191843657143222, -0.0160673588748085, 1.0351234766585, -0.16818314478216, 0.0263897969441643, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0520781057632081, 0.0332073314180039, 0.0231482477455682, -0.00646655756811139, -0.0286124701060811, 0.0943678859131328, -0.0769718687684732, 0.952601098174096, -0.175604919782908, 0.132253147211565, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0172852600433309, 0.0375017746816785, 0.0464737242451543, -0.0172849018934672, -0.0586593615453659, 0.204301546055258, -0.157802547706383, 0.817459261506077, -0.186053593744036, 0.296778838357753, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0198137095174607, 0.0431358081560412, 0.0624162811176242, -0.0350333767109432, -0.0814365034716204, 0.313321579704743, -0.21907650178195, 0.649596522713621, -0.195394377109972, 0.482284276899917, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0492808813096306, 0.0494642977430195, 0.0602834699760322, -0.0603565140838106, -0.0826368681523122, 0.384673808707614, -0.222305664183308, 0.472099040032246, -0.199269727822842, 0.64732903909299, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0634792683610633, 0.0556483669950136, 0.0361547153655965, -0.0922127177910754, -0.0533104113233301, 0.391479210129117, -0.143413063225904, 0.306664723156478, -0.194322289143983, 0.75679073419915, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0591517936552391, 0.0607208655220967, -0.00406487485038623, -0.127409689292922, 0.00669194493969333, 0.324748976300652, 0.0180023432368549, 0.169719072719295, -0.179127388753847, 0.789870543833802, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0382055473731331, 0.0637061603474172, -0.0447613065796832, -0.160827999881276, 0.0879314952630143, 0.196102614222206, 0.236549011284484, 0.0700648017977544, -0.154580552170783, 0.744021323089998, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00699476067937938, 0.0637830894382395, -0.0641369364600141, -0.186360648349624, 0.173571618285097, 0.0344044236709786, 0.466933884947337, 0.00848509982635809, -0.123644146348317, 0.633958375669323, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0256607756149209, 0.0604616387981314, -0.0402992734044388, -0.198362676022441, 0.243956793298862, -0.122655066081456, 0.656280642997917, -0.0208116034567692, -0.0905433770978503, 0.486312145353124, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05111537383683, 0.0537318052250734, 0.0417918978877754, -0.19322286965545, 0.282253114237011, -0.239504813004612, 0.759303534018432, -0.0274885610873072, -0.0596585877187253, 0.331679106260972, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0634024135597729, 0.0441418501132918, 0.184591941443299, -0.170597696459387, 0.279474881640214, -0.292896082671246, 0.751829668460646, -0.0219813351888745, -0.0344421573913361, 0.19647651649362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0608633574600314, 0.032774401872629, 0.375276036802065, -0.133912189742976, 0.23737471093077, -0.27832981821551, 0.638573846682124, -0.012880395196212, -0.0166711762450568, 0.0969312256521355, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0464320135551456, 0.0211105973716188, 0.587095255794177, -0.0899191612075391, 0.168286535946489, -0.210820081655732, 0.452716214725589, -0.00543655027972955, -0.00623792799802596, 0.0367731037480068, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.026515723454644, 0.0107993929627629, 0.784659028034516, -0.0473655465126551, 0.0919026916476542, -0.119811651281551, 0.247232129723371, -0.00142257460663109, -0.00151291744214548, 0.0090037240200353, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0088407633813154, 0.00337455003771531, 0.931872025471897, -0.0150709018429829, 0.0298771870876633, -0.0398311449719918, 0.0803741485847438, -0.000138258865473043, -0.000140729815482632, 0.000842360932596042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0253756330395391, -0.0119721821617586, 0.0048854827352177, 0.000580365180561593, -0.00791673576113783, 0.0130879246356212, -0.0141232834224904, 0.936038762115131, 0.0740481003816581, 0.0307471993367365, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0347928165262626, -0.0082169739482971, 0.0231482477455682, 0.00203390598359977, -0.0379257070703996, 0.0640301880202799, -0.0676586318041546, 0.856741813965724, 0.0485495920812359, 0.154090381552706, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0479285614585878, -0.00154017255956896, 0.0464737242451543, 0.000887453102355339, -0.0777527334989993, 0.137125978830824, -0.13870917575275, 0.727264753909885, 0.00839668259532184, 0.345782050586365, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0594860240734364, 0.00781165645832795, 0.0624162811176242, -0.00776250483855482, -0.107943737959409, 0.206417406124502, -0.192569267294161, 0.567254610869006, -0.0380559990116685, 0.561917578607769, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0641480035455144, 0.0192826801079453, 0.0602834699760322, -0.0280933750341205, -0.109534816223145, 0.245525682642177, -0.195407716112475, 0.399407082210988, -0.0815290301306257, 0.754214026108737, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0582886711598588, 0.0319081313941976, 0.0361547153655965, -0.0615409695584472, -0.0706627227972683, 0.235848495260522, -0.126060751751966, 0.24488746807307, -0.113995395660963, 0.881749700835117, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0411919627247249, 0.044314506900815, -0.00406487485038623, -0.105541755071015, 0.00887014447103305, 0.172460038658151, 0.0158241437055152, 0.119467471776846, -0.13042926012063, 0.920291547254396, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0154024831060743, 0.054858077760007, -0.0447613065796832, -0.153514204678247, 0.116552821872535, 0.0659382984101534, 0.207927684674963, 0.0312271669109652, -0.129697898963642, 0.866871843699022, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0139076512507762, 0.0618953863329681, -0.0641369364600142, -0.196183502965098, 0.230068439614263, -0.0604499857628828, 0.410437063618172, -0.0197613771255674, -0.114412378221276, 0.738635639718659, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0403763020131754, 0.0641327055108488, -0.0402992734044387, -0.223931801992572, 0.323363688845594, -0.177384311113652, 0.576873747451184, -0.0398945519173924, -0.0898470217481989, 0.56661051635545, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0582696784325524, 0.0609669707536073, 0.0417918978877754, -0.229518941124067, 0.374125298884483, -0.25797457903924, 0.66743134937096, -0.0392457839301318, -0.0622908350001569, 0.386444943764217, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0641405425308384, 0.0527201953116364, 0.184591941443299, -0.210371185049684, 0.370442763428826, -0.285564194327626, 0.660861786672034, -0.0284068182161315, -0.0373331485334892, 0.228918116740297, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0578294724547831, 0.0406877517852769, 0.375276036802065, -0.16972717948455, 0.314639166744566, -0.258519815381005, 0.561309390868328, -0.0158577520794097, -0.0185732842692587, 0.112936212559205, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0425057867254852, 0.0269644782748273, 0.587095255794177, -0.116238651496211, 0.223063085519567, -0.190572453556561, 0.397939665152511, -0.00651403205758729, -0.00708810029371626, 0.0428449659375073, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0237298338759949, 0.0140699819918767, 0.784659028034516, -0.0620608266280447, 0.121816625740027, -0.106603038481942, 0.217318195630998, -0.00167773713080306, -0.00174245436843834, 0.0104903913358153, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00781105029073215, 0.00445032888425974, 0.931872025471897, -0.0199088676860135, 0.039602084034451, -0.0351322671845027, 0.0706492516379561, -0.000161642183922853, -0.000163412252994072, 0.000981448988137679, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0631826280962292, -0.0512609423748647, 0.0048854827352177, 0.00355072803833967, -0.00997297082206097, 0.00777075513842493, -0.0120670483615673, 0.700107404916265, 0.38707521285032, 0.0330940059761546, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0640055791013395, -0.0481013625983386, 0.0231482477455682, 0.016692791399939, -0.0477762529192676, 0.037610220674559, -0.0578080859552867, 0.63394191411412, 0.340446643157958, 0.165851463482088, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0637204493354234, -0.0418982814563154, 0.0464737242451543, 0.0328273470871686, -0.0979476599847467, 0.0787939701294613, -0.118514249267002, 0.526434304801406, 0.265377128477384, 0.372174165302914, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0599840245110462, -0.0320818858353676, 0.0624162811176242, 0.0417510774151061, -0.135980255192789, 0.114014977643244, -0.164532750060782, 0.394704450738502, 0.174885703850141, 0.604806424835366, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0507026928976569, -0.0184249483847847, 0.0602834699760322, 0.0337738557558068, -0.137984588491084, 0.126092412596778, -0.166957943844536, 0.258396238580886, 0.0837441313443486, 0.811780065364209, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0349419487923801, -0.00142904185044254, 0.0361547153655965, 0.00333428395323956, -0.0890161417441653, 0.103672931578713, -0.107707332805069, 0.135605476593116, 0.00527704669615243, 0.949050011005239, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0135178204299968, 0.017477032602523, -0.00406487485038623, -0.0485605250908053, 0.0111740109391203, 0.045236758673838, 0.0135202772374279, 0.0394758119832657, -0.0512742683234856, 0.990533597258499, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0109421427265798, 0.0360293159004821, -0.0447613065796832, -0.113891757009277, 0.146825399613517, -0.0398488940876899, 0.177655106933982, -0.0237733027360513, -0.0822132932897548, 0.933036588527895, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0345202516546247, 0.0515237141006635, -0.0641369364600142, -0.179403364126237, 0.289824733902751, -0.133607130013474, 0.350680769329683, -0.0550210706836798, -0.0893936128347069, 0.795012645130389, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0529837421018956, 0.0614279034852709, -0.0402992734044388, -0.230134093994913, 0.407351809012211, -0.21442905788009, 0.492885627284568, -0.0607519779474358, -0.0788922337812979, 0.609857555124229, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0629393189875452, 0.0640472006450257, 0.0417918978877754, -0.253694193293449, 0.471297868483308, -0.263295072152647, 0.570258779772135, -0.0504588357539106, -0.0588276536227893, 0.415940689047006, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0628274886441259, 0.0590509091404307, 0.184591941443299, -0.24401888637924, 0.466658858194401, -0.269388866672358, 0.564645691906459, -0.0337580134518432, -0.0369996132398594, 0.246390490414584, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0534527385104129, 0.0476924644219556, 0.375276036802065, -0.20345424018523, 0.396361243332717, -0.233412708991026, 0.479587314280177, -0.0180364343169432, -0.0190225807240338, 0.121556166869906, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0378735700108462, 0.0326348895307865, 0.587095255794177, -0.142500599412102, 0.280999860357324, -0.167580684801595, 0.340002890314755, -0.00721592691201495, -0.00742439998060883, 0.046115145098432, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.020659762659163, 0.0174011022893289, 0.784659028034516, -0.0772180472940927, 0.153456385409612, -0.0922465060271147, 0.185678435961413, -0.00182886924687393, -0.00185237133298771, 0.0112910795470363, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00671003757058802, 0.00557615166604149, 0.931872025471897, -0.0249898491892422, 0.0498880397786101, -0.0301261956259616, 0.060363295893797, -0.000174610848694856, -0.000175253649859666, 0.00105635893282519, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0512609423748646, -0.0631826280962292, 0.0048854827352177, 0.00777075513842483, -0.0120670483615672, 0.00355072803833975, -0.00997297082206108, 0.38707521285032, 0.700107404916265, 0.0330940059761546, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0481013625983385, -0.0640055791013395, 0.0231482477455682, 0.0376102206745589, -0.0578080859552866, 0.016692791399939, -0.0477762529192677, 0.340446643157957, 0.633941914114121, 0.165851463482088, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0418982814563153, -0.0637204493354234, 0.0464737242451543, 0.0787939701294614, -0.118514249267002, 0.0328273470871686, -0.0979476599847467, 0.265377128477383, 0.526434304801406, 0.372174165302914, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0320818858353676, -0.0599840245110462, 0.0624162811176242, 0.114014977643244, -0.164532750060782, 0.0417510774151061, -0.135980255192789, 0.174885703850141, 0.394704450738503, 0.604806424835366, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0184249483847846, -0.050702692897657, 0.0602834699760322, 0.126092412596778, -0.166957943844536, 0.0337738557558067, -0.137984588491084, 0.0837441313443483, 0.258396238580887, 0.811780065364209, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00142904185044253, -0.0349419487923801, 0.0361547153655965, 0.103672931578713, -0.107707332805069, 0.00333428395323946, -0.0890161417441655, 0.00527704669615232, 0.135605476593116, 0.949050011005239, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.017477032602523, -0.0135178204299967, -0.00406487485038623, 0.0452367586738381, 0.0135202772374281, -0.0485605250908054, 0.0111740109391201, -0.0512742683234857, 0.0394758119832657, 0.990533597258499, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.036029315900482, 0.0109421427265798, -0.0447613065796832, -0.0398488940876897, 0.177655106933982, -0.113891757009277, 0.146825399613516, -0.0822132932897549, -0.0237733027360512, 0.933036588527895, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0515237141006634, 0.0345202516546247, -0.0641369364600142, -0.133607130013473, 0.350680769329684, -0.179403364126238, 0.289824733902751, -0.089393612834707, -0.0550210706836797, 0.795012645130389, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0614279034852708, 0.0529837421018957, -0.0402992734044388, -0.21442905788009, 0.492885627284568, -0.230134093994913, 0.407351809012211, -0.0788922337812979, -0.0607519779474358, 0.609857555124229, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0640472006450256, 0.0629393189875453, 0.0417918978877754, -0.263295072152647, 0.570258779772135, -0.253694193293449, 0.471297868483308, -0.0588276536227893, -0.0504588357539106, 0.415940689047006, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0590509091404306, 0.062827488644126, 0.184591941443299, -0.269388866672358, 0.564645691906459, -0.24401888637924, 0.466658858194401, -0.0369996132398594, -0.0337580134518432, 0.246390490414584, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0476924644219556, 0.053452738510413, 0.375276036802065, -0.233412708991026, 0.479587314280177, -0.203454240185231, 0.396361243332718, -0.0190225807240338, -0.0180364343169432, 0.121556166869906, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0326348895307864, 0.0378735700108463, 0.587095255794177, -0.167580684801594, 0.340002890314755, -0.142500599412102, 0.280999860357324, -0.00742439998060889, -0.00721592691201489, 0.046115145098432, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0174011022893288, 0.020659762659163, 0.784659028034516, -0.0922465060271145, 0.185678435961413, -0.0772180472940928, 0.153456385409612, -0.00185237133298778, -0.00182886924687387, 0.0112910795470363, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00557615166604135, 0.00671003757058815, 0.931872025471897, -0.0301261956259615, 0.0603632958937977, -0.0249898491892422, 0.0498880397786093, -0.000175253649859694, -0.000174610848694828, 0.00105635893282519, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0119721821617585, -0.0253756330395391, 0.0048854827352177, 0.0130879246356212, -0.0141232834224904, 0.000580365180561718, -0.00791673576113786, 0.0740481003816578, 0.936038762115131, 0.0307471993367362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.008216973948297, -0.0347928165262626, 0.0231482477455682, 0.0640301880202799, -0.0676586318041545, 0.00203390598359987, -0.0379257070703997, 0.0485495920812356, 0.856741813965724, 0.154090381552706, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00154017255956888, -0.0479285614585878, 0.0464737242451543, 0.137125978830824, -0.13870917575275, 0.000887453102355412, -0.0777527334989995, 0.00839668259532162, 0.727264753909886, 0.345782050586364, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00781165645832798, -0.0594860240734364, 0.0624162811176242, 0.206417406124502, -0.192569267294161, -0.00776250483855478, -0.10794373795941, -0.0380559990116685, 0.567254610869006, 0.561917578607769, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0192826801079453, -0.0641480035455144, 0.0602834699760322, 0.245525682642177, -0.195407716112475, -0.0280933750341205, -0.109534816223145, -0.0815290301306258, 0.399407082210988, 0.754214026108737, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0319081313941976, -0.0582886711598588, 0.0361547153655965, 0.235848495260522, -0.126060751751966, -0.0615409695584473, -0.0706627227972685, -0.113995395660963, 0.244887468073071, 0.881749700835117, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.044314506900815, -0.0411919627247249, -0.00406487485038623, 0.172460038658151, 0.0158241437055154, -0.105541755071016, 0.00887014447103285, -0.13042926012063, 0.119467471776846, 0.920291547254396, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0548580777600069, -0.0154024831060743, -0.0447613065796832, 0.0659382984101535, 0.207927684674964, -0.153514204678247, 0.116552821872535, -0.129697898963642, 0.0312271669109653, 0.866871843699022, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0618953863329681, 0.0139076512507762, -0.0641369364600142, -0.0604499857628826, 0.410437063618172, -0.196183502965098, 0.230068439614262, -0.114412378221276, -0.0197613771255674, 0.738635639718659, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0641327055108487, 0.0403763020131756, -0.0402992734044388, -0.177384311113652, 0.576873747451184, -0.223931801992573, 0.323363688845595, -0.0898470217481989, -0.0398945519173925, 0.566610516355451, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0609669707536072, 0.0582696784325525, 0.0417918978877754, -0.25797457903924, 0.66743134937096, -0.229518941124067, 0.374125298884483, -0.062290835000157, -0.0392457839301318, 0.386444943764217, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0527201953116362, 0.0641405425308385, 0.184591941443299, -0.285564194327625, 0.660861786672034, -0.210371185049685, 0.370442763428826, -0.0373331485334892, -0.0284068182161315, 0.228918116740297, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0406877517852768, 0.0578294724547831, 0.375276036802065, -0.258519815381004, 0.561309390868328, -0.169727179484551, 0.314639166744567, -0.0185732842692587, -0.0158577520794097, 0.112936212559205, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0269644782748272, 0.0425057867254852, 0.587095255794177, -0.190572453556561, 0.397939665152511, -0.116238651496211, 0.223063085519567, -0.00708810029371634, -0.00651403205758724, 0.0428449659375073, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0140699819918766, 0.023729833875995, 0.784659028034516, -0.106603038481941, 0.217318195630998, -0.0620608266280449, 0.121816625740027, -0.00174245436843841, -0.00167773713080299, 0.0104903913358153, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00445032888425961, 0.00781105029073226, 0.931872025471897, -0.0351322671845027, 0.0706492516379569, -0.0199088676860135, 0.0396020840344502, -0.000163412252994072, -0.000161642183922825, 0.000981448988137623, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0306850593111977, 0.0751136561079529, 0.0048854827352177, 0.0191843657143223, -0.0160673588748085, -0.00115867350556723, -0.00597266030881979, -0.168183144782161, 1.0351234766585, 0.0263897969441642, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.033207331418004, 0.0520781057632081, 0.0231482477455682, 0.0943678859131328, -0.076971868768473, -0.00646655756811131, -0.0286124701060812, -0.175604919782908, 0.952601098174096, 0.132253147211564, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0375017746816786, 0.017285260043331, 0.0464737242451543, 0.204301546055258, -0.157802547706383, -0.0172849018934672, -0.0586593615453659, -0.186053593744036, 0.817459261506077, 0.296778838357753, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0431358081560413, -0.0198137095174607, 0.0624162811176242, 0.313321579704743, -0.21907650178195, -0.0350333767109432, -0.0814365034716205, -0.195394377109972, 0.649596522713621, 0.482284276899916, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0494642977430196, -0.0492808813096306, 0.0602834699760322, 0.384673808707615, -0.222305664183308, -0.0603565140838107, -0.0826368681523124, -0.199269727822842, 0.472099040032246, 0.64732903909299, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0556483669950136, -0.0634792683610633, 0.0361547153655965, 0.391479210129118, -0.143413063225904, -0.0922127177910755, -0.0533104113233304, -0.194322289143983, 0.306664723156478, 0.756790734199149, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0607208655220967, -0.0591517936552391, -0.00406487485038623, 0.324748976300652, 0.018002343236855, -0.127409689292923, 0.00669194493969311, -0.179127388753847, 0.169719072719295, 0.789870543833802, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0637061603474171, -0.0382055473731332, -0.0447613065796832, 0.196102614222206, 0.236549011284485, -0.160827999881276, 0.087931495263014, -0.154580552170783, 0.0700648017977545, 0.744021323089998, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0637830894382394, -0.00699476067937938, -0.0641369364600142, 0.0344044236709789, 0.466933884947338, -0.186360648349624, 0.173571618285097, -0.123644146348317, 0.00848509982635813, 0.633958375669323, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0604616387981314, 0.025660775614921, -0.0402992734044388, -0.122655066081456, 0.656280642997917, -0.198362676022441, 0.243956793298862, -0.0905433770978503, -0.0208116034567692, 0.486312145353124, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0537318052250732, 0.0511153738368301, 0.0417918978877754, -0.239504813004612, 0.759303534018432, -0.19322286965545, 0.282253114237011, -0.0596585877187252, -0.0274885610873072, 0.331679106260972, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0441418501132916, 0.063402413559773, 0.184591941443299, -0.292896082671246, 0.751829668460646, -0.170597696459388, 0.279474881640213, -0.0344421573913361, -0.0219813351888745, 0.196476516493621, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0327744018726289, 0.0608633574600315, 0.375276036802065, -0.27832981821551, 0.638573846682124, -0.133912189742976, 0.23737471093077, -0.0166711762450569, -0.012880395196212, 0.0969312256521357, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0211105973716187, 0.0464320135551457, 0.587095255794177, -0.210820081655732, 0.452716214725589, -0.0899191612075392, 0.168286535946489, -0.00623792799802605, -0.00543655027972951, 0.0367731037480069, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0107993929627627, 0.026515723454644, 0.784659028034516, -0.119811651281551, 0.247232129723371, -0.0473655465126552, 0.091902691647654, -0.00151291744214554, -0.0014225746066311, 0.0090037240200353, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00337455003771515, 0.00884076338131549, 0.931872025471897, -0.0398311449719919, 0.0803741485847445, -0.0150709018429828, 0.0298771870876626, -0.000140729815482632, -0.00013825886547307, 0.000842360932595987, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0583916354882496, 0.236096823481758, 0.00488548273521769, 0.0256063563168355, -0.0178290117316852, -0.00183691931427632, -0.00421100745194303, -0.295865447837111, 0.974116036162594, 0.0206460521503601, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0592610084486129, 0.195137808569612, 0.0231482477455682, 0.126357236944376, -0.0854111968230498, -0.00967098360096025, -0.0201731420515045, -0.291418389912392, 0.899301188466567, 0.10346822221317, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0606347539388314, 0.131577855702874, 0.0464737242451543, 0.275268177928286, -0.175104290398223, -0.0236575578698548, -0.0413576188535263, -0.282568555855063, 0.776548648700408, 0.232184862461113, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0621994675039565, 0.0599798225963616, 0.0624162811176242, 0.426598571822903, -0.243096426166899, -0.0433410956498316, -0.0574165790866715, -0.268233320255836, 0.623578274397747, 0.377315003720645, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0635331987525646, -0.00396842577006959, 0.0602834699760322, 0.532782891093585, -0.246679639486892, -0.0675742964709458, -0.0582628928487279, -0.247560578125693, 0.461008533785991, 0.506437739094155, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0641470553838739, -0.0475266026206055, 0.0361547153655965, 0.558247413025564, -0.159137118094777, -0.0942652599815079, -0.0375863564544574, -0.220427736997656, 0.308318816880833, 0.592075073493135, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0635451730534492, -0.0640238231283804, -0.00406487485038623, 0.489614138939423, 0.0199761511066354, -0.120359363778311, 0.00471813706991276, -0.187768267201191, 0.180407673108428, 0.61795505568042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0613003779463629, -0.0541946356194969, -0.0447613065796832, 0.339359728580572, 0.262484651657467, -0.142148718517488, 0.0619958548900312, -0.151606883023332, 0.0854860032977217, 0.582084927367845, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0571366571807846, -0.0254127188497645, -0.0641369364600141, 0.141921313246567, 0.518129319044458, -0.155896365601549, 0.122376184187976, -0.114772572281058, 0.0246779161869393, 0.49597720334566, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0510042232210297, 0.0108817565131953, -0.0402992734044388, -0.0565201587088031, 0.728236381253249, -0.158651643809212, 0.17200105504353, -0.0803570681933586, -0.00676147768243355, 0.380466205767241, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0431303375979296, 0.0427492464002985, 0.0417918978877754, -0.21148658554148, 0.842554879206061, -0.149051070653776, 0.199001769049382, -0.0510660559980914, -0.0171134977442657, 0.259489079796166, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.034030563138441, 0.06123311563882, 0.184591941443299, -0.292857123939394, 0.834261566176269, -0.127873500510561, 0.197042983924591, -0.0286470901723652, -0.0154958175120418, 0.153713361812942, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0244710648016001, 0.0627347888603328, 0.375276036802065, -0.292983974262669, 0.708588181340331, -0.0981609322715624, 0.167360376272563, -0.0135602464357946, -0.00955941933474682, 0.0758341242278817, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0153819967958332, 0.0496196615055619, 0.587095255794177, -0.227916987934978, 0.502352799010527, -0.0648185812489725, 0.118649951661551, -0.00498965373603791, -0.00414387191634838, 0.0287694300686859, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00773281783764913, 0.0289433881247781, 0.784659028034516, -0.131474583664117, 0.274339085572958, -0.0337429517244124, 0.0647957357980674, -0.00119596514949957, -0.00110061644429749, 0.00704406161435833, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00239014463083285, 0.00976444684375997, 0.931872025471897, -0.0440604512346903, 0.0891865084490254, -0.0106582555480991, 0.0210648272233817, -0.000110437300566854, -0.000107829435951001, 0.000659020900410867, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0631607800095188, 0.438528651797882, 0.0048854827352177, 0.0318141613831165, -0.0193445734175847, -0.00173749492224221, -0.00269544576604355, -0.303640431332499, 0.774690046820589, 0.0143388226920448, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.062870763922446, 0.377232141524964, 0.0231482477455682, 0.157300378804215, -0.0926716069568204, -0.00900528255031356, -0.0129127319177339, -0.294425579004026, 0.716604289129016, 0.0718593793026846, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.062264834528729, 0.280855356413508, 0.0464737242451543, 0.344001383630898, -0.18998909487073, -0.0214598566066009, -0.0264728143810188, -0.278107450060051, 0.621179961604864, 0.161253955495247, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0612103671142949, 0.169524405957061, 0.0624162811176242, 0.536532232528894, -0.263760927095064, -0.0380075716563161, -0.0367520781585068, -0.255220084945871, 0.502009556116745, 0.262047819021138, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0595416659148375, 0.065230015582336, 0.0602834699760322, 0.676953913273335, -0.267648732778443, -0.0570320105783077, -0.0372937995571776, -0.226699480056634, 0.374940527202253, 0.351724431021767, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0570867561258868, -0.0136161722031535, 0.0361547153655965, 0.721303686328465, -0.172664627225319, -0.0764465980728868, -0.024058847323915, -0.193956626859299, 0.254997575583011, 0.411200138281613, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0536997788701999, -0.0564270407162567, -0.00406487485038623, 0.651889264144352, 0.0216742311631509, -0.0938533940447373, 0.00302005701339714, -0.158863521136833, 0.153751538815196, 0.429173960741916, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.049295536522474, -0.0623892762746948, -0.0447613065796832, 0.481858804834925, 0.284797255809372, -0.106824781713543, 0.0396832507381267, -0.123617475592984, 0.0776960779464603, 0.404261914309547, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0438814341666029, -0.039680804641315, -0.0641369364600141, 0.250824591203472, 0.562173091974928, -0.11328195849148, 0.0783324112575067, -0.0904887855804348, 0.0279174382920481, 0.344459518278686, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0375812204374189, -0.00230936794222657, -0.0402992734044387, 0.0129610870048883, 0.790140382120786, -0.111903033885987, 0.110097054175993, -0.0614969043416747, 0.000992485704915145, 0.264236350130325, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0306450597623544, 0.0344061311519647, 0.0417918978877754, -0.178799017678001, 0.914176565949533, -0.102466477608131, 0.12738008230591, -0.0380899945697615, -0.00926116608868667, 0.180216918887043, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0234418370512755, 0.0583364816341324, 0.184591941443299, -0.287739124061877, 0.905178276801811, -0.0860331067589916, 0.126126273299049, -0.0209120906850654, -0.00974545690748859, 0.106754968183855, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0164321595973657, 0.0637107923556892, 0.375276036802065, -0.303082624416618, 0.76882197976294, -0.0648954694605369, 0.107126577849954, -0.00972691616508283, -0.00632984789658067, 0.0526673115708047, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0101238881381725, 0.0520875397776037, 0.587095255794177, -0.241673943896439, 0.545055483065175, -0.042272758752318, 0.0759472676069034, -0.00353072070867238, -0.00281257455809498, 0.0199805635334925, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00501554129296009, 0.0309590745070318, 0.784659028034516, -0.141275280762533, 0.297659380230692, -0.0217903413887001, 0.0414754411403331, -0.000837975603052099, -0.000757015828309546, 0.0048921483770622, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00153594911980147, 0.0105519633412778, 0.931872025471897, -0.0476771526897703, 0.0967678403331859, -0.00684022765993425, 0.0134834953392212, -7.69010193361758e-05, -7.46867036681698e-05, 0.000457694467326075, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.048083596912069, 0.649634947999193, 0.0048854827352177, 0.0372456280359798, -0.0205592737451015, -0.00120180524410513, -0.00148074543852686, -0.223212628857185, 0.498233131241414, 0.00837166636104447, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0474246637601492, 0.568369539155746, 0.0231482477455682, 0.184386118656678, -0.0984907185439292, -0.00618646473043206, -0.00709362033062499, -0.214965788105641, 0.461453200762146, 0.0419548216303402, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0462271397153462, 0.439663999248489, 0.0464737242451543, 0.404218223692873, -0.201919046014253, -0.0145702415503212, -0.014542863237496, -0.20067865012411, 0.400980213647325, 0.0941475003769919, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0444747374943447, 0.288962425232651, 0.0624162811176242, 0.632976070535766, -0.2803232196622, -0.025399199737727, -0.020189785591371, -0.181264756204037, 0.325351837719271, 0.152995609095678, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0421540427313821, 0.144308721917261, 0.0602834699760322, 0.803690382253002, -0.284455151630246, -0.0373970018979951, -0.0204873807053738, -0.157985504067473, 0.244535468061623, 0.205352953361787, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0392636376436861, 0.0296093723672821, 0.0361547153655965, 0.865067848766635, -0.1835067261806, -0.0490882380311128, -0.0132167483686345, -0.132364802099074, 0.168003324734552, 0.240077615801669, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0358242715945951, -0.0406789045874784, -0.00406487485038623, 0.795598950477672, 0.0230352172714628, -0.0589606824027712, 0.00165907090508529, -0.106068228328477, 0.103083617153666, 0.250571562766631, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0318884078850175, -0.0640925142677474, -0.0447613065796832, 0.608926028143438, 0.302680478790812, -0.0656568511908496, 0.021800027756687, -0.0807488822188177, 0.0539378512028032, 0.23602676047834, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0275474932517668, -0.0493861710761867, -0.0641369364600142, 0.349063445223783, 0.597473526065775, -0.0681726562917988, 0.0430319771666591, -0.0578752445590021, 0.0213432046203233, 0.201111362058694, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0229353801338151, -0.0128426746631648, -0.0402992734044388, 0.0770525108667771, 0.83975552535645, -0.0660314821658301, 0.0604819109403294, -0.038566573148896, 0.00324130153667843, 0.15427337454828, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0182266667161877, 0.0271191561793166, 0.0417918978877754, -0.146869165274632, 0.971580291019922, -0.0593983645867088, 0.0699763572355217, -0.0234667098341596, -0.00417908280547384, 0.105218953462251, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0136293170812676, 0.0553907450067316, 0.184591941443299, -0.280242106724246, 0.962016973916355, -0.0491036326094611, 0.0692875761845051, -0.0126851054315275, -0.00521418556361779, 0.0623284766966944, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00937172742523818, 0.0640891402741986, 0.375276036802065, -0.309501620389615, 0.817098480384616, -0.036558768775921, 0.0588500772282786, -0.00582372645189897, -0.00355095335614644, 0.0307496068591858, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00568529918240023, 0.0538863419584482, 0.587095255794177, -0.252064520256512, 0.57928105421125, -0.023567193864492, 0.0417216964608278, -0.00209198834203498, -0.00161152014980458, 0.0116655750057397, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00278441674293183, 0.0325264372251475, 0.784659028034516, -0.148974815018384, 0.316350252283005, -0.0120549207293878, 0.0227845690880206, -0.000492697446190529, -0.000438532153258606, 0.00285626197360067, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.000846433666179619, 0.0111783949796901, 0.931872025471897, -0.0505613299620285, 0.102844165967689, -0.00376557907095615, 0.00740716970471789, -4.49926862992889e-05, -4.35112214955402e-05, 0.000267223150606066, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0242468794749492, 0.830250358213063, 0.0048854827352177, 0.0413849759935335, -0.0214292354062691, -0.00056878569789387, -0.000610783777359292, -0.11011138915415, 0.228353198761629, 0.00359929885727941, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0237988605617582, 0.732508409588015, 0.0231482477455682, 0.205034457720279, -0.102658334101579, -0.00291796110825829, -0.00292600477297532, -0.105683019136688, 0.211657364559314, 0.0180379789445652, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0230019385717766, 0.577073477629819, 0.0464737242451543, 0.450149504105731, -0.210463211088848, -0.00683162495789354, -0.00599869816290131, -0.0980747799467938, 0.184192066232249, 0.0404776033717068, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0218721155295206, 0.393703593560885, 0.0624162811176242, 0.706605798251292, -0.292185042062384, -0.0118119694931816, -0.00832796319118665, -0.0878647264117396, 0.149813261563563, 0.0657786511356065, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0204339243117708, 0.215367671795773, 0.0602834699760322, 0.900575060126324, -0.296491815926274, -0.0172177979632385, -0.00845071640934619, -0.0758153191919513, 0.113026451727201, 0.0882890715537082, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0187212613150365, 0.07046791037423, 0.0361547153655965, 0.975181988261571, -0.191271777530312, -0.0223432908614506, -0.00545169701892276, -0.0627973209740237, 0.0781196819312029, 0.103218529137071, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0167782038661164, -0.0233342497877707, -0.00406487485038623, 0.905986651084015, 0.0240099480003443, -0.0265070976612466, 0.000684340176203703, -0.0497031482429865, 0.0484199499969471, 0.107730277418763, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.014659413964722, -0.0621474659378612, -0.0447613065796832, 0.706961251835106, 0.315488344253208, -0.0291422262445893, 0.00899216229429011, -0.0373575254115442, 0.0258304399859391, 0.101476911840412, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0124298528656769, -0.0550940524835676, -0.0641369364600142, 0.425411947151886, 0.622755501863372, -0.0298752457414811, 0.0177500013690623, -0.026435833979651, 0.010729315834443, 0.0864654495802729, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0101635950703667, -0.0202084788242813, -0.0402992734044388, 0.127549678372541, 0.875289616729098, -0.0285832863904738, 0.0249478195676806, -0.0174008744177471, 0.00221319203009438, 0.0663280112671599, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00794162670782031, 0.0216443848527333, 0.0417918978877754, -0.120867090678355, 1.0126925216567, -0.0254191292946674, 0.0288641265987393, -0.0104673631659765, -0.00141861813870634, 0.0452376435739328, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00584863868315365, 0.052967720700787, 0.184591941443299, -0.273016245216284, 1.00272453465396, -0.0207984081999754, 0.0285800154469047, -0.00560027642092482, -0.00209531187016189, 0.0267973907792458, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00396896507947011, 0.0641477554281601, 0.375276036802065, -0.313182950633712, 0.851673843315529, -0.0153482611614519, 0.0242747142973649, -0.00254839939436472, -0.00148213322187405, 0.0132204294888134, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00238195322159158, 0.0550784590653913, 0.587095255794177, -0.259158718474994, 0.603793219108349, -0.00982289652964027, 0.017209531563729, -0.000908845082282006, -0.000683434555692024, 0.00501547588936979, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00115716576876983, 0.0336228297432637, 0.784659028034516, -0.15440410122011, 0.329736551546249, -0.0049973885802983, 0.00939826982477576, -0.000212891331833234, -0.000187479811570052, 0.00122801602623701, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.000349926702994385, 0.0116244492426243, 0.931872025471897, -0.0526190021762828, 0.107195996804513, -0.00155557313660282, 0.00305533886789366, -1.93731166426292e-05, -1.86780909011419e-05, 0.000114889430507081, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00514858621726438, 0.944457527168746, 0.0048854827352177, 0.0438280227926878, -0.0219232173855718, -0.000116703703321758, -0.000116801798056482, -0.0231135059636072, 0.0462464398730883, 0.000704170063553028, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00504174179774679, 0.836506957584515, 0.0231482477455682, 0.217223276550646, -0.105024791238757, -0.000597767407636174, -0.000559547635797797, -0.022149073234944, 0.0428819894250824, 0.0035289664135762, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00485307032491104, 0.664491568869481, 0.0464737242451543, 0.477272055281738, -0.215314762327754, -0.00139564746783576, -0.00114714692399556, -0.0204977726745187, 0.0373458359671771, 0.00791907470564172, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0045885258712769, 0.460816051273388, 0.0624162811176242, 0.750107304099134, -0.298920426814302, -0.00240381863662717, -0.00159257843926893, -0.0182932789497161, 0.0304129460472809, 0.0128689944312097, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0042565718232259, 0.261476137404333, 0.0602834699760322, 0.95786058573141, -0.303326479473602, -0.00348720532919519, -0.00161605286201837, -0.0157092153964242, 0.0229892348116581, 0.0172729533145795, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0038679310889711, 0.0976459210877974, 0.0361547153655965, 1.04036373403136, -0.195680932101526, -0.0045002733092248, -0.00104254244770832, -0.012939886943628, 0.0159375674133052, 0.0201937658150553, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00343529570720491, -0.0110234938166817, -0.00406487485038623, 0.971439856102483, 0.0245634199936892, -0.00530647356507712, 0.000130868182858707, -0.0101794740512226, 0.00992842799300548, 0.021076448304126, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00297296714460744, -0.0597329351899337, -0.0447613065796832, 0.765239516159272, 0.322760911556079, -0.00579661297008281, 0.00171959499141924, -0.00760198999705365, 0.00534682064363551, 0.019853034241739, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00249642751844941, -0.0577943079543173, -0.0641369364600142, 0.470989675788125, 0.637111123498952, -0.00590370307003865, 0.00339437973348285, -0.00534445777635053, 0.00227162044911972, 0.0169161782725922, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00202184807745991, -0.0242830823857433, -0.0402992734044388, 0.157930184315888, 0.895466598741649, -0.00561225280778342, 0.0047708375551298, -0.00349537481238925, 0.000524042979105414, 0.0129764717411218, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00156554666606728, 0.0184598676555865, 0.0417918978877754, -0.10493823280857, 1.03603688494307, -0.00496067683973513, 0.00551976331236895, -0.00208985027542176, -0.000235533790361155, 0.00885033324921533, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00114341139217848, 0.0514829315108776, 0.184591941443299, -0.268223528783508, 1.0258391181159, -0.004036399471536, 0.00546543198496286, -0.00111191380219874, -0.000393658008003415, 0.00524266561803086, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.000770312827581107, 0.064104412087567, 0.375276036802065, -0.314933010920577, 0.871306439759839, -0.00296422809372573, 0.00464211785305488, -0.000503520951589776, -0.000285016072166886, 0.00258645670795263, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00045953121339317, 0.0557201164551588, 0.587095255794177, -0.26305785808652, 0.61771172640971, -0.00188951323974126, 0.00329102426236871, -0.000178853665873994, -0.000132661353669128, 0.000981232210996913, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.000222228332427396, 0.0342357250065591, 0.784659028034516, -0.157455353388175, 0.337337565361872, -0.000958370545132536, 0.00179725600915304, -4.17682164576272e-05, -3.65607538987678e-05, 0.000240250159136146, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.70028652080684e-05, 0.011876766245312, 0.931872025471896, -0.0537844333556042, 0.109667055135383, -0.000297729598223662, 0.000584280537024306, -3.79340039008413e-06, -3.65097205481946e-06, 2.24770714490341e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_C1_D01[256][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -5.3165577021878, 0.0, 0.955361438579109, -0.0233533530453869, -0.0230172440024172, 8.65928763836967, -4.29809137476096, -0.117181392462765, 0.0233533530454044, 0.140198636465155, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -4.94974865622051, 0.0, 0.773935401520186, -0.0228648457480018, -0.0195814194863111, 7.74274641664204, -3.5669331619417, -0.111759967915144, 0.0228648457480173, 0.131341387401429, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -4.33205225035762, 0.0, 0.483438535323884, -0.0220026275028478, -0.0138347438923552, 6.21421606685851, -2.36560235182477, -0.102510402214603, 0.0220026275028634, 0.116345146106933, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -3.53018929772946, 0.0, 0.140014545188739, -0.0207945599175282, -0.00646251588231239, 4.26336993400629, -0.873195181465559, -0.0902338691584686, 0.0207945599175389, 0.0966963850407595, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -2.62928673065268, 0.0, -0.186193885683042, -0.0192801157678205, 0.00166479687245807, 2.1307287192381, 0.684751897097625, -0.0759644625111546, 0.019280115767829, 0.0742996656386771, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.72204722474024, 0.0, -0.4213896206606, -0.0175091009578185, 0.00960600759076966, 0.0756507204032791, 2.06778612499757, -0.0608489849504375, 0.0175091009578236, 0.0512429773596516, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.897203686455051, 0.0, -0.499106683089033, -0.0155401814840594, 0.0164711080655539, -1.65774991958787, 3.05406028913196, -0.0460184640095673, 0.0155401814840621, 0.0295473559439993, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.228683857944157, 0.0, -0.370369785754966, -0.013439104599951, 0.021535276788718, -2.87243952913768, 3.47149317283681, -0.0324663685401966, 0.0134391045999509, 0.0109310917514658, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.233098651787213, 0.0, -0.0116194405560797, -0.0112766348731334, 0.0243298858217913, -3.44381469130409, 3.22233548007297, -0.020948801877748, 0.0112766348731318, -0.00338108394405512, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.466695414241413, 0.0, 0.570711664806186, -0.00912625016338985, 0.0246984618063527, -3.33518798971109, 2.2977809106635, -0.0119189623225788, 0.00912625016338731, -0.0127794994837857, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.481126647425159, 0.0, 1.33963640509363, -0.00706166135087671, 0.0228102957747797, -2.6013647827885, 0.780601730269722, -0.00550347254428514, 0.00706166135087433, -0.0173068232305066, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.313281613098641, 0.0, 2.23118963045037, -0.00515423729160869, 0.0191301210985675, -1.37987521678315, -1.16459602676585, -0.00152249515679836, 0.00515423729160647, -0.0176076259417817, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0216142088802485, 0.0, 3.16170833906882, -0.00347043168772765, 0.0143482103584023, 0.128907349638889, -3.31222989758795, 0.000450350340108707, 0.0034704316877246, -0.0147985606985241, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.32296936661597, 0.0, 4.0378778597467, -0.00206931979631886, 0.0092805803457896, 1.69003027762087, -5.40493877075159, 0.000997575907234483, 0.00206931979631608, -0.0102781562530381, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.647756691572695, 0.0, 4.76822583681658, -0.00100036129293501, 0.00475303392879844, 3.06674163992036, -7.18721078516424, 0.000750252677467866, 0.00100036129293302, -0.00550328660628097, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.888916839894247, 0.0, 5.27451364344711, -0.000301543208979904, 0.00148513299493569, 4.053252074149, -8.43884887770185, 0.000278838872545761, 0.000301543208978572, -0.00176397186749666, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -4.9280386005135, 0.0, 0.955361438579109, -0.113818609281567, -0.120362524123172, 8.17342325657461, -4.20074609464021, -0.596165750373248, 0.113818609281586, 0.716528274496392, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -4.58174290458663, 0.0, 0.773935401520185, -0.111613195678997, -0.10239579834316, 7.2919262861513, -3.48411878308485, -0.568514069480021, 0.111613195679012, 0.670909867823155, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -3.99892123083009, 0.0, 0.483438535323884, -0.107701767568058, -0.0723450946301827, 5.82257469659316, -2.30709200108695, -0.521340561807336, 0.107701767568073, 0.593685656437494, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -3.24307284703177, 0.0, 0.140014545188739, -0.102181047949067, -0.0337939991294602, 3.94892200006145, -0.845863698218411, -0.458736807887707, 0.102181047949079, 0.492530807017145, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -2.39518161842776, 0.0, -0.186193885683042, -0.0951940326596278, 0.00870561018086163, 1.90366442032159, 0.677711083789221, -0.38598349162788, 0.0951940326596366, 0.377277881446998, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.54338145073494, 0.0, -0.4213896206606, -0.0869304836710944, 0.0502320486436968, -0.0623890125490999, 2.02716008394465, -0.308936141669021, 0.0869304836710997, 0.258704093025308, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.771940260190857, 0.0, -0.499106683089033, -0.0776269029176564, 0.0861312562733318, -1.71335319764428, 2.98440014092418, -0.233368611707358, 0.077626902917659, 0.147237355434012, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.150924807256517, 0.0, -0.370369785754966, -0.0675645292859114, 0.112612972765627, -2.85912088384841, 3.38041547685991, -0.164350843913797, 0.0675645292859111, 0.0517378711481575, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.272100912372041, 0.0, -0.0116194405560799, -0.057064563372314, 0.127226633598485, -3.37992020411223, 3.11943873229627, -0.105738990961757, 0.0570645633723128, -0.0214876426367401, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.477263285077028, 0.0, 0.570711664806186, -0.0464801267913731, 0.129154003175326, -3.24130031917773, 2.19332536929453, -0.0598407097861771, 0.0464801267913709, -0.0693132933891607, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.473794471259687, 0.0, 1.33963640509362, -0.0361848370115602, 0.119280343692018, -2.49756255870579, 0.684131682352483, -0.027294472039497, 0.0361848370115576, -0.0919858716525331, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.297527730364869, 0.0, 2.23118963045037, -0.0265583057143288, 0.100035854073839, -1.28321560107411, -1.24550175974112, -0.00717268084574707, 0.0265583057143267, -0.0928631732281053, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00485391068824292, 0.0, 3.16170833906882, -0.0179692959522295, 0.0750301302452954, 0.206349567717789, -3.37291181747484, 0.00271178426761176, 0.0179692959522273, -0.0777419145129208, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.33600329092111, 0.0, 4.0378778597467, -0.010757645841454, 0.0485303138651401, 1.74231393544536, -5.44418850427094, 0.00534317416723862, 0.0107576458414519, -0.0538734880323926, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.655175219483712, 0.0, 4.76822583681658, -0.00521634781747826, 0.0248547202633489, 3.09426185416593, -7.20731247149879, 0.003952794063942, 0.00521634781747604, -0.0288075143273043, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.891372751914249, 0.0, 5.27451364344711, -0.00157549843279803, 0.00776610596428462, 4.06198895913835, -8.4451298506712, 0.00146079566872948, 0.0015754984327967, -0.00922690163303042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -4.27645762035824, 0.0, 0.955361438579109, -0.240490930095227, -0.291799267059024, 7.3504055334835, -4.02930935170436, -1.37441905134217, 0.240490930095246, 1.66621831840116, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -3.96491545372971, 0.0, 0.773935401520185, -0.236634784666859, -0.248241876980589, 6.52925275665696, -3.33827270444742, -1.31036310932481, 0.236634784666874, 1.55860498630537, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -3.44116329026026, 0.0, 0.483438535323884, -0.229702417585163, -0.175388857471944, 5.16177299318157, -2.20404823824518, -1.20109915239427, 0.229702417585178, 1.37648800986619, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -2.76321946370277, 0.0, 0.140014545188739, -0.219719230376179, -0.0819280274221981, 3.42093458843972, -0.797729669925675, -1.05612837364381, 0.219719230376191, 1.13805640106599, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -2.00502080213158, 0.0, -0.186193885683042, -0.20676113331396, 0.0211053289932664, 1.52590332283781, 0.665311364976816, -0.887711408578393, 0.206761133313969, 0.866606079585106, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.24693304436978, 0.0, -0.4213896206606, -0.190986381597388, 0.12177939174911, -0.287290075808842, 1.95561274083923, -0.70944044596047, 0.190986381597393, 0.587661054211342, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.565637101791928, 0.0, -0.499106683089034, -0.172668287842393, 0.208811153093764, -1.79697645922278, 2.86172024410375, -0.534713155031025, 0.172668287842396, 0.325902001937245, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0246461502196411, 0.0, -0.370369785754966, -0.152221529263852, 0.273011746419719, -2.8250007672312, 3.22001670320581, -0.375286500928615, 0.152221529263852, 0.102274754508881, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.333302235191036, 0.0, -0.0116194405560801, -0.130216263286511, 0.308440178576178, -3.25990798195353, 2.93822518731858, -0.24009201369495, 0.13021626328651, -0.068348164881241, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.490985526117988, 0.0, 0.570711664806186, -0.107375744739853, 0.31311277109591, -3.07106379229811, 2.00936660137394, -0.134458568775617, 0.107375744739851, -0.178654202320305, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.457962599165091, 0.0, 1.33963640509362, -0.0845552228169264, 0.289175697480939, -2.31183533282227, 0.514236328563563, -0.0598329857502676, 0.0845552228169241, -0.229342711730684, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.268232165241986, 0.0, 2.23118963045037, -0.0627023603915684, 0.242520577821235, -1.11143531220383, -1.38798648348852, -0.0140211704001038, 0.0627023603915662, -0.228499407421144, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0253645900460439, 0.0, 3.16170833906882, -0.042801938856327, 0.181898287464614, 0.343436225671393, -3.47977997469416, 0.00809764209780101, 0.0428019388563249, -0.189995929562428, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.359206577500588, 0.0, 4.0378778597467, -0.0258098539779894, 0.117653813918872, 1.83464072207857, -5.51331200432467, 0.013494252610181, 0.0258098539779876, -0.131148066529067, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.668298242297547, 0.0, 4.76822583681658, -0.0125831038403592, 0.0602562068936017, 3.14278636361002, -7.24271395812904, 0.00970906085489476, 0.0125831038403578, -0.0699652677485112, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.895703182760618, 0.0, 5.27451364344711, -0.00381381227616107, 0.0188276545776107, 4.07738093859805, -8.45619139928453, 0.00355291267173574, 0.00381381227615951, -0.0223805672493622, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -3.43634820617754, 0.0, 0.955361438579108, -0.347686758678537, -0.531171042952101, 6.27092434340972, -3.78993757581128, -2.32172429410618, 0.347686758678553, 2.85289533705825, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -3.17040134684959, 0.0, 0.773935401520185, -0.344455709360986, -0.451882206659194, 5.53109832009823, -3.13463237476882, -2.21269814089905, 0.344455709361003, 2.66458034755822, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -2.7241129880141, 0.0, 0.483438535323885, -0.33831840924138, -0.319265648897961, 4.30084589950939, -2.06017144681917, -2.02676544629666, 0.338318409241395, 2.34603109519459, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -2.14825961633648, 0.0, 0.140014545188739, -0.328789665777899, -0.149136069502368, 2.73876669899325, -0.730521627845504, -1.78015865641183, 0.32878966577791, 1.92929472591418, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.50747074284048, 0.0, -0.186193885683042, -0.315319478671282, 0.0384186695401692, 1.04566660409362, 0.647998024429914, -1.49381981322681, 0.315319478671291, 1.45540114368662, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.871858898790324, 0.0, -0.4213896206606, -0.297428869663575, 0.221678714883021, -0.562464898254388, 1.85571341770532, -1.19095707960612, 0.297428869663582, 0.969278364723078, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.308101310624499, 0.0, -0.499106683089034, -0.274852735712915, 0.380105265810749, -1.88321813767322, 2.69042613138676, -0.894433394068976, 0.274852735712918, 0.514328128258212, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.128914285025024, 0.0, -0.370369785754967, -0.247666943217322, 0.496971550153384, -2.7546013987422, 2.99605689947215, -0.62429235012675, 0.247666943217323, 0.127320799973352, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.402779357895681, 0.0, -0.0116194405560804, -0.216379324716327, 0.561462998155885, -3.07636228507847, 2.68520236773888, -0.395732197829412, 0.216379324716326, -0.165730800326486, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.499711897604171, 0.0, 0.570711664806186, -0.181968830746225, 0.569968659828757, -2.82293427505145, 1.7525107126411, -0.217778026268173, 0.181968830746224, -0.352190633560597, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.429627645216377, 0.0, 1.33963640509362, -0.1458638786725, 0.526395279794481, -2.04628079656001, 0.277016746250021, -0.092806687657128, 0.145863878672498, -0.433588592137367, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.224017564097302, 0.0, 2.23118963045037, -0.109859058870701, 0.441467552530214, -0.868273736350167, -1.58693345819749, -0.0169632677345533, 0.109859058870699, -0.424504284795674, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0690550028476118, 0.0, 3.16170833906882, -0.075977720500578, 0.331114961451362, 0.536343312459709, -3.62899664868091, 0.0186122732551177, 0.0759777205005762, -0.349727234706494, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.392135940164228, 0.0, 4.0378778597467, -0.0462954451394295, 0.214168800615736, 1.96408507143908, -5.60982699102154, 0.0259380241123812, 0.0462954451394276, -0.240106824728131, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.686745505774595, 0.0, 4.76822583681658, -0.0227450793386268, 0.109686198264297, 3.21066361845776, -7.29214394949974, 0.0179943488336755, 0.0227450793386249, -0.127680547097988, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.901760884363992, 0.0, 5.27451364344711, -0.00692784395960899, 0.0342725498220924, 4.09888353544591, -8.47163629452901, 0.00649658259166208, 0.00692784395960788, -0.0407691324137698, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -2.50200831679557, 0.0, 0.955361438579108, -0.367582382059899, -0.82983128368074, 5.03792421329912, -3.49127733508264, -3.27595980686951, 0.367582382059916, 4.10579109055022, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -2.28816218534667, 0.0, 0.773935401520185, -0.369919044502526, -0.705960907696352, 4.39478045755815, -2.88055367373166, -3.12040063754351, 0.369919044502542, 3.82636154523984, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.9303323263512, 0.0, 0.483438535323885, -0.372965555725257, -0.498778362968949, 3.32755252377551, -1.88065873274818, -2.85519325444343, 0.372965555725271, 3.35397161741235, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.47093131573677, 0.0, 0.140014545188739, -0.374928040181385, -0.232990441855482, 1.97758402604043, -0.646667255492389, -2.50362533141502, 0.374928040181397, 2.73661577327048, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.963845801812338, 0.0, -0.186193885683043, -0.373605835016831, 0.0600202407206598, 0.523643234245967, 0.626396453249424, -2.09573111060051, 0.37360583501684, 2.03571086987982, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.467364960606227, 0.0, -0.421389620660601, -0.366755492482626, 0.346321462694398, -0.842316088627109, 1.73107066989395, -1.66477764060927, 0.366755492482632, 1.31845617791485, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0366483865434977, 0.0, -0.499106683089034, -0.352476335457468, 0.593826122200706, -1.94095020536427, 2.47670527499681, -1.24350991789453, 0.352476335457471, 0.649683795693809, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.283319904290703, 0.0, -0.370369785754967, -0.329563403105201, 0.776402525869219, -2.62957604229204, 2.71662592375632, -0.86059442928031, 0.329563403105203, 0.0841919034110757, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.463358159987527, 0.0, -0.0116194405560808, -0.297776899020769, 0.877155422308966, -2.82124866301723, 2.3695099435858, -0.537708574225701, 0.297776899020769, -0.339446848083279, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.493550373931315, 0.0, 0.570711664806186, -0.257988127018452, 0.890443541528202, -2.49629786967914, 1.43203583094165, -0.287635798867545, 0.257988127018452, -0.602807742660671, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.384095245704858, 0.0, 1.33963640509362, -0.212178341574248, 0.822370263875126, -1.70477341296785, -0.0189582378306224, -0.113588751047358, 0.212178341574247, -0.708781512827783, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.163442736350575, 0.0, 2.23118963045037, -0.163286703802821, 0.68969043151056, -0.559476029623095, -1.83515633717784, -0.00981608491994634, 0.16328670380282, -0.679874346590628, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.126013461172874, 0.0, 3.16170833906882, -0.11492395290768, 0.517290159455973, 0.779476968789582, -3.81517184668552, 0.0366244991732766, 0.114923952907679, -0.553914658629264, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.434089613760271, 0.0, 4.0378778597467, -0.0709867337925427, 0.334588967334482, 2.12645891175387, -5.73024715774028, 0.0432004090553098, 0.0709867337925413, -0.377789376389807, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.709964473504781, 0.0, 4.76822583681658, -0.0352213900829041, 0.171359188185132, 3.29555557610878, -7.35381693942057, 0.0287370058195839, 0.0352213900829025, -0.20009619400473, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.909337372723622, 0.0, 5.27451364344711, -0.0107947768685133, 0.0535428924284229, 4.12573036641187, -8.49090663713534, 0.0102061380423876, 0.0107947768685122, -0.0637490304708259, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.574802512555, 0.0, 0.955361438579108, -0.231859921062388, -1.17698684403183, 3.76356284870746, -3.14412177473155, -4.06744315011257, 0.231859921062404, 5.24442999414437, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.41483693794417, 0.0, 0.773935401520185, -0.247348449291008, -1.00129594665781, 3.22612017119419, -2.5852186347702, -3.8711552897345, 0.247348449291024, 4.87245123639228, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.14839962483399, 0.0, 0.483438535323884, -0.272499514777391, -0.707439672192499, 2.33695851303475, -1.67199742352463, -3.53665991501277, 0.272499514777405, 4.24409958720524, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.809118210159441, 0.0, 0.140014545188739, -0.303060988058365, -0.330460769847964, 1.21830059247062, -0.549196927499908, -3.09357138486933, 0.303060988058376, 3.42403215471727, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.439605563476406, 0.0, -0.186193885683043, -0.333700046032777, 0.0851293932792046, 0.0245121484685803, 0.601287300690879, -2.58006555995239, 0.333700046032787, 2.49493616667316, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0857602196313259, 0.0, -0.421389620660601, -0.358769717850051, 0.491203228190171, -1.07903906410624, 1.58618890439817, -2.03839660695159, 0.358769717850057, 1.5471933787614, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.209301318923786, 0.0, -0.499106683089034, -0.373123444441439, 0.842250162433709, -1.93847587059855, 2.22828123476381, -1.51010673234579, 0.373123444441444, 0.667856569912061, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.410909636484645, 0.0, -0.370369785754967, -0.372870213029427, 1.10120644592707, -2.43236185442814, 2.39182200369847, -1.03149097139848, 0.372870213029429, -0.0697154745286048, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.49734859445972, 0.0, -0.0116194405560811, -0.355966579149674, 1.24410878757138, -2.48828573222701, 2.00255657832338, -0.629888688826801, 0.355966579149676, -0.614220098744594, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.462600626612638, 0.0, 0.570711664806185, -0.322563410177701, 1.26295592169435, -2.09283574219432, 1.0595234507755, -0.321261334708119, 0.322563410177702, -0.941694586986249, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.31696689657528, 0.0, 1.33963640509362, -0.275058125096877, 1.16640454576596, -1.29361078194744, -0.362992519721457, -0.10934018544041, 0.275058125096877, -1.05706436032557, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0854851803254146, 0.0, 2.23118963045037, -0.217842910532556, 0.978218802190734, -0.192990102917759, -2.12368470785801, 0.0135852643754776, 0.217842910532556, -0.991804066566226, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.195634264436341, 0.0, 3.16170833906882, -0.156780481110449, 0.733695781540399, 1.06550339413747, -4.03157746876994, 0.0643887742339747, 0.156780481110448, -0.798084555774389, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.484066975284805, 0.0, 4.0378778597467, -0.0984758912721375, 0.474562504999984, 2.3164098109439, -5.87022069540578, 0.0656886131002486, 0.0984758912721365, -0.540251118100247, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.737236351094012, 0.0, 4.76822583681658, -0.0494408551995473, 0.243046404810486, 3.39451467032336, -7.42550415604592, 0.0417894182921703, 0.0494408551995469, -0.284835823102672, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.918169765663139, 0.0, 5.27451364344711, -0.0152639446359712, 0.0759422803393734, 4.15696214726233, -8.51330602504629, 0.0145693632144467, 0.0152639446359698, -0.0905116435538362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.749801626878224, 0.0, 0.955361438579109, 0.116135757230847, -1.56009104096811, 2.5554577660944, -2.76101757779527, -4.54444835749611, -0.116135757230829, 6.10453939846419, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.640960312887143, 0.0, 0.773935401520185, 0.0777977286598466, -1.32721350596192, 2.12632598683306, -2.25930107546609, -4.31988573684067, -0.077797728659831, 5.64709924280256, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.461117137292955, 0.0, 0.483438535323885, 0.013990854056922, -0.937708267691637, 1.41940742999457, -1.44172882802549, -3.9374520337195, -0.0139908540569074, 4.87516030141111, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.235374423216632, 0.0, 0.140014545188739, -0.0671506034257102, -0.438024340752349, 0.536993234623426, -0.441633356595522, -3.43140478717949, 0.0671506034257225, 3.86942912793181, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0045819357532651, 0.0, -0.186193885683043, -0.155323094522727, 0.11283864764622, -0.391966096394076, 0.573578046323865, -2.84587610767201, 0.155323094522736, 2.73303746002576, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.224839350352641, 0.0, -0.421389620660601, -0.239435913110453, 0.651087783589012, -1.22975407869136, 1.42630434899933, -2.22966237219596, 0.23943591311046, 1.57857458860693, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.39389347852018, 0.0, -0.499106683089034, -0.309082483467602, 1.11639899743114, -1.84891919519751, 1.95413239976638, -1.63065793096835, 0.309082483467608, 0.514258933537187, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.486963618092846, 0.0, -0.370369785754967, -0.35591361108561, 1.45964444654464, -2.14997783541876, 2.03338400308089, -1.09058835106286, 0.355913611085613, -0.369056095481794, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.489406057044837, 0.0, -0.0116194405560814, -0.374729166562414, 1.64906089080069, -2.07539109158282, 1.59760447509407, -0.640708738824659, 0.374729166562417, -1.00835215197605, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.398762504028362, 0.0, 0.570711664806185, -0.364142121624683, 1.67404268668249, -1.6179108546219, 0.648436685787362, -0.299001923570826, 0.364142121624685, -1.37504076311168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.225164634256041, 0.0, 1.33963640509362, -0.326726591590216, 1.54606424975873, -0.822148815635429, -0.742652223714226, -0.0692063896145117, 0.326726591590217, -1.47685786014424, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0099623090705141, 0.0, 2.23118963045037, -0.268631242944805, 1.29662484941341, 0.220863433700841, -2.44209075508068, 0.0582444213591569, 0.268631242944805, -1.35486927077258, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.276724147309117, 0.0, 3.16170833906882, -0.198711625193946, 0.972510628628851, 1.3854081240987, -4.27039231585839, 0.103547513023252, 0.198711625193946, -1.07605814165212, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.540731244070234, 0.0, 4.0378778597467, -0.127299950896346, 0.629030575986491, 2.52754215071584, -6.02468876639229, 0.0935288222614687, 0.127299950896346, -0.722559398247974, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.76768505354442, 0.0, 4.76822583681658, -0.0647800050625715, 0.322156972787791, 3.50407394075108, -7.50461472402323, 0.0568989708795559, 0.0647800050625703, -0.379055943667362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.927948793748651, 0.0, 5.27451364344711, -0.0201638798586967, 0.100661168634898, 4.19146006364337, -8.53802491334181, 0.0194484560772323, 0.0201638798586961, -0.120109624712145, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.103524917869612, 0.0, 0.955361438579109, 0.710529341292211, -1.96529768085851, 1.50397441719539, -2.35581093790487, -4.59633148244336, -0.710529341292193, 6.56162916330184, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0392398630168386, 0.0, 0.773935401520185, 0.638506040288654, -1.67193423766631, 1.17988480525837, -1.91458034376171, -4.36089787508216, -0.638506040288638, 6.03283211274844, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0652975887793433, 0.0, 0.483438535323885, 0.517528893586829, -1.18126175679634, 0.64943921481757, -1.19817533892079, -3.96032872026189, -0.517528893586814, 5.1415904770582, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.192667178236792, 0.0, 0.140014545188739, 0.361173371277439, -0.551793580268219, -0.00481760634586792, -0.327864117079651, -3.43112241392976, -0.361173371277427, 3.98291599419795, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.321011497335485, 0.0, -0.186193885683043, 0.186729425837409, 0.142146532931, -0.679087772691515, 0.544270161039085, -2.82025314889409, -0.186729425837398, 2.67810661596307, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.427168356910191, 0.0, -0.421389620660601, 0.0129726152941945, 0.820196563867684, -1.26297430497024, 1.25719556872066, -2.17958285034887, -0.012972615294186, 1.35938628648116, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.489999601193644, 0.0, -0.499106683089034, -0.142211086820167, 1.40636431012557, -1.65506000517654, 1.66416708707195, -1.55989265699438, 0.142211086820174, 0.153528346868786, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.493477960988571, 0.0, -0.370369785754968, -0.26405130779276, 1.838761822446, -1.77737480241313, 1.65426662717953, -1.00524039066574, 0.264051307792765, -0.83352143178028, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.429108569992234, 0.0, -0.0116194405560816, -0.342677503976868, 2.0773759089559, -1.58677858637501, 1.16928945693886, -0.548359589186511, 0.342677503976871, -1.52901631976941, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.297349583482716, 0.0, 0.570711664806185, -0.374227851961202, 2.10884629383788, -1.08169432692087, 0.213633078631981, -0.207674733361701, 0.374227851961205, -1.90117156047619, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.107830787350571, 0.0, 1.33963640509362, -0.361140734943492, 1.94762767346166, -0.303251545027028, -1.14421564741716, 0.0137133139376817, 0.361140734943493, -1.96134098739936, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.121668845276794, 0.0, 2.23118963045037, -0.31159731659343, 1.63340070712436, 0.669345827618078, -2.77886661279164, 0.12698488391681, 0.311597316593432, -1.76038559104119, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.367355972657788, 0.0, 3.16170833906882, -0.238198282930203, 1.22510342849511, 1.72863274931363, -4.52298511572465, 0.154692680635666, 0.238198282930203, -1.37979610913079, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.602390611899946, 0.0, 4.0378778597467, -0.156060992401065, 0.792410378440612, 2.75258132099967, -6.18806856884641, 0.126427148586461, 0.156060992401065, -0.918837527027087, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.800293215703047, 0.0, 4.76822583681658, -0.0806013352772927, 0.405831669348832, 3.62035679947074, -7.58828942058427, 0.0736858028234595, 0.0806013352772924, -0.479517472172307, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.938328567302508, 0.0, 5.27451364344711, -0.0253099435229447, 0.126806164560695, 4.22798483312302, -8.56416990926761, 0.0246821659668421, 0.0253099435229436, -0.151488330527553, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.315516900792423, 0.0, 0.955361438579109, 1.55499082729802, -2.37796165083881, 0.672268628553052, -1.94314696792457, -4.17091181509959, -1.554990827298, 6.54887346593836, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.34448181870793, 0.0, 0.773935401520186, 1.43860619245399, -2.02299913067527, 0.445098230524638, -1.56351545075274, -3.9445194046416, -1.43860619245398, 5.96751853531683, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.389533481732774, 0.0, 0.483438535323884, 1.2422007807738, -1.42929754846966, 0.0771675301908221, -0.950139547247467, -3.55989272602835, -1.24220078077378, 4.98919027449798, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.43966441683077, 0.0, 0.140014545188739, 0.986302064545831, -0.667656602781761, -0.367677867453388, -0.212001094566108, -3.05299095925535, -0.986302064545816, 3.72064756203708, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.481199840912545, 0.0, -0.186193885683043, 0.697141717454085, 0.171993793816498, -0.809428855383077, 0.514422900153587, -2.47002920085448, -0.697141717454073, 2.29803540703795, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.499889707108274, 0.0, -0.421389620660601, 0.403357685384067, 0.992417583363311, -1.1634746356727, 1.08497454922504, -1.86191913045708, -0.403357685384057, 0.869501547093742, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.483128483559971, 0.0, -0.499106683089034, 0.13247732810134, 1.7016660779481, -1.35288711972034, 1.36886531924942, -1.2783331244392, -0.132477328101332, -0.423332953508921, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.422001106555869, 0.0, -0.370369785754968, -0.092387305932007, 2.22485638760486, -1.31980338282156, 1.26817206202067, -0.762099534372287, 0.0923873059320131, -1.4627568532326, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.312867749071202, 0.0, -0.0116194405560816, -0.255202337199841, 2.51357353849602, -1.03434013591385, 0.733091827398742, -0.344643601488454, 0.255202337199846, -2.16892993700759, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.158260513599786, 0.0, 0.570711664806185, -0.348689428565521, 2.55165192688235, -0.499799623993468, -0.229172554412491, -0.0430472400830904, 0.348689428565525, -2.50860468679928, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0330428202380135, 0.0, 1.33963640509362, -0.374807852831772, 2.35658137833914, 0.246575767439028, -1.55316935229463, 0.140919803637985, 0.374807852831775, -2.49750118197714, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.246792088396228, 0.0, 2.23118963045037, -0.343993242575478, 1.97637451050062, 1.13744287411377, -3.12184041616789, 0.219712201054196, 0.34399324257548, -2.19608671155483, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.464794626070283, 0.0, 3.16170833906882, -0.273272783330201, 1.4823448883326, 2.08331286256362, -4.78022657556214, 0.217056833648163, 0.273272783330201, -1.69940172198078, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.667008385072932, 0.0, 4.0378778597467, -0.183527705043222, 0.958796985317413, 2.98358570104946, -6.35445517572321, 0.16357820911729, 0.183527705043222, -1.12237519443472, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.833927066737322, 0.0, 4.76822583681658, -0.0962882618895096, 0.491046295839443, 3.73920527699563, -7.67350404707488, 0.0916327272455192, 0.0962882618895087, -0.582679023084977, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.948938000703082, 0.0, 5.27451364344711, -0.0305120812886877, 0.153432326996675, 4.26522042895958, -8.59079607170359, 0.030089461601673, 0.0305120812886869, -0.183521788598364, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.492178658264003, 0.0, 0.955361438579109, 2.61899936289641, -2.78316829072921, 0.0904002311910701, -1.53794032803417, -3.28356503697277, -2.61899936289639, 6.06673332770195, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.496336115439377, 0.0, 0.773935401520185, 2.44918065722166, -2.36771986237966, -0.0514767979111959, -1.21879471904835, -3.08579923660538, -2.44918065722164, 5.453519098985, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.499871883013932, 0.0, 0.483438535323884, 2.16181514509485, -1.67285103757436, -0.276724360195042, -0.70658605814276, -2.75061676298846, -2.16181514509483, 4.42346780056279, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.496690223213569, 0.0, 0.140014545188739, 1.78564183431961, -0.781425842297631, -0.538472913352056, -0.0982318550502377, -2.31067699586438, -1.78564183431959, 3.09210283816197, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.479357377659113, 0.0, -0.186193885683043, 1.35746626264987, 0.201301679101279, -0.778278506844864, 0.485115014868807, -1.80786219240526, -1.35746626264986, 1.60656051330395, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.440375077892487, 0.0, -0.421389620660601, 0.917609849562052, 1.16152636364198, -0.934851226178236, 0.915865768946364, -1.28815233706331, -0.91760984956204, 0.126625973421298, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.373528464199742, 0.0, -0.499106683089034, 0.505054866782468, 1.99163139064253, -0.953321787665686, 1.07890000655499, -0.796155566397843, -0.505054866782458, -1.19547582424471, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.275116398803751, 0.0, -0.370369785754968, 0.152874048008686, 2.60397376350622, -0.793801299168085, 0.889054686119314, -0.369953472679479, -0.152874048008678, -2.23402029082677, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.144884814812672, 0.0, -0.0116194405560819, -0.115465227408367, 2.94188855665123, -0.438042183500113, 0.304776809243535, -0.0369235574384519, 0.115465227408374, -2.9049649992128, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0134776948733418, 0.0, 0.570711664806184, -0.288449870974558, 2.98645553403773, 0.10674219163504, -0.663976161567871, 0.188930525980999, 0.288449870974562, -3.17538606001875, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.192364680313382, 0.0, 1.33963640509362, -0.36723398301515, 2.75814480204207, 0.807461051217327, -1.95473277599756, 0.307815533529974, 0.367233983015154, -3.06596033557206, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.38080978597288, 0.0, 2.23118963045037, -0.364648154853732, 2.31315036821157, 1.60823642940137, -3.45861627387885, 0.333074986352592, 0.364648154853735, -2.64622535456419, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.565518442197207, 0.0, 3.16170833906882, -0.302667450288204, 1.73493768819886, 2.4366294785568, -5.0328193754284, 0.288385982817083, 0.302667450288205, -2.02332367101596, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.732249123137496, 0.0, 4.0378778597467, -0.208707376313088, 1.12217678777153, 3.21220624156814, -6.51783497817733, 0.203639275911987, 0.208707376313089, -1.32581606368354, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.867370999045891, 0.0, 4.76822583681658, -0.111273821954289, 0.574720992400483, 3.85632390586524, -7.75717874363592, 0.110091099489307, 0.111273821954289, -0.684812091889805, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.959393643721176, 0.0, 5.27451364344711, -0.0355822754886983, 0.179577322922473, 4.30182106790347, -8.61694106762939, 0.0354749104197567, 0.0355822754886974, -0.215052233342246, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.445228153040374, 0.0, 0.955361438579108, 3.83894643209006, -3.16627248766549, -0.245753460521581, -1.15483613109788, -2.01666746255551, -3.83894643209003, 5.18293995022096, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.434929671538347, 0.0, 0.773935401520185, 3.60960990413057, -2.69363742168376, -0.31598791331427, -0.892877159744245, -1.86396354579544, -3.60960990413055, 4.55760096747916, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.414610121410139, 0.0, 0.483438535323884, 3.22084976307399, -1.9031196330735, -0.421731194090386, -0.476317462643621, -1.60632038340553, -3.22084976307397, 3.50944001647899, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.381555307510686, 0.0, 0.140014545188739, 2.71043092159795, -0.888989413202016, -0.530901568553558, 0.0093317158541486, -1.27075299288315, -2.71043092159793, 2.15974240608513, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.332597476615796, 0.0, -0.186193885683043, 2.12679061443291, 0.229010933468293, -0.60380935143453, 0.457405760501792, -0.891777939578905, -2.1267906144329, 0.662767006110578, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.264799917570883, 0.0, -0.421389620660601, 1.52311838460722, 1.32141091904082, -0.599391510457792, 0.755981213547524, -0.507068641696538, -1.52311838460721, -0.814342277344315, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.176178447389749, 0.0, -0.499106683089034, 0.951038004162693, 2.26578022563996, -0.48182293585826, 0.80475117155756, -0.152822412207627, -0.951038004162681, -2.11295781343236, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0663487086627714, 0.0, -0.370369785754968, 0.454652321701684, 2.9624117641238, -0.22659560840953, 0.53061668550174, 0.140592491154498, -0.454652321701675, -3.10300425527832, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0630012618009117, 0.0, -0.0116194405560818, 0.0657157243775943, 3.34684065988054, 0.174795996342781, -0.100175293985775, 0.352143470961092, -0.065715724377587, -3.69898413084166, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.207891371798767, 0.0, 0.570711664806184, -0.199453028080391, 3.39754229902588, 0.71224263354861, -1.07506292655601, 0.47234104580059, 0.199453028080397, -3.86988334482649, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.362127634396818, 0.0, 1.33963640509362, -0.340941757744291, 3.13780450603484, 1.35688370929353, -2.33439247999033, 0.503870712884268, 0.340941757744296, -3.64167521891912, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.517683231092376, 0.0, 2.23118963045037, -0.374010531542412, 2.63155641543425, 2.06351592174354, -3.77702232110152, 0.460586054783408, 0.374010531542416, -3.09214247021768, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.665346496346793, 0.0, 3.16170833906882, -0.325860423094892, 1.97375253528731, 2.77527237979484, -5.27163422251685, 0.365021064159981, 0.325860423094894, -2.33877359944731, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.79556305405014, 0.0, 4.0378778597467, -0.230881773810084, 1.27664485875804, 3.42998824346729, -6.67230304916384, 0.244778809327635, 0.230881773810085, -1.52142366808569, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.89937150674085, 0.0, 4.76822583681658, -0.125061166572762, 0.653831560377787, 3.9674349815375, -7.83628931161322, 0.128304262565794, 0.125061166572762, -0.782135822943597, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.969313541437546, 0.0, 5.27451364344711, -0.0403413410805671, 0.204296211217996, 4.33645985391536, -8.64165995592491, 0.0406357425442566, 0.0403413410805662, -0.244931953762269, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.223064261594389, 0.0, 0.955361438579108, 5.12403858877413, -3.51342804801658, -0.370745129426685, -0.807680570746794, -0.509411414425456, -5.1240385887741, 4.02283946244199, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.207219864923586, 0.0, 0.773935401520185, 4.83321555335935, -2.98897246064522, -0.383613145660968, -0.597542120782784, -0.412648089951906, -4.83321555335932, 3.40162055059708, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.178207445737246, 0.0, 0.483438535323884, 4.33965118121196, -2.11178094229705, -0.393989827641042, -0.26765615342007, -0.251116289594674, -4.33965118121193, 2.36289723189168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.135317444779775, 0.0, 0.140014545188739, 3.69034894202922, -0.986459741194499, -0.382134033815127, 0.106802043846631, -0.0445971097209784, -3.69034894202919, 1.03105685091544, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0778756756605858, 0.0, -0.186193885683043, 2.94565844270811, 0.254120086026839, -0.323978397920774, 0.432296607943248, 0.181811689651498, -2.94565844270809, -0.435931775678374, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00554955165183336, 0.0, -0.421389620660601, 2.17195926613375, 1.4662926845366, -0.195259379042967, 0.611099448051751, 0.401022605749036, -2.17195926613373, -1.86731529028567, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.081331979952381, 0.0, -0.499106683089034, 1.43385102798813, 2.51420426587296, 0.0241115317168737, 0.556327131324557, 0.587501038959942, -1.43385102798812, -3.10170530483293, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.181501522425236, 0.0, -0.370369785754968, 0.786785475059409, 3.28721568418164, 0.346058542736326, 0.205812765443892, 0.720575875600228, -0.786785475059397, -4.0077915597819, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.292568001732669, 0.0, -0.0116194405560818, 0.271083218652638, 3.71379402514295, 0.771316101536954, -0.46712865924819, 0.787077705167892, -0.271083218652629, -4.50087173031087, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.410960329802128, 0.0, 0.570711664806184, -0.0919091005549551, 3.77005467919202, 1.28782397171812, -1.44757530672216, 0.782953931329385, 0.0919091005549622, -4.55300861052143, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.532020492538761, 0.0, 1.33963640509362, -0.301057032254555, 3.48183878792567, 1.87081084932631, -2.67842676188116, 0.713648296515947, 0.30105703225456, -4.19548708444164, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.650246741784752, 0.0, 2.23118963045037, -0.373960783604933, 2.92008478611442, 2.48460780311609, -4.0655506917817, 0.593199313413261, 0.373960783604937, -3.5132840995277, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.759667169858658, 0.0, 3.16170833906882, -0.343017081049263, 2.19015815737174, 3.08599867539113, -5.48803984460128, 0.442185079717473, 0.343017081049265, -2.63234323708923, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.854305720860421, 0.0, 4.0378778597467, -0.249605626003931, 1.41661839642354, 3.62870444794307, -6.81227658682934, 0.284797623944068, 0.249605626003933, -1.70141602036763, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.928688908817234, 0.0, 4.76822583681658, -0.137235107202252, 0.72551877700314, 4.06843960023924, -7.90797652823858, 0.145447724012687, 0.137235107202252, -0.870966501015844, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.978331622806991, 0.0, 5.27451364344711, -0.0446248204180955, 0.226695599128947, 4.36787732319576, -8.66405934383586, 0.0453703445761733, 0.0446248204180951, -0.272065943705136, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.104723374422954, 0.0, 0.955361438579107, 6.36627049079207, -3.81208828874522, -0.341617734137978, -0.509020330018155, 1.06060812360983, -6.36627049079204, 2.75148016513534, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.119592032880062, 0.0, 0.773935401520185, 6.01680327752438, -3.24305116168238, -0.310879948894477, -0.343463419745626, 1.09775153201676, -6.01680327752434, 2.14529962966557, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.146250101300647, 0.0, 0.483438535323884, 5.42324224342887, -2.29129365636804, -0.249044994674134, -0.0881434393490836, 1.15693231966013, -5.42324224342884, 1.13436133670786, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.184488706545264, 0.0, 0.140014545188738, 4.64134501955047, -1.07031411354761, -0.146182254843201, 0.190656416199745, 1.22620511912531, -4.64134501955045, -0.155891005577746, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.233880758616505, 0.0, -0.186193885683043, 3.7427534616678, 0.275721657207328, 0.0093796075368085, 0.410695036762758, 1.29066314288827, -3.74275346166777, -1.56638480009564, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.293682102755427, 0.0, -0.421389620660601, 2.80635823590606, 1.59093543234797, 0.22861502317567, 0.486456700240375, 1.3346532299286, -2.80635823590604, -2.92558866227661, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.362730670060135, 0.0, -0.499106683089034, 1.90907904243234, 2.72792512226291, 0.519231078214584, 0.342606274934601, 1.3441277435119, -1.90907904243232, -4.07205286577484, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.439368049859932, 0.0, -0.370369785754968, 1.1171611618719, 3.56664665989748, 0.883356045886856, -0.0736182102719415, 1.30881808984742, -1.11716116187189, -4.87546474974493, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.521402402007353, 0.0, -0.0116194405560818, 0.479098846714726, 4.02948644929603, 1.31584292596472, -0.78282108340127, 1.22392773350466, -0.479098846714716, -5.25341418280072, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.606126656951536, 0.0, 0.570711664806184, 0.0210764066493694, 4.09052956089147, 1.80346518056697, -1.76805018842161, 1.09110576568312, -0.021076406649361, -5.18163532657461, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.690399016274198, 0.0, 1.33963640509362, -0.254525370932386, 3.77781377200632, 2.32516435714239, -2.97440174596181, 0.918558481573552, 0.254525370932391, -4.69637225357989, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.77078458986762, 0.0, 2.23118963045037, -0.367425408200911, 3.16830766509477, 2.8533685301793, -4.31377357076204, 0.720272536900151, 0.367425408200916, -3.88858020199494, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.843748655901883, 0.0, 3.16170833906882, -0.354840285738402, 2.37633335537635, 3.35625535943896, -5.67421504260589, 0.514443361071559, 0.354840285738404, -2.89077671644792, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.90588461174833, 0.0, 4.0378778597467, -0.264671697365178, 1.53703856314229, 3.80070350554973, -6.93269675354808, 0.321310443470729, 0.26467169736518, -1.85834900661303, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.954154075284697, 0.0, 4.76822583681658, -0.147465219209253, 0.787191766923975, 4.15557775662754, -7.96964951815941, 0.160682778473148, 0.147465219209253, -0.947874545397141, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.986112016384794, 0.0, 5.27451364344711, -0.0482878481088265, 0.245965941735277, 4.39492805937989, -8.6833296864422, 0.0494877104632455, 0.048287848108826, -0.295453652198539, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.458690107858419, 0.0, 0.955361438579107, 7.45315080982493, -4.0514600646383, -0.22702277659559, -0.269648554125076, 2.50145517607815, -7.45315080982489, 1.55000488856009, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.468939383827885, 0.0, 0.773935401520184, 7.0528438106582, -3.44669149136098, -0.165172927625257, -0.13982309006702, 2.48313941609841, -7.05284381065816, 0.963552075262524, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.48714485253883, 0.0, 0.483438535323884, 6.37257130525701, -2.43517044779406, -0.0520270348619671, 0.055733352076935, 2.44715613272645, -6.37257130525698, -0.0119856849324411, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.512899826889188, 0.0, 0.140014545188738, 5.47564555185898, -1.13752215562778, 0.115020823420553, 0.257864458279916, 2.38891677177774, -5.47564555185895, -1.25139461615, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.545591631214166, 0.0, -0.186193885683043, 4.44345604819923, 0.29303499775423, 0.338403820681372, 0.393381696215855, 2.30307660201737, -4.44345604819921, -2.59611159977164, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.584390081145208, 0.0, -0.421389620660601, 3.36569787180911, 1.69083475548188, 0.619222324699364, 0.386557377106462, 2.18470084422143, -3.36569787180909, -3.87553559970335, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.628237845937604, 0.0, -0.499106683089034, 2.32993756160671, 2.8992192349799, 0.956032366809038, 0.171312162217616, 2.03049343856374, -2.3299375616067, -4.92971267354368, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.675850876325833, 0.0, -0.370369785754968, 1.411759009629, 3.79060646363114, 1.34379867608642, -0.297578014005607, 1.83989876407041, -1.41175900962899, -5.63050522770159, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.725733903864437, 0.0, -0.011619440556082, 0.666744409846641, 4.28250926887574, 1.77319724740151, -1.03584390298098, 1.61590479849366, -0.666744409846629, -5.89841406736943, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.776214330064238, 0.0, 0.570711664806184, 0.125297365241882, 4.34738544962432, 2.23040874241252, -2.02490607715445, 1.36541439738833, -0.125297365241873, -5.71279984701267, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.825495658384399, 0.0, 1.33963640509362, -0.209072338626471, 4.01503335431986, 2.69748058156614, -3.21162132827535, 1.09910815598967, 0.209072338626478, -5.11414151030955, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.871729125889336, 0.0, 2.23118963045037, -0.357852171803014, 3.36725463980375, 3.15326004091, -4.51272054547102, 0.830790309319763, 0.357852171803019, -4.19804494912353, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.913099677316599, 0.0, 3.16170833906882, -0.362355458769505, 2.5255500293631, 3.57482305484043, -5.82343171659264, 0.576279209455172, 0.362355458769508, -3.10182923881829, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.947920219345662, 0.0, 4.0378778597467, -0.276051043592926, 1.63355354983915, 3.93925409984392, -7.02921174024495, 0.351966704840313, 0.276051043592928, -1.98552025467948, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.974726426980655, 0.0, 4.76822583681658, -0.155502106488611, 0.836621758294671, 4.22558009969419, -8.01907950953011, 0.173218242889748, 0.155502106488611, -1.00984000118444, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.992362629047072, 0.0, 5.27451364344711, -0.0512089687333726, 0.261410836979759, 4.41662356728665, -8.69877458168668, 0.0528172025009771, 0.0512089687333719, -0.314228039480753, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.762098386874954, 0.0, 0.955361438579107, 8.28146774818307, -4.22289680757415, -0.0950512405149053, -0.0982118111892243, 3.63318039345282, -8.28146774818303, 0.589716414121272, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.766940864431562, 0.0, 0.773935401520184, 7.84265115313093, -3.59253756999841, -0.0130175256590077, 0.00602298857040839, 3.57094823917481, -7.84265115313089, 0.0215893308235446, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.775502266411418, 0.0, 0.483438535323883, 7.09668600968232, -2.53821421063582, 0.133286616168861, 0.158777114918695, 3.45962825102434, -7.09668600968229, -0.92141404038858, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.787528595620871, 0.0, 0.140014545188738, 6.11258952149254, -1.18565618392052, 0.3415155638595, 0.305998486572654, 3.30048951014298, -6.11258952149251, -2.11483332622251, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.802655449095625, 0.0, -0.186193885683043, 4.97911358172254, 0.305434716566635, 0.607867357375238, 0.38098197740345, 3.09579795342213, -4.97911358172251, -3.40123266998882, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.820415904843638, 0.0, -0.421389620660601, 3.7941162039464, 1.76238209858729, 0.926795491503207, 0.315010034001049, 2.84914500005715, -3.79411620394638, -4.61152709864449, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.840250066009653, 0.0, -0.499106683089034, 2.65321155515296, 3.02189913180033, 1.29072448370152, 0.0486322653971835, 2.56577965218203, -2.65321155515294, -5.5876787839824, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.861518091660288, 0.0, -0.370369785754968, 1.63904788202239, 3.95100523728523, 1.68986466507497, -0.457976787659699, 2.25285485179826, -1.63904788202238, -6.20386008908352, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.88351718771988, 0.0, -0.011619440556082, 0.812577316606882, 4.46372281385343, 2.11219407623464, -1.21705744795867, 1.91952098910934, -0.812577316606869, -6.3832438029628, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.905502643519249, 0.0, 0.570711664806184, 0.207412301789373, 4.5313442175449, 2.54365582378812, -2.20886484507504, 1.57681764739083, -0.207412301789364, -6.10816186493576, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.926712592134245, 0.0, 1.33963640509362, -0.172057662776588, 4.18492870810878, 2.9685928691049, -3.38151668206427, 1.2373397655894, 0.172057662776596, -5.4222684736982, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.946395732540212, 0.0, 2.23118963045037, -0.348625184952259, 3.50973936355114, 3.37041137130827, -4.65520526921842, 0.914683902821393, 0.348625184952265, -4.42442326637256, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.963840827011164, 0.0, 3.16170833906882, -0.366665452713325, 2.63241818658242, 3.73243236175431, -5.93029987381195, 0.622710365205917, 0.366665452713328, -3.25512855178835, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.978406430151057, 0.0, 4.0378778597467, -0.283820327503545, 1.70267704989288, 4.03886381070305, -7.09833524029868, 0.374683631735089, 0.283820327503547, -2.07736068162799, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.989549036900306, 0.0, 4.76822583681658, -0.161169275405677, 0.872023244924926, 4.2758041962441, -8.05448099616036, 0.182373683892333, 0.161169275405677, -1.05439692881728, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.996847344852231, 0.0, 5.27451364344711, -0.0532929976179446, 0.272472385593085, 4.43216983170514, -8.7098361303, 0.0552178894215646, 0.053292997617944, -0.327690275014666, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.952917925769819, 0.0, 0.955361438579106, 8.77034113251606, -4.3202420876949, -0.00157698174079246, -0.000866531068470788, 4.31287331668066, -8.77034113251601, 0.00736877101417521, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.953910725785576, 0.0, 0.773935401520184, 8.30887841618783, -3.67535194885526, 0.0911379568381576, 0.0888373674272573, 4.22414536358572, -8.30887841618779, -0.548793414730521, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.955662170838869, 0.0, 0.483438535323883, 7.52427779357209, -2.59672456137365, 0.254936169858484, 0.217287465656524, 4.06737993934156, -7.52427779357205, -1.47065537796797, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.958114323361916, 0.0, 0.140014545188738, 6.48890521189975, -1.21298766716767, 0.484769808353398, 0.333329969819801, 3.84739092829123, -6.48890521189971, -2.63440326112362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.961185370308188, 0.0, -0.186193885683043, 5.29583469826822, 0.312475529875038, 0.773438091896205, 0.373941164095046, 3.57104899118037, -5.29583469826818, -3.88352452105546, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.964772503729391, 0.0, -0.421389620660601, 4.04771719412419, 1.80300813964022, 1.11177813144189, 0.274383992948122, 3.24710258912069, -4.04771719412416, -5.05011072876095, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.968755213962437, 0.0, -0.499106683089034, 2.84489340793634, 3.09155928000811, 1.48888977986208, -0.0210278828105944, 2.88596665291819, -2.84489340793632, -5.97752593292634, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.972999177335543, 0.0, -0.370369785754968, 1.77416259369933, 4.04208293326214, 1.89242344672713, -0.549054483636609, 2.49945064915045, -1.77416259369931, -6.54153358241262, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.977360656150231, 0.0, -0.0116194405560821, 0.89963511712288, 4.56661956163013, 2.30893429244169, -1.31995419573536, 2.10042225805569, -0.899635117122866, -6.66704181968585, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.981691287935535, 0.0, 0.570711664806184, 0.25681494041329, 4.63579975891387, 2.72430000957338, -2.31332038644401, 1.70240893043104, -0.256814940413281, -6.33820868934493, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.985843115840471, 0.0, 1.33963640509362, -0.149382490896518, 4.28139875602602, 3.12419344072837, -3.47798672998151, 1.31914546117569, 0.149382490896526, -5.60054421720173, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.989673691872322, 0.0, 2.23118963045037, -0.342505176776641, 3.59064509652641, 3.49459506361565, -4.73611100219369, 0.964081870329121, 0.342505176776647, -4.55472696685556, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.993051069990859, 0.0, 3.16170833906882, -0.368714372190138, 2.69310010646931, 3.8223245246209, -5.99098179369884, 0.649871688708799, 0.368714372190141, -3.34297179517813, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.99585849778073, 0.0, 4.0378778597467, -0.288090510224147, 1.74192678341223, 4.09556561185207, -7.13758497381803, 0.387865516644159, 0.28809051022415, -2.12979230005641, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.997998609374343, 0.0, 4.76822583681658, -0.164354217367199, 0.892124931259475, 4.30435545505268, -8.07458268249491, 0.187638314404849, 0.164354217367199, -1.07976324566434, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999396852938814, 0.0, 5.27451364344711, -0.0544733567751812, 0.278753358562436, 4.44100031276107, -8.71611710326935, 0.0565870383509109, 0.0544733567751808, -0.335340396913363, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_C1_D10[256][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -5.3165577021878, 0.952917925769816, 0.0, -0.0217763713045874, -0.022150712933927, -0.111053494146381, 0.0221507129339268, 8.65315974005328, -4.2895199636353, 0.132829865450969, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -4.94974865622051, 0.953910725785575, 0.0, -0.114002802586152, -0.10841878691355, -0.566131999545791, 0.10841878691355, 8.19711844827269, -4.20128051783775, 0.680134802131944, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -4.33205225035761, 0.955662170838868, 0.0, -0.276938797361328, -0.231122209548859, -1.31006172671357, 0.231122209548859, 7.42176739135748, -4.04537731183874, 1.5870005240749, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -3.53018929772946, 0.958114323361915, 0.0, -0.505564368270922, -0.339792485702095, -2.22553527789345, 0.339792485702095, 6.39867134274128, -3.82659636837373, 2.73109964616437, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -2.62928673065267, 0.961185370308189, 0.0, -0.792718207664022, -0.37227636722257, -3.16510597903011, 0.37227636722257, 5.21987023575706, -3.55176887541258, 3.95782418669413, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.72204722474024, 0.964772503729393, 0.0, -1.12928723239971, -0.264777985357334, -3.97206647372091, 0.264777985357334, 3.98686820917375, -3.2295934881629, 5.10135370612061, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.897203686455049, 0.968755213962438, 0.0, -1.50442996134614, 0.0374989908761695, -4.50264332752421, -0.0374989908761686, 2.79887494392678, -2.87042647143416, 6.00707328887034, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.228683857944156, 0.972999177335543, 0.0, -1.90586255132708, 0.570589760425348, -4.64660212283701, -0.570589760425347, 1.74169622515914, -2.48601154455052, 6.55246467416409, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.233098651787214, 0.977360656150231, 0.0, -2.32021092731482, 1.34428408155718, -4.34344980842697, -1.34428408155718, 0.878686315245138, -2.08914562318258, 6.66366073574179, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.466695414241415, 0.981691287935535, 0.0, -2.73342625973677, 2.33801884825039, -3.59200293012439, -2.33801884825039, 0.244895978090721, -1.69328268026767, 6.32542918986115, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.48112664742516, 0.985843115840469, 0.0, -3.13125510207924, 3.50079702575631, -2.45198229189198, -3.50079702575631, -0.154885963440794, -1.31208379982483, 5.58323739397122, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.313281613098642, 0.989673691872319, 0.0, -3.49974930090726, 4.75524112329228, -1.03737004000651, -4.75524112329228, -0.344027671933429, -0.958927633037532, 4.53711934091377, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0216142088802487, 0.993051069990856, 0.0, -3.82579495630862, 6.00533000405727, 0.497621721829024, -6.00533000405727, -0.368264021850016, -0.646401257021089, 3.3281732344796, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.32296936661597, 0.995858497780725, 0.0, -4.09763493164838, 7.14686555416384, 1.97812078784502, -7.14686555416384, -0.287092934316899, -0.385796196847857, 2.11951414380337, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.647756691572696, 0.997998609374338, 0.0, -4.30535581634561, 8.07933571642372, 3.23109585728756, -8.07933571642372, -0.163603964689715, -0.186637953111928, 1.07425995905805, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.888916839894248, 0.999396852938808, 0.0, -4.44130185597003, 8.7176022362643, 4.10772543092418, -8.7176022362643, -0.0541945179026181, -0.0562854951419437, 0.333576425045852, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -4.92803860051349, 0.762098386874952, 0.0, -0.0187673687666582, -0.0221507129339267, -0.108044491608452, 0.0221507129339266, 7.68530199780982, -3.51936178417127, 0.12681186037511, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -4.58174290458663, 0.766940864431561, 0.0, -0.0985956700199824, -0.10841878691355, -0.550724866979622, 0.10841878691355, 7.27413708365091, -3.45933504349585, 0.649320536999604, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -3.99892123083009, 0.775502266411416, 0.0, -0.240988383736914, -0.231122209548859, -1.27411131308915, 0.231122209548859, 6.57534544787499, -3.35192648345631, 1.51509969682607, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -3.24307284703176, 0.78752859562087, 0.0, -0.443696611808564, -0.339792485702095, -2.16366752143109, 0.339792485702095, 5.65385271360484, -3.19830846219394, 2.60736413323966, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -2.39518161842776, 0.802655449095625, 0.0, -0.703061390034862, -0.37227636722257, -3.07544916140095, 0.37227636722257, 4.59313009009467, -3.00060392076253, 3.77851055143581, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.54338145073494, 0.820415904843639, 0.0, -1.0137259751743, -0.264777985357334, -3.8565052164955, 0.264777985357334, 3.48518006227739, -2.76221451638609, 4.8702311916698, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.771940260190856, 0.840250066009654, 0.0, -1.36835138661918, 0.0374989908761695, -4.36656475279724, -0.0374989908761686, 2.4198429434456, -2.4881527492644, 5.73491613941641, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.150924807256516, 0.861518091660288, 0.0, -1.75742919436088, 0.570589760425348, -4.49816876587081, -0.570589760425347, 1.4746970381086, -2.18529032251237, 6.25559796023169, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.272100912372042, 0.883517187719879, 0.0, -2.16925863960696, 1.34428408155718, -4.19249752071911, -1.34428408155718, 0.706838325645132, -1.86245642573705, 6.36175616032607, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.477263285077029, 0.905502643519249, 0.0, -2.59013595057949, 2.33801884825039, -3.44871262096711, -2.33801884825039, 0.147571592003205, -1.53033752059948, 6.0388485715466, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.473794471259688, 0.926712592134244, 0.0, -3.00477770611646, 3.50079702575631, -2.3255048959292, -3.50079702575631, -0.199352134816075, -1.20115492857786, 5.33028260204566, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.29752773036487, 0.946395732540209, 0.0, -3.3969696770226, 4.75524112329228, -0.934590416121853, -4.75524112329228, -0.355797865797996, -0.888125597107083, 4.33156009314445, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00485391068824326, 0.96384082701116, 0.0, -3.75040165770653, 6.00533000405727, 0.57301502043111, -6.00533000405727, -0.3639536684457, -0.604741069253704, 3.17738663727542, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.33600329092111, 0.978406430151052, 0.0, -4.04962145654449, 7.14686555416384, 2.02613426294891, -7.14686555416384, -0.278477153336293, -0.36392598589365, 2.02348719359559, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.655175219483713, 0.9895490369003, 0.0, -4.28102054406156, 8.07933571642372, 3.2554311295716, -8.07933571642372, -0.157216481341719, -0.177157336074869, 1.02558941448996, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.89137275191425, 0.996847344852225, 0.0, -4.43374533013792, 8.7176022362643, 4.1152819567563, -8.7176022362643, -0.0518322019491977, -0.053642390988779, 0.318463373381623, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -4.27645762035824, 0.458690107858418, 0.0, -0.0134681534996345, -0.0221507129339261, -0.102745276341429, 0.0221507129339259, 6.07873175848276, -2.26096424598294, 0.116213429841064, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -3.96491545372971, 0.468939383827884, 0.0, -0.0714618570415974, -0.108418786913549, -0.523591054001238, 0.108418786913549, 5.74248070133339, -2.24650463143157, 0.595052911042835, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -3.44116329026026, 0.487144852538829, 0.0, -0.177675382723193, -0.231122209548859, -1.21079831207543, 0.231122209548859, 5.17147215286274, -2.21745371514131, 1.38847369479863, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -2.76321946370277, 0.512899826889188, 0.0, -0.334740053796729, -0.339792485702095, -2.05471096341926, 0.339792485702095, 4.41951717821517, -2.16919754140159, 2.38945101721599, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -2.00502080213158, 0.545591631214166, 0.0, -0.54516495399533, -0.37227636722257, -2.91755272536142, 0.37227636722257, 3.55574463962084, -2.09631546870343, 3.46271767935675, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.24693304436978, 0.584390081145208, 0.0, -0.810208706296749, -0.264777985357334, -3.65298794761795, 0.264777985357334, 2.65625742584865, -1.99371446262407, 4.4631966539147, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.565637101791926, 0.628237845937604, 0.0, -1.12870065465143, 0.0374989908761693, -4.1269140208295, -0.0374989908761685, 1.7952244065757, -1.85782515072137, 5.25561467548092, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0246461502196394, 0.675850876325833, 0.0, -1.49602020535027, 0.570589760425348, -4.2367597768602, -0.570589760425347, 1.03647250870039, -1.68767723480659, 5.73277998221047, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.333302235191038, 0.725733903864436, 0.0, -1.90341351068802, 1.34428408155718, -3.92665239180017, -1.34428408155718, 0.426652396151698, -1.48568853520717, 5.83006590248819, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.490985526117989, 0.776214330064237, 0.0, -2.33778448715237, 2.33801884825039, -3.19636115753999, -2.33801884825039, -0.00916120353372543, -1.2580386526485, 5.53414564469237, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.457962599165092, 0.825495658384398, 0.0, -2.78203580438306, 3.50079702575631, -2.1027629941958, -3.50079702575631, -0.268905324376729, -1.01455293317276, 4.88479879857886, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.268232165241987, 0.871729125889333, 0.0, -3.21596240130156, 4.75524112329228, -0.753583140400821, -4.75524112329228, -0.371873342203107, -0.768087948928213, 3.96954554170238, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0253645900460435, 0.913099677316596, 0.0, -3.61762499369675, 6.00533000405727, 0.705791684440895, -6.00533000405727, -0.354257816671691, -0.533477270598862, 2.91183330925585, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.359206577500588, 0.947920219345657, 0.0, -3.9650639538219, 7.14686555416383, 2.1106917656715, -7.14686555416384, -0.262556790982731, -0.326156850862338, 1.85437218815041, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.668298242297547, 0.974726426980649, 0.0, -4.23816320353454, 8.07933571642372, 3.29828847009863, -8.07933571642372, -0.1457930456337, -0.160635139049403, 0.939874733435915, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.895703182760619, 0.992362629047066, 0.0, -4.4204373795628, 8.7176022362643, 4.12858990733142, -8.7176022362643, -0.047656056061619, -0.0490033902248288, 0.291847472231378, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -3.43634820617754, 0.104723374422954, 0.0, -0.00606902454055624, -0.0221507129339259, -0.0953461473823509, 0.0221507129339258, 4.0445461966859, -0.712921364931318, 0.101415171922907, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -3.17040134684958, 0.119592032880062, 0.0, -0.0335757604665075, -0.108418786913549, -0.485704957426148, 0.108418786913549, 3.80410513662533, -0.753295822655806, 0.519280717892655, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -2.7241129880141, 0.146250101300648, 0.0, -0.0892734145672441, -0.231122209548859, -1.12239634391948, 0.231122209548859, 3.39647679713223, -0.818613910418778, 1.21166975848673, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -2.14825961633647, 0.184488706545264, 0.0, -0.182607410934696, -0.339792485702095, -1.90257832055723, 0.339792485702095, 2.86118636313865, -0.897415453347441, 2.08518573149192, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.50747074284048, 0.233880758616506, 0.0, -0.32469908620809, -0.37227636722257, -2.69708685757418, 0.37227636722257, 2.24893364844099, -0.975343664217019, 3.02178594378227, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.871858898790322, 0.293682102755428, 0.0, -0.526043892839245, -0.264777985357334, -3.36882313416045, 0.264777985357334, 1.61540115629995, -1.03722436026505, 3.89486702699969, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.308101310624497, 0.362730670060136, 0.0, -0.794083813927499, 0.0374989908761689, -3.79229718010557, -0.0374989908761682, 1.01464564836337, -1.06927500779901, 4.58638099403306, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.128914285025026, 0.439368049859932, 0.0, -1.13102298910418, 0.570589760425348, -3.87176256061411, -0.570589760425347, 0.492868811745163, -1.06115114663012, 5.00278554971828, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.402779357895683, 0.521402402007352, 0.0, -1.53222225068104, 1.34428408155718, -3.5554611317932, -1.34428408155718, 0.0833666488853236, -1.00754840878836, 5.08768338247424, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.499711897604173, 0.606126656951536, 0.0, -1.9854340113132, 2.33801884825039, -2.84401068170082, -2.33801884825039, -0.196701619618794, -0.909136934936914, 4.82944469301402, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.429627645216378, 0.690399016274196, 0.0, -2.47102823581489, 3.50079702575631, -1.79175542562763, -3.50079702575631, -0.347332058589503, -0.772694602901072, 4.26278366144252, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.224017564097303, 0.770784589867618, 0.0, -2.96322758905, 4.75524112329228, -0.50084832814926, -4.75524112329228, -0.384388675935453, -0.610413478029469, 3.46407591719926, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0690550028476116, 0.84374865590188, 0.0, -3.43223307993954, 6.00533000405727, 0.891183598198108, -6.00533000405727, -0.336228012483271, -0.438465640570998, 2.54104948174143, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.392135940164229, 0.905884611748325, 0.0, -3.84699895068915, 7.14686555416383, 2.22875676880425, -7.14686555416384, -0.238733673252783, -0.275014998331314, 1.61824218188489, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.686745505774595, 0.954154075284692, 0.0, -4.17832283596615, 8.07933571642372, 3.35812883766701, -8.07933571642372, -0.129470870375561, -0.137937699134536, 0.820193998299143, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.901760884363994, 0.986112016384788, 0.0, -4.40185590333949, 8.7176022362643, 4.14717138355473, -8.7176022362643, -0.0417912655171471, -0.0425598665036483, 0.254684519784756, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -2.50200831679557, -0.22306426159439, 0.0, 0.00316274736678757, -0.0221507129339252, -0.0861143754750078, 0.0221507129339253, 1.84807878190462, 0.876993796485336, 0.0829516281082203, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -2.28816218534666, -0.207219864923587, 0.0, 0.0136941011584447, -0.108418786913548, -0.438435095801196, 0.108418786913549, 1.71281491581584, 0.782567134454412, 0.424740994642751, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.9303323263512, -0.178207445737247, 0.0, 0.0210242719157862, -0.231122209548859, -1.01209865743645, 0.231122209548859, 1.48445792676853, 0.624081845319911, 0.991074385520668, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.47093131573677, -0.135317444779775, 0.0, 0.00720599363374322, -0.339792485702094, -1.71276491598879, 0.339792485702095, 1.1867236106142, 0.419525149902343, 1.70555892235504, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.963845801812336, -0.0778756756605856, 0.0, -0.0496274370960548, -0.37227636722257, -2.42201520846214, 0.37227636722257, 0.849927332107612, 0.19179414536531, 2.4716426455582, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.467364960606226, -0.0055495516518336, 0.0, -0.171496113439656, -0.264777985357334, -3.01427535476086, 0.264777985357335, 0.507181625524492, -0.0342671132664322, 3.18577146820052, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0366483865434959, 0.081331979952381, 0.0, -0.37658786717434, 0.0374989908761687, -3.37480123335241, -0.0374989908761681, 0.190341110093614, -0.235024703502498, 3.75138910052675, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.283319904290705, 0.181501522425235, 0.0, -0.675621945841524, 0.570589760425347, -3.41636151735145, -0.570589760425347, -0.0738089542208921, -0.391012472495048, 4.09198346319298, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.463358159987529, 0.292568001732668, 0.0, -1.06909300055772, 1.34428408155718, -3.09233188166988, -1.34428408155718, -0.266625355573053, -0.489300806147143, 4.16142488222759, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.493550373931316, 0.410960329802127, 0.0, -1.54581209873657, 2.33801884825039, -2.40438876912419, -2.33801884825039, -0.37954489942249, -0.524965804310952, 3.95020086786076, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.384095245704859, 0.532020492538759, 0.0, -2.08298919090056, 3.50079702575631, -1.4037163807133, -3.50079702575631, -0.414645783301901, -0.501469954941717, 3.48670557161386, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.163442736350576, 0.650246741784749, 0.0, -2.64789450691891, 4.75524112329228, -0.185515246018165, -4.75524112329228, -0.383776868524868, -0.429912609610457, 2.83340975293707, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.126013461172874, 0.759667169858654, 0.0, -3.2009226282988, 6.00533000405727, 1.12249404983884, -6.00533000405727, -0.306392581875972, -0.327261126809809, 2.07842857845996, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.434089613760271, 0.854305720860416, 0.0, -3.6996911817356, 7.14686555416383, 2.3760645377578, -7.14686555416384, -0.206405216948607, -0.213810890151539, 1.32362664397781, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.709964473504782, 0.928688908817229, 0.0, -4.10366099032214, 8.07933571642372, 3.43279068331103, -8.07933571642372, -0.108498101382652, -0.110226333929797, 0.670870307011106, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.909337372723623, 0.978331622806985, 0.0, -4.37867210006426, 8.7176022362643, 4.17035518682996, -8.7176022362643, -0.0344186823756909, -0.0345755677076721, 0.208316913234297, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.574802512555, -0.445228153040375, 0.0, 0.013893539459195, -0.0221507129339249, -0.075383583382601, 0.0221507129339249, -0.228496718022507, 2.24852738361788, 0.0614900439234058, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.41483693794416, -0.434929671538347, 0.0, 0.068639464023263, -0.108418786913548, -0.383489732936379, 0.108418786913548, -0.261545385603924, 2.11131199508644, 0.314850268913115, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.14839962483399, -0.414610121410141, 0.0, 0.149231679312996, -0.231122209548858, -0.883891250039245, 0.231122209548858, -0.315810151938772, 1.8788198981829, 0.734659570726249, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.809118210159438, -0.381555307510687, 0.0, 0.227840580495194, -0.339792485702094, -1.49213032912734, 0.339792485702095, -0.38314046327137, 1.5738139809415, 1.26428974863214, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.439605563476404, -0.332597476615797, 0.0, 0.270109305401755, -0.37227636722257, -2.10227846596434, 0.37227636722257, -0.453274945519463, 1.22547798561167, 1.83216916056258, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0857602196313236, -0.264799917570884, 0.0, 0.240621792607743, -0.264777985357334, -2.60215744871346, 0.264777985357335, -0.515278222344362, 0.86583835954657, 2.36153565610572, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.209301318923788, -0.176178447389749, 0.0, 0.108699491416823, 0.0374989908761685, -2.88951387476125, -0.0374989908761681, -0.559068728183086, 0.525945856649047, 2.78081438334442, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.410909636484647, -0.0663487086627733, 0.0, -0.146274604619892, 0.570589760425347, -2.88701417612982, -0.570589760425347, -0.576838649696785, 0.232277721874911, 3.03328878074971, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.497348594459722, 0.0630012618009101, 0.0, -0.530762575492454, 1.34428408155718, -2.55400145660461, -1.34428408155718, -0.564172964449196, 0.00382310818856439, 3.08476403209706, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.46260062661264, 0.207891371798766, 0.0, -1.03480604372631, 2.33801884825039, -1.89338271411393, -2.33801884825039, -0.520714362788498, -0.149777635622907, 2.92818875784024, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.316966896575281, 0.362127634396816, 0.0, -1.63194183439041, 3.50079702575631, -0.952669024203151, -3.50079702575631, -0.450281943184689, -0.228812587787408, 2.58461085859356, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0854851803254152, 0.517683231092373, 0.0, -2.28135883227609, 4.75524112329228, 0.181020428624648, -4.75524112329228, -0.360425267166922, -0.242743144250867, 2.10033840365144, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.19563426443634, 0.66534649634679, 0.0, -2.93205286090528, 6.00533000405727, 1.39136381723236, -6.00533000405727, -0.261471648860903, -0.208240583049547, 1.54068904367292, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.484066975284805, 0.795563054050135, 0.0, -3.52846413473942, 7.14686555416383, 2.54729158475398, -7.14686555416384, -0.16519316070982, -0.146302918055511, 0.981172549985435, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.737236351094013, 0.899371506740845, 0.0, -4.01687583673704, 8.07933571642372, 3.51957583689613, -8.07933571642372, -0.0832717482805745, -0.0788634073662592, 0.497299999840915, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.918169765663141, 0.96931354143754, 0.0, -4.35172379855132, 8.7176022362643, 4.1973034883429, -8.7176022362643, -0.0257719778661023, -0.0253717979082981, 0.15442031020842, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.74980162687822, -0.492178658264004, 0.0, 0.0257355260397764, -0.0221507129339245, -0.0635415968020199, 0.0221507129339245, -1.92544899459969, 3.16742927974191, 0.0378060707622434, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.640960312887139, -0.496336115439379, 0.0, 0.129274526571045, -0.108418786913548, -0.322854670388597, 0.108418786913548, -1.870705079619, 3.00800150794552, 0.193580143817552, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.461117137292952, -0.499871883013934, 0.0, 0.290715214251965, -0.231122209548858, -0.742407715100276, 0.231122209548858, -1.77563688862464, 2.73662590893153, 0.45169250084831, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.235374423216629, -0.496690223213571, 0.0, 0.471322309926348, -0.339792485702094, -1.24864859969618, 0.339792485702094, -1.64576295285987, 2.37782759929007, 0.777326289769834, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00458193575326812, -0.479357377659115, 0.0, 0.62295541232214, -0.37227636722257, -1.74943235904395, 0.37227636722257, -1.48840984502213, 1.96318528692797, 1.12647694672181, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.224839350352644, -0.440375077892488, 0.0, 0.695415313067786, -0.264777985357334, -2.14736392825342, 0.264777985357335, -1.3120525226339, 1.52758825017375, 1.45194861518563, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.393893478520183, -0.373528464199744, 0.0, 0.644239304198086, 0.0374989908761683, -2.35397406197998, -0.0374989908761681, -1.12560306418587, 1.10523804986543, 1.7097347577819, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.486963618092849, -0.275116398803753, 0.0, 0.437887688082478, 0.570589760425347, -2.30285188342745, -0.570589760425346, -0.937714303054168, 0.725867083765072, 1.86496419534498, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.489406057044839, -0.144884814812675, 0.0, 0.0633130169377025, 1.34428408155718, -1.95992586417446, -1.34428408155718, -0.756173966233015, 0.411652724000851, 1.89661284723675, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.398762504028364, 0.0134776948733399, 0.0, -0.470884313259722, 2.33801884825039, -1.32946098364735, -2.33801884825039, -0.587451794545372, 0.175211595643668, 1.80034529690707, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.225164634256043, 0.192364680313379, 0.0, -1.13418764280754, 3.50079702575631, -0.454914832620284, -3.50079702575631, -0.436440372629649, 0.0189110580602266, 1.58910247542782, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00996230907051332, 0.380809785972877, 0.0, -1.87686767234617, 4.75524112329228, 0.585511588554569, -4.75524112329228, -0.306403733494562, -0.0644437434078021, 1.2913560837916, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.276724147309117, 0.565518442197203, 0.0, -2.63534110375074, 6.00533000405727, 1.6880755743869, -6.00533000405727, -0.199119937264937, -0.0896743576231509, 0.947265529363839, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.540731244070235, 0.732249123137492, 0.0, -3.33950619246448, 7.14686555416383, 2.73624952702892, -7.14686555416384, -0.115178554051604, -0.0763393250156542, 0.603256665435555, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.767685053544421, 0.867370999045885, 0.0, -3.9211039109278, 8.07933571642372, 3.61534776270537, -8.07933571642372, -0.054374851074717, -0.0453110944267485, 0.305756148222433, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.927948793748652, 0.95939364372117, 0.0, -4.32198494776215, 8.7176022362643, 4.22704233913207, -8.7176022362643, -0.0161338194114482, -0.0153110305610715, 0.0949426086300869, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.103524917869607, -0.315516900792426, 0.0, 0.0382607127391614, -0.0221507129339241, -0.0510164101026357, 0.0221507129339242, -3.04134065514534, 3.46038247380737, 0.0127556973634743, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0392398630168339, -0.344481818707932, 0.0, 0.193407809764018, -0.108418786913548, -0.258721387195624, 0.108418786913548, -2.92229168262817, 3.30601336435293, 0.0653135774316062, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0652975887793478, -0.389533481732776, 0.0, 0.44036136339601, -0.231122209548858, -0.592761565956233, 0.231122209548858, -2.71812793948809, 3.04236383244151, 0.152400202560223, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.192667178236796, -0.439664416830773, 0.0, 0.72885123873083, -0.339792485702094, -0.991119670891702, 0.339792485702094, -2.44482034938392, 2.6918175879779, 0.262268432160871, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.321011497335488, -0.481199840912548, 0.0, 0.996158281220489, -0.37227636722257, -1.3762294901456, 0.37227636722257, -2.12311143144, 2.28329977501706, 0.380071208925114, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.427168356910194, -0.499889707108276, 0.0, 1.17644725096689, -0.264777985357335, -1.66633199035431, 0.264777985357335, -1.77622516496479, 1.84894651516287, 0.489884739387419, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.489999601193646, -0.483128483559974, 0.0, 1.21067603290018, 0.037498990876168, -1.78753733327789, -0.037498990876168, -1.42741532889303, 1.42054421125935, 0.576861300377708, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.493477960988574, -0.422001106555871, 0.0, 1.05575207502881, 0.570589760425346, -1.68498749648113, -0.570589760425346, -1.09762769659774, 1.02615084216503, 0.629235421452318, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.429108569992236, -0.312867749071205, 0.0, 0.691662631936989, 1.34428408155718, -1.33157624917517, -1.34428408155718, -0.803561926386341, 0.687321105465309, 0.639913617238181, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.297349583482718, -0.158260513599789, 0.0, 0.12557177203227, 2.33801884825039, -0.733004898355356, -2.33801884825039, -0.556364161927209, 0.417275092044279, 0.607433126323086, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.107830787350573, 0.0330428202380103, 0.0, -0.607716502382514, 3.50079702575631, 0.0715563078047385, -3.50079702575631, -0.361094538894077, 0.220220931305494, 0.536160194577776, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.121668845276794, 0.246792088396225, 0.0, -1.44904019070719, 4.75524112329228, 1.01333907019355, -4.75524112329228, -0.217008358658653, 0.0918851155392212, 0.435701120513638, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.367355972657788, 0.46479462607028, 0.0, -2.32151114549381, 6.00533000405727, 2.00190553264383, -6.00533000405727, -0.118580102694519, 0.0211414492820262, 0.319605612849982, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.602390611899946, 0.667008385072928, 0.0, -3.13964669345051, 7.14686555416383, 2.93610902604289, -7.14686555416384, -0.0571005564567451, -0.00751721671623756, 0.203537667407624, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.800293215703048, 0.833927066737317, 0.0, -3.81980661227291, 8.07933571642372, 3.71664506136025, -8.07933571642372, -0.0226024590660323, -0.0110313919682389, 0.103161550912661, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.93832856730251, 0.948938000703076, 0.0, -4.2905303724825, 8.7176022362643, 4.25849691441171, -8.7176022362643, -0.00582991532182764, -0.00477951807874033, 0.0320334580707969, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.315516900792429, 0.103524917869608, 0.0, 0.0510164101026365, -0.0221507129339239, -0.0382607127391619, 0.022150712933924, -3.46038247380738, 3.04134065514534, -0.0127556973634747, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.344481818707936, 0.0392398630168348, 0.0, 0.258721387195625, -0.108418786913548, -0.193407809764019, 0.108418786913548, -3.30601336435294, 2.92229168262817, -0.0653135774316068, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.389533481732779, -0.065297588779347, 0.0, 0.592761565956234, -0.231122209548858, -0.44036136339601, 0.231122209548858, -3.04236383244152, 2.71812793948809, -0.152400202560224, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.439664416830775, -0.192667178236796, 0.0, 0.991119670891703, -0.339792485702094, -0.728851238730831, 0.339792485702094, -2.69181758797791, 2.44482034938393, -0.262268432160872, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.481199840912549, -0.321011497335489, 0.0, 1.3762294901456, -0.37227636722257, -0.996158281220489, 0.37227636722257, -2.28329977501706, 2.12311143144, -0.380071208925116, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.499889707108277, -0.427168356910195, 0.0, 1.66633199035431, -0.264777985357335, -1.17644725096689, 0.264777985357334, -1.84894651516287, 1.77622516496479, -0.489884739387419, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.483128483559974, -0.489999601193647, 0.0, 1.78753733327789, 0.0374989908761678, -1.21067603290018, -0.037498990876168, -1.42054421125935, 1.42741532889303, -0.576861300377707, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.422001106555871, -0.493477960988575, 0.0, 1.68498749648113, 0.570589760425346, -1.05575207502881, -0.570589760425347, -1.02615084216503, 1.09762769659774, -0.629235421452317, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.312867749071204, -0.429108569992238, 0.0, 1.33157624917517, 1.34428408155718, -0.691662631936989, -1.34428408155718, -0.687321105465309, 0.803561926386342, -0.639913617238181, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.158260513599787, -0.29734958348272, 0.0, 0.733004898355355, 2.33801884825039, -0.125571772032271, -2.33801884825039, -0.417275092044279, 0.556364161927211, -0.607433126323084, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0330428202380122, -0.107830787350574, 0.0, -0.0715563078047379, 3.50079702575631, 0.607716502382514, -3.50079702575631, -0.220220931305493, 0.361094538894079, -0.536160194577776, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.246792088396228, 0.121668845276791, 0.0, -1.01333907019355, 4.75524112329228, 1.44904019070719, -4.75524112329228, -0.0918851155392193, 0.217008358658655, -0.435701120513642, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.464794626070283, 0.367355972657784, 0.0, -2.00190553264383, 6.00533000405727, 2.32151114549381, -6.00533000405727, -0.0211414492820239, 0.118580102694522, -0.319605612849987, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.667008385072933, 0.602390611899941, 0.0, -2.93610902604288, 7.14686555416383, 3.13964669345052, -7.14686555416384, 0.00751721671624139, 0.0571005564567489, -0.203537667407638, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.833927066737324, 0.800293215703041, 0.0, -3.71664506136024, 8.07933571642372, 3.81980661227292, -8.07933571642372, 0.0110313919682437, 0.0226024590660371, -0.10316155091268, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.948938000703084, 0.938328567302502, 0.0, -4.2584969144117, 8.7176022362643, 4.29053037248252, -8.7176022362643, 0.00477951807874644, 0.00582991532183352, -0.032033458070823, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.49217865826401, 0.749801626878218, 0.0, 0.0635415968020219, -0.0221507129339238, -0.0257355260397781, 0.0221507129339238, -3.16742927974193, 1.9254489945997, -0.0378060707622436, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.496336115439384, 0.640960312887137, 0.0, 0.322854670388599, -0.108418786913548, -0.129274526571046, 0.108418786913548, -3.00800150794554, 1.87070507961901, -0.193580143817553, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.499871883013938, 0.461117137292949, 0.0, 0.742407715100278, -0.231122209548858, -0.290715214251967, 0.231122209548858, -2.73662590893154, 1.77563688862465, -0.451692500848311, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.496690223213575, 0.235374423216626, 0.0, 1.24864859969618, -0.339792485702094, -0.471322309926349, 0.339792485702094, -2.37782759929008, 1.64576295285988, -0.777326289769835, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.479357377659118, -0.00458193575327065, 0.0, 1.74943235904395, -0.37227636722257, -0.622955412322141, 0.37227636722257, -1.96318528692798, 1.48840984502213, -1.12647694672181, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.440375077892491, -0.224839350352646, 0.0, 2.14736392825342, -0.264777985357335, -0.695415313067787, 0.264777985357334, -1.52758825017375, 1.31205252263391, -1.45194861518563, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.373528464199746, -0.393893478520185, 0.0, 2.35397406197998, 0.0374989908761676, -0.644239304198088, -0.0374989908761681, -1.10523804986544, 1.12560306418587, -1.70973475778189, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.275116398803754, -0.486963618092851, 0.0, 2.30285188342745, 0.570589760425346, -0.437887688082481, -0.570589760425347, -0.725867083765076, 0.937714303054172, -1.86496419534497, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.144884814812674, -0.489406057044841, 0.0, 1.95992586417446, 1.34428408155718, -0.0633130169377049, -1.34428408155718, -0.411652724000853, 0.756173966233018, -1.89661284723675, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0134776948733399, -0.398762504028365, 0.0, 1.32946098364735, 2.33801884825039, 0.470884313259718, -2.33801884825039, -0.17521159564367, 0.587451794545374, -1.80034529690706, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.192364680313381, -0.225164634256045, 0.0, 0.454914832620286, 3.50079702575631, 1.13418764280754, -3.50079702575631, -0.0189110580602267, 0.436440372629651, -1.58910247542782, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.380809785972879, 0.00996230907051043, 0.0, -0.585511588554565, 4.75524112329227, 1.87686767234617, -4.75524112329228, 0.0644437434078032, 0.306403733494565, -1.29135608379161, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.565518442197207, 0.276724147309113, 0.0, -1.6880755743869, 6.00533000405727, 2.63534110375074, -6.00533000405727, 0.0896743576231526, 0.19911993726494, -0.947265529363845, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.732249123137497, 0.54073124407023, 0.0, -2.73624952702891, 7.14686555416383, 3.33950619246448, -7.14686555416384, 0.076339325015658, 0.115178554051608, -0.603256665435569, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.867370999045892, 0.767685053544415, 0.0, -3.61534776270536, 8.07933571642372, 3.92110391092781, -8.07933571642372, 0.0453110944267534, 0.0543748510747217, -0.305756148222453, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.959393643721178, 0.927948793748645, 0.0, -4.22704233913205, 8.7176022362643, 4.32198494776217, -8.7176022362643, 0.0153110305610776, 0.0161338194114541, -0.0949426086301129, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.445228153040382, 1.57480251255499, 0.0, 0.0753835833826041, -0.022150712933924, -0.0138935394591976, 0.022150712933924, -2.2485273836179, 0.228496718022522, -0.0614900439234065, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.434929671538354, 1.41483693794416, 0.0, 0.383489732936381, -0.108418786913548, -0.0686394640232652, 0.108418786913548, -2.11131199508645, 0.261545385603937, -0.314850268913116, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.414610121410147, 1.14839962483399, 0.0, 0.883891250039248, -0.231122209548858, -0.149231679312998, 0.231122209548858, -1.87881989818292, 0.315810151938785, -0.73465957072625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.381555307510692, 0.809118210159434, 0.0, 1.49213032912734, -0.339792485702094, -0.227840580495196, 0.339792485702094, -1.57381398094151, 0.383140463271384, -1.26428974863214, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.332597476615801, 0.439605563476401, 0.0, 2.10227846596434, -0.37227636722257, -0.270109305401757, 0.372276367222569, -1.22547798561168, 0.453274945519475, -1.83216916056258, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.264799917570887, 0.0857602196313197, 0.0, 2.60215744871346, -0.264777985357335, -0.240621792607745, 0.264777985357334, -0.865838359546581, 0.515278222344373, -2.36153565610572, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.176178447389752, -0.209301318923792, 0.0, 2.88951387476125, 0.0374989908761676, -0.108699491416826, -0.0374989908761684, -0.525945856649055, 0.559068728183094, -2.78081438334442, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0663487086627744, -0.41090963648465, 0.0, 2.88701417612983, 0.570589760425346, 0.146274604619891, -0.570589760425347, -0.232277721874916, 0.576838649696791, -3.03328878074972, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0630012618009095, -0.497348594459724, 0.0, 2.55400145660461, 1.34428408155718, 0.53076257549245, -1.34428408155718, -0.00382310818856825, 0.564172964449201, -3.08476403209706, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.207891371798765, -0.462600626612642, 0.0, 1.89338271411393, 2.33801884825039, 1.0348060437263, -2.33801884825039, 0.149777635622904, 0.520714362788502, -2.92818875784024, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.362127634396817, -0.316966896575284, 0.0, 0.952669024203154, 3.50079702575631, 1.6319418343904, -3.50079702575631, 0.228812587787407, 0.450281943184693, -2.58461085859356, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.517683231092376, -0.0854851803254181, 0.0, -0.181020428624643, 4.75524112329227, 2.28135883227609, -4.75524112329228, 0.242743144250868, 0.360425267166925, -2.10033840365145, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.665346496346793, 0.195634264436337, 0.0, -1.39136381723236, 6.00533000405727, 2.93205286090528, -6.00533000405727, 0.208240583049549, 0.261471648860906, -1.54068904367292, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.79556305405014, 0.4840669752848, 0.0, -2.54729158475397, 7.14686555416383, 3.52846413473942, -7.14686555416384, 0.146302918055514, 0.165193160709824, -0.981172549985449, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.899371506740851, 0.737236351094007, 0.0, -3.51957583689611, 8.07933571642372, 4.01687583673705, -8.07933571642372, 0.078863407366264, 0.0832717482805791, -0.497299999840934, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.969313541437547, 0.918169765663133, 0.0, -4.19730348834288, 8.7176022362643, 4.35172379855133, -8.7176022362643, 0.0253717979083042, 0.0257719778661082, -0.154420310208446, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.223064261594399, 2.50200831679556, 0.0, 0.0861143754750122, -0.0221507129339241, -0.00316274736679134, 0.022150712933924, -0.876993796485361, -1.8480787819046, -0.0829516281082203, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.207219864923596, 2.28816218534666, 0.0, 0.4384350958012, -0.108418786913548, -0.0136941011584482, 0.108418786913548, -0.782567134454436, -1.71281491581582, -0.424740994642752, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.178207445737255, 1.93033232635119, 0.0, 1.01209865743646, -0.231122209548858, -0.0210242719157889, 0.231122209548857, -0.624081845319934, -1.48445792676851, -0.991074385520669, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.135317444779781, 1.47093131573676, 0.0, 1.71276491598879, -0.339792485702094, -0.00720599363374583, 0.339792485702094, -0.419525149902363, -1.18672361061418, -1.70555892235504, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0778756756605916, 0.96384580181233, 0.0, 2.42201520846215, -0.37227636722257, 0.0496274370960523, 0.372276367222569, -0.191794145365329, -0.849927332107594, -2.4716426455582, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00554955165183801, 0.467364960606221, 0.0, 3.01427535476086, -0.264777985357335, 0.171496113439653, 0.264777985357334, 0.0342671132664182, -0.507181625524477, -3.18577146820051, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0813319799523771, 0.0366483865434912, 0.0, 3.37480123335241, 0.0374989908761678, 0.376587867174335, -0.0374989908761688, 0.235024703502485, -0.190341110093601, -3.75138910052674, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.181501522425233, -0.283319904290709, 0.0, 3.41636151735146, 0.570589760425346, 0.67562194584152, -0.570589760425347, 0.39101247249504, 0.0738089542209006, -4.09198346319298, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.292568001732667, -0.463358159987532, 0.0, 3.09233188166988, 1.34428408155718, 1.06909300055772, -1.34428408155718, 0.489300806147138, 0.266625355573059, -4.16142488222759, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.410960329802126, -0.493550373931319, 0.0, 2.40438876912419, 2.33801884825039, 1.54581209873657, -2.33801884825039, 0.524965804310949, 0.379544899422495, -3.95020086786076, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.53202049253876, -0.384095245704862, 0.0, 1.4037163807133, 3.50079702575631, 2.08298919090055, -3.50079702575631, 0.501469954941716, 0.414645783301905, -3.48670557161386, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.650246741784751, -0.163442736350579, 0.0, 0.185515246018171, 4.75524112329227, 2.64789450691891, -4.75524112329228, 0.429912609610457, 0.383776868524871, -2.83340975293707, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.759667169858657, 0.12601346117287, 0.0, -1.12249404983883, 6.00533000405727, 3.2009226282988, -6.00533000405727, 0.32726112680981, 0.306392581875975, -2.07842857845997, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.854305720860421, 0.434089613760266, 0.0, -2.37606453775779, 7.14686555416383, 3.69969118173561, -7.14686555416384, 0.213810890151543, 0.206405216948611, -1.32362664397782, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.928688908817235, 0.709964473504776, 0.0, -3.43279068331102, 8.07933571642372, 4.10366099032214, -8.07933571642372, 0.110226333929801, 0.108498101382656, -0.670870307011122, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.978331622806993, 0.909337372723616, 0.0, -4.17035518682995, 8.7176022362643, 4.37867210006427, -8.7176022362643, 0.034575567707678, 0.0344186823756971, -0.208316913234323, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.104723374422943, 3.43634820617752, 0.0, 0.0953461473823571, -0.0221507129339245, 0.00606902454055169, 0.0221507129339241, 0.712921364931282, -4.04454619668586, -0.101415171922909, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.119592032880051, 3.17040134684957, 0.0, 0.485704957426154, -0.108418786913548, 0.0335757604665033, 0.108418786913547, 0.753295822655772, -3.80410513662529, -0.519280717892656, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.146250101300637, 2.72411298801409, 0.0, 1.12239634391949, -0.231122209548858, 0.0892734145672397, 0.231122209548858, 0.818613910418746, -3.39647679713219, -1.21166975848673, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.184488706545256, 2.14825961633646, 0.0, 1.90257832055723, -0.339792485702094, 0.182607410934692, 0.339792485702093, 0.897415453347415, -2.86118636313862, -2.08518573149192, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.233880758616499, 1.50747074284047, 0.0, 2.69708685757418, -0.37227636722257, 0.324699086208085, 0.372276367222569, 0.975343664216995, -2.24893364844097, -3.02178594378227, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.293682102755422, 0.871858898790315, 0.0, 3.36882313416045, -0.264777985357335, 0.526043892839239, 0.264777985357334, 1.03722436026503, -1.61540115629993, -3.89486702699969, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.362730670060131, 0.308101310624492, 0.0, 3.79229718010557, 0.0374989908761679, 0.794083813927493, -0.0374989908761691, 1.06927500779899, -1.01464564836336, -4.58638099403306, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.439368049859929, -0.128914285025031, 0.0, 3.87176256061411, 0.570589760425346, 1.13102298910417, -0.570589760425348, 1.06115114663011, -0.492868811745151, -5.00278554971828, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.521402402007351, -0.402779357895686, 0.0, 3.5554611317932, 1.34428408155718, 1.53222225068104, -1.34428408155718, 1.00754840878835, -0.0833666488853149, -5.08768338247424, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.606126656951535, -0.499711897604176, 0.0, 2.84401068170082, 2.33801884825039, 1.98543401131319, -2.33801884825039, 0.909136934936908, 0.196701619618801, -4.82944469301401, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.690399016274197, -0.429627645216381, 0.0, 1.79175542562764, 3.50079702575631, 2.47102823581489, -3.50079702575631, 0.772694602901069, 0.347332058589507, -4.26278366144252, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.77078458986762, -0.224017564097306, 0.0, 0.500848328149266, 4.75524112329227, 2.96322758905, -4.75524112329228, 0.610413478029468, 0.384388675935457, -3.46407591719926, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.843748655901883, 0.069055002847608, 0.0, -0.891183598198101, 6.00533000405727, 3.43223307993954, -6.00533000405727, 0.438465640570999, 0.336228012483274, -2.54104948174143, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.90588461174833, 0.392135940164224, 0.0, -2.22875676880424, 7.14686555416384, 3.84699895068915, -7.14686555416384, 0.275014998331318, 0.238733673252787, -1.61824218188491, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.954154075284698, 0.68674550577459, 0.0, -3.358128837667, 8.07933571642372, 4.17832283596616, -8.07933571642372, 0.137937699134541, 0.129470870375567, -0.820193998299162, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.986112016384796, 0.901760884363987, 0.0, -4.14717138355472, 8.7176022362643, 4.4018559033395, -8.7176022362643, 0.0425598665036542, 0.0417912655171531, -0.254684519784782, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.458690107858407, 4.27645762035823, 0.0, 0.102745276341436, -0.0221507129339245, 0.0134681534996294, 0.022150712933924, 2.26096424598291, -6.07873175848273, -0.116213429841066, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.468939383827873, 3.9649154537297, 0.0, 0.523591054001244, -0.108418786913548, 0.0714618570415923, 0.108418786913547, 2.24650463143154, -5.74248070133336, -0.595052911042836, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.48714485253882, 3.44116329026025, 0.0, 1.21079831207544, -0.231122209548858, 0.177675382723189, 0.231122209548857, 2.21745371514128, -5.17147215286271, -1.38847369479863, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.512899826889179, 2.76321946370276, 0.0, 2.05471096341926, -0.339792485702094, 0.334740053796725, 0.339792485702093, 2.16919754140156, -4.41951717821514, -2.38945101721599, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.545591631214159, 2.00502080213157, 0.0, 2.91755272536142, -0.37227636722257, 0.545164953995327, 0.372276367222569, 2.09631546870341, -3.55574463962082, -3.46271767935675, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.584390081145203, 1.24693304436978, 0.0, 3.65298794761795, -0.264777985357334, 0.810208706296745, 0.264777985357333, 1.99371446262405, -2.65625742584863, -4.4631966539147, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.6282378459376, 0.565637101791921, 0.0, 4.1269140208295, 0.0374989908761679, 1.12870065465142, -0.0374989908761694, 1.85782515072136, -1.79522440657568, -5.25561467548092, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.67585087632583, 0.0246461502196345, 0.0, 4.2367597768602, 0.570589760425346, 1.49602020535027, -0.570589760425348, 1.68767723480658, -1.03647250870038, -5.73277998221047, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.725733903864435, -0.333302235191041, 0.0, 3.92665239180018, 1.34428408155718, 1.90341351068801, -1.34428408155718, 1.48568853520716, -0.42665239615169, -5.83006590248819, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.776214330064236, -0.490985526117993, 0.0, 3.19636115754, 2.33801884825039, 2.33778448715237, -2.33801884825039, 1.2580386526485, 0.00916120353373327, -5.53414564469236, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.825495658384399, -0.457962599165095, 0.0, 2.10276299419581, 3.50079702575631, 2.78203580438306, -3.50079702575631, 1.01455293317276, 0.268905324376734, -4.88479879857886, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.871729125889335, -0.268232165241991, 0.0, 0.753583140400828, 4.75524112329227, 3.21596240130156, -4.75524112329228, 0.768087948928214, 0.37187334220311, -3.96954554170239, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.913099677316599, 0.0253645900460397, 0.0, -0.705791684440886, 6.00533000405727, 3.61762499369675, -6.00533000405727, 0.533477270598864, 0.354257816671695, -2.91183330925586, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.947920219345662, 0.359206577500583, 0.0, -2.11069176567149, 7.14686555416384, 3.96506395382191, -7.14686555416384, 0.326156850862342, 0.262556790982735, -1.85437218815042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.974726426980656, 0.668298242297541, 0.0, -3.29828847009861, 8.07933571642372, 4.23816320353455, -8.07933571642372, 0.160635139049407, 0.145793045633705, -0.939874733435934, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.992362629047073, 0.895703182760612, 0.0, -4.1285899073314, 8.7176022362643, 4.42043737956281, -8.7176022362643, 0.0490033902248348, 0.047656056061625, -0.291847472231404, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.76209838687494, 4.92803860051349, 0.0, 0.10804449160846, -0.0221507129339246, 0.0187673687666509, 0.022150712933924, 3.51936178417124, -7.68530199780978, -0.126811860375111, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.766940864431549, 4.58174290458662, 0.0, 0.55072486697963, -0.108418786913548, 0.0985956700199766, 0.108418786913548, 3.45933504349581, -7.27413708365087, -0.649320536999606, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.775502266411406, 3.99892123083008, 0.0, 1.27411131308916, -0.231122209548858, 0.240988383736909, 0.231122209548857, 3.35192648345628, -6.57534544787496, -1.51509969682607, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.787528595620862, 3.24307284703175, 0.0, 2.1636675214311, -0.339792485702094, 0.443696611808559, 0.339792485702093, 3.19830846219392, -5.65385271360481, -2.60736413323966, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.802655449095618, 2.39518161842775, 0.0, 3.07544916140095, -0.37227636722257, 0.703061390034857, 0.372276367222569, 3.00060392076251, -4.59313009009464, -3.77851055143581, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.820415904843632, 1.54338145073493, 0.0, 3.8565052164955, -0.264777985357334, 1.01372597517429, 0.264777985357333, 2.76221451638607, -3.48518006227737, -4.8702311916698, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.840250066009648, 0.771940260190849, 0.0, 4.36656475279724, 0.037498990876168, 1.36835138661917, -0.0374989908761695, 2.48815274926438, -2.41984294344559, -5.73491613941641, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.861518091660284, 0.150924807256511, 0.0, 4.49816876587081, 0.570589760425346, 1.75742919436087, -0.570589760425348, 2.18529032251236, -1.47469703810859, -6.25559796023168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.883517187719877, -0.272100912372046, 0.0, 4.19249752071911, 1.34428408155718, 2.16925863960695, -1.34428408155718, 1.86245642573704, -0.706838325645123, -6.36175616032606, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.905502643519248, -0.477263285077033, 0.0, 3.44871262096711, 2.33801884825039, 2.59013595057948, -2.33801884825039, 1.53033752059948, -0.147571592003197, -6.03884857154659, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.926712592134244, -0.473794471259691, 0.0, 2.32550489592921, 3.50079702575631, 3.00477770611646, -3.50079702575631, 1.20115492857785, 0.199352134816081, -5.33028260204566, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.946395732540211, -0.297527730364873, 0.0, 0.934590416121861, 4.75524112329227, 3.39696967702259, -4.75524112329227, 0.888125597107084, 0.355797865798, -4.33156009314445, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.963840827011164, -0.00485391068824725, 0.0, -0.5730150204311, 6.00533000405727, 3.75040165770654, -6.00533000405727, 0.604741069253706, 0.363953668445704, -3.17738663727543, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.978406430151058, 0.336003290921105, 0.0, -2.02613426294889, 7.14686555416383, 4.0496214565445, -7.14686555416384, 0.363925985893654, 0.278477153336297, -2.02348719359561, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.989549036900307, 0.655175219483706, 0.0, -3.25543112957159, 8.07933571642372, 4.28102054406157, -8.07933571642372, 0.177157336074874, 0.157216481341724, -1.02558941448998, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.996847344852233, 0.891372751914243, 0.0, -4.11528195675628, 8.7176022362643, 4.43374533013793, -8.7176022362643, 0.053642390988785, 0.0518322019492036, -0.318463373381649, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.952917925769804, 5.31655770218779, 0.0, 0.111053494146389, -0.0221507129339247, 0.0217763713045797, 0.022150712933924, 4.28951996363527, -8.65315974005325, -0.132829865450969, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.953910725785564, 4.9497486562205, 0.0, 0.5661319995458, -0.108418786913548, 0.114002802586147, 0.108418786913548, 4.20128051783772, -8.19711844827265, -0.680134802131946, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.955662170838858, 4.3320522503576, 0.0, 1.31006172671357, -0.231122209548858, 0.276938797361323, 0.231122209548857, 4.0453773118387, -7.42176739135745, -1.5870005240749, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.958114323361906, 3.53018929772945, 0.0, 2.22553527789346, -0.339792485702094, 0.505564368270916, 0.339792485702093, 3.8265963683737, -6.39867134274125, -2.73109964616437, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.961185370308181, 2.62928673065267, 0.0, 3.16510597903011, -0.37227636722257, 0.792718207664017, 0.372276367222569, 3.55176887541255, -5.21987023575704, -3.95782418669413, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.964772503729386, 1.72204722474024, 0.0, 3.97206647372091, -0.264777985357334, 1.1292872323997, 0.264777985357333, 3.22959348816288, -3.98686820917373, -5.10135370612061, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.968755213962431, 0.897203686455042, 0.0, 4.50264332752421, 0.0374989908761682, 1.50442996134613, -0.0374989908761698, 2.87042647143414, -2.79887494392676, -6.00707328887034, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.97299917733554, 0.228683857944151, 0.0, 4.64660212283701, 0.570589760425346, 1.90586255132708, -0.570589760425348, 2.48601154455051, -1.74169622515912, -6.55246467416409, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.977360656150228, -0.233098651787218, 0.0, 4.34344980842698, 1.34428408155718, 2.32021092731481, -1.34428408155718, 2.08914562318257, -0.878686315245129, -6.66366073574179, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.981691287935534, -0.466695414241419, 0.0, 3.59200293012439, 2.33801884825039, 2.73342625973676, -2.33801884825039, 1.69328268026766, -0.244895978090713, -6.32542918986115, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.98584311584047, -0.481126647425163, 0.0, 2.45198229189199, 3.50079702575631, 3.13125510207924, -3.50079702575631, 1.31208379982483, 0.154885963440799, -5.58323739397122, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.989673691872321, -0.313281613098645, 0.0, 1.03737004000652, 4.75524112329227, 3.49974930090726, -4.75524112329228, 0.958927633037532, 0.344027671933433, -4.53711934091378, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.993051069990859, -0.0216142088802527, 0.0, -0.497621721829015, 6.00533000405727, 3.82579495630862, -6.00533000405727, 0.64640125702109, 0.368264021850019, -3.3281732344796, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.995858497780731, 0.322969366615965, 0.0, -1.97812078784501, 7.14686555416383, 4.09763493164839, -7.14686555416384, 0.38579619684786, 0.287092934316903, -2.11951414380338, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.997998609374344, 0.64775669157269, 0.0, -3.23109585728755, 8.07933571642372, 4.30535581634562, -8.07933571642372, 0.186637953111932, 0.16360396468972, -1.07425995905807, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999396852938816, 0.88891683989424, 0.0, -4.10772543092417, 8.71760223626429, 4.44130185597005, -8.71760223626429, 0.0562854951419499, 0.0541945179026236, -0.333576425045879, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_C2[256][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.989729651184054, 0.00527304915217372, 0.00499729966377194, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.968695502214959, 0.00516098410364707, 0.0261435136813941, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.931605676269881, 0.00496337814628292, 0.0634309455838362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.879714647593395, 0.00468691482678903, 0.115598437579816, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.814788437247897, 0.00434100309421978, 0.180870559657884, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.739037770974209, 0.00393742118062022, 0.257024807845171, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.655042160329175, 0.00348991212300207, 0.341467927547823, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.565661941278927, 0.00301371512544814, 0.431324343595625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.473940837535577, 0.00252504643925508, 0.523534116025168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.38300230103438, 0.00204054708913071, 0.614957151876489, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.295943145895255, 0.00157671617970395, 0.702480137925041, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.215728096960446, 0.00114934907468572, 0.783122553964868, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.145088852597805, 0.000772999626984516, 0.854138147775211, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0864311384799768, 0.000460484982882037, 0.913108376537141, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0417531313466936, 0.000222450962831078, 0.958024417690475, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0125799562956864, 6.70230782719994e-05, 0.987353020626042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.967428699482125, 0.0275740008541034, 0.00499729966377194, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.94686849967651, 0.0269879866420957, 0.0261435136813941, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.910614395300493, 0.0259546591156701, 0.0634309455838362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.859892594324616, 0.0245089680955679, 0.115598437579816, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.796429325176617, 0.0227001151654989, 0.180870559657884, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.722385500713658, 0.020589691441171, 0.257024807845171, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.640282509991578, 0.0182495624605992, 0.341467927547823, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.552916238836861, 0.0157594175675134, 0.431324343595625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.463261828661983, 0.0132040553128485, 0.523534116025168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.374372352636979, 0.0106704954865312, 0.614957151876489, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.289274846329579, 0.00824501574537989, 0.702480137925041, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.210867232313915, 0.00601021372121679, 0.783122553964868, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.141819657327762, 0.00404219489702734, 0.854138147775211, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0844836403500796, 0.00240798311277923, 0.913108376537141, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0408123344690281, 0.0011632478404966, 0.958024417690475, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0122965001039609, 0.000350479269997539, 0.987353020626042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.928154042103708, 0.0668486582325198, 0.00499729966377194, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.908428523761885, 0.065427962556721, 0.0261435136813941, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.873646225554831, 0.0629228288613327, 0.0634309455838362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.824983575145823, 0.0594179872743616, 0.115598437579816, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.764096721348367, 0.0550327189937492, 0.180870559657884, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.693058850542072, 0.049916341612757, 0.257024807845171, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.614288991069953, 0.0442430813822241, 0.341467927547823, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.530469524313191, 0.0382061320911832, 0.431324343595625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.444454810008373, 0.0320110739664586, 0.523534116025168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.35917397585775, 0.0258688722657604, 0.614957151876489, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.277531169008584, 0.0199886930663752, 0.702480137925041, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.202306665208663, 0.0145707808264693, 0.783122553964868, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.136062211374325, 0.00979964085046442, 0.854138147775211, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.081053861979222, 0.00583776148363685, 0.913108376537141, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.039155478047524, 0.00282010426200074, 0.958024417690475, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.011797299668006, 0.0008496797059524, 0.987353020626042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.873316063247673, 0.121686637088555, 0.00499729966377194, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.854755984594397, 0.119100501724209, 0.0261435136813941, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.822028723425505, 0.114540330990658, 0.0634309455838362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.776241200714222, 0.108160361705962, 0.115598437579816, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.718951715294959, 0.100177725047158, 0.180870559657884, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.652110963803496, 0.0908642283513328, 0.257024807845171, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.577995051512854, 0.0805370209393231, 0.341467927547823, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.499127877088207, 0.0695477793161676, 0.431324343595625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.418195156580092, 0.0582707273947403, 0.523534116025168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.337952956500788, 0.0470898916227224, 0.614957151876489, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.261133838729778, 0.0363860233451813, 0.702480137925041, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.190353812421422, 0.0265236336137096, 0.783122553964868, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.128023269203111, 0.0178385830216788, 0.854138147775211, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0762649694379127, 0.0106266540249462, 0.913108376537141, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0368420611147039, 0.0051335211948208, 0.958024417690475, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0111002816727107, 0.00154669770124777, 0.987353020626042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.804895615995233, 0.190107084340995, 0.00499729966377194, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.787789637336151, 0.186066848982456, 0.0261435136813941, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.757626412191279, 0.178942642224885, 0.0634309455838362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.715426139176099, 0.168975423244085, 0.115598437579816, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.662625031310171, 0.156504409031945, 0.180870559657884, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.601020956783894, 0.141954235370935, 0.257024807845171, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.532711698098809, 0.125820374353368, 0.341467927547823, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.460023417633359, 0.108652238771016, 0.431324343595625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.385431417475593, 0.0910344664992385, 0.523534116025168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.311475838528081, 0.0735670095954292, 0.614957151876489, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.240675158544514, 0.0568447035304454, 0.702480137925041, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.175440433943478, 0.0414370120916538, 0.783122553964868, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.117993212839528, 0.0278686393852616, 0.854138147775211, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0702899467190693, 0.0166016767437895, 0.913108376537141, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0339556487317739, 0.00801993357775077, 0.958024417690475, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0102306237462887, 0.00241635562766968, 0.987353020626042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.725365315452234, 0.269637384883995, 0.00499729966377194, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.709949548041422, 0.263906938277184, 0.0261435136813941, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.682766697386666, 0.253802357029498, 0.0634309455838362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.644736158097447, 0.239665404322737, 0.115598437579816, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.59715223354589, 0.221977206796226, 0.180870559657884, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.541635147772422, 0.201340044382408, 0.257024807845171, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.48007540513033, 0.178456667321848, 0.341467927547823, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.414569324041407, 0.154106332362967, 0.431324343595625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.347347626408293, 0.129118257566538, 0.523534116025168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.280699466340501, 0.10434338178301, 0.614957151876489, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.216894475295777, 0.0806253867791818, 0.702480137925041, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.158105477507336, 0.0587719685277958, 0.783122553964868, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.106334513881951, 0.0395273383428384, 0.854138147775211, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0633447224233613, 0.0235469010394976, 0.913108376537141, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0306005516296095, 0.0113750306799152, 0.958024417690475, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00921975405695807, 0.00342722531700035, 0.987353020626042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.63759949689293, 0.357403203443298, 0.00499729966377194, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.624048965407669, 0.349807520910937, 0.0261435136813941, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.600155112844864, 0.3364139415713, 0.0634309455838362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.566726091356216, 0.317675471063968, 0.115598437579816, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.524899599645142, 0.294229840696975, 0.180870559657884, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.476099822203266, 0.266875369951564, 0.257024807845171, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.421988521178367, 0.23654355127381, 0.341467927547823, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.364408370244786, 0.204267286159588, 0.431324343595625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.305320184363661, 0.17114569961117, 0.523534116025168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.246736140678625, 0.138306707444885, 0.614957151876489, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.190651255831311, 0.106868606243648, 0.702480137925041, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.138975452461281, 0.0779019935738509, 0.783122553964868, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0934685338672649, 0.0523933183575246, 0.854138147775211, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0556803065814871, 0.0312113168813717, 0.913108376537141, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0268980276669569, 0.0150775546425678, 0.958024417690475, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00810420683614854, 0.00454277253780988, 0.987353020626042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5447702020952, 0.450232498241028, 0.00499729966377194, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5331925176527, 0.440663968665906, 0.0261435136813941, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.512777415456253, 0.423791638959911, 0.0634309455838362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.484215387285027, 0.400186175135157, 0.115598437579816, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.44847849217546, 0.370650948166656, 0.180870559657884, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.40678356495428, 0.336191627200549, 0.257024807845171, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.36055042873222, 0.297981643719957, 0.341467927547823, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.31135347890146, 0.257322177502915, 0.431324343595625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.260868051731645, 0.215597832243187, 0.523534116025168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.210813367759379, 0.174229480364132, 0.614957151876489, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.162893985448624, 0.134625876626335, 0.702480137925041, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.118741758255053, 0.0981356877800787, 0.783122553964868, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0798602764471167, 0.0660015757776728, 0.854138147775211, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.047573707345966, 0.0393179161168928, 0.913108376537141, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0229818938683245, 0.0189936884412002, 0.958024417690475, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00692430031307151, 0.00572267906088691, 0.987353020626042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.450232498241028, 0.5447702020952, 0.00499729966377194, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.440663968665906, 0.5331925176527, 0.0261435136813941, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.423791638959911, 0.512777415456253, 0.0634309455838362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.400186175135157, 0.484215387285027, 0.115598437579816, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.370650948166656, 0.44847849217546, 0.180870559657884, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.336191627200549, 0.40678356495428, 0.257024807845171, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.297981643719957, 0.36055042873222, 0.341467927547823, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.257322177502914, 0.31135347890146, 0.431324343595625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.215597832243187, 0.260868051731645, 0.523534116025168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.174229480364132, 0.210813367759379, 0.614957151876489, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.134625876626335, 0.162893985448624, 0.702480137925041, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0981356877800787, 0.118741758255053, 0.783122553964868, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0660015757776729, 0.0798602764471166, 0.854138147775211, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0393179161168928, 0.047573707345966, 0.913108376537141, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0189936884412002, 0.0229818938683245, 0.958024417690475, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00572267906088686, 0.00692430031307156, 0.987353020626042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.357403203443298, 0.63759949689293, 0.00499729966377194, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.349807520910937, 0.624048965407669, 0.0261435136813941, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3364139415713, 0.600155112844864, 0.0634309455838362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.317675471063968, 0.566726091356216, 0.115598437579816, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.294229840696975, 0.524899599645142, 0.180870559657884, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.266875369951564, 0.476099822203266, 0.257024807845171, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.23654355127381, 0.421988521178367, 0.341467927547823, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.204267286159588, 0.364408370244786, 0.431324343595625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.17114569961117, 0.305320184363661, 0.523534116025168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.138306707444886, 0.246736140678625, 0.614957151876489, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.106868606243648, 0.190651255831311, 0.702480137925041, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0779019935738509, 0.138975452461281, 0.783122553964868, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0523933183575247, 0.0934685338672648, 0.854138147775211, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0312113168813717, 0.0556803065814871, 0.913108376537141, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0150775546425678, 0.0268980276669569, 0.958024417690475, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00454277253780982, 0.0081042068361486, 0.987353020626042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.269637384883994, 0.725365315452234, 0.00499729966377194, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.263906938277184, 0.709949548041422, 0.0261435136813941, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.253802357029498, 0.682766697386666, 0.0634309455838362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.239665404322737, 0.644736158097447, 0.115598437579816, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.221977206796226, 0.59715223354589, 0.180870559657884, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.201340044382408, 0.541635147772422, 0.257024807845171, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.178456667321848, 0.48007540513033, 0.341467927547823, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.154106332362967, 0.414569324041408, 0.431324343595625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.129118257566538, 0.347347626408293, 0.523534116025168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.10434338178301, 0.280699466340501, 0.614957151876489, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0806253867791818, 0.216894475295777, 0.702480137925041, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0587719685277958, 0.158105477507336, 0.783122553964868, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0395273383428384, 0.106334513881951, 0.854138147775211, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0235469010394976, 0.0633447224233613, 0.913108376537141, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0113750306799152, 0.0306005516296095, 0.958024417690475, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00342722531700029, 0.00921975405695813, 0.987353020626042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.190107084340995, 0.804895615995233, 0.00499729966377194, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.186066848982456, 0.787789637336151, 0.0261435136813941, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.178942642224885, 0.757626412191279, 0.0634309455838362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.168975423244085, 0.715426139176099, 0.115598437579816, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.156504409031945, 0.662625031310171, 0.180870559657884, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.141954235370935, 0.601020956783894, 0.257024807845171, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.125820374353368, 0.532711698098809, 0.341467927547823, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.108652238771016, 0.460023417633359, 0.431324343595625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0910344664992384, 0.385431417475593, 0.523534116025168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0735670095954292, 0.311475838528081, 0.614957151876489, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0568447035304454, 0.240675158544514, 0.702480137925041, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0414370120916538, 0.175440433943478, 0.783122553964868, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0278686393852617, 0.117993212839528, 0.854138147775211, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0166016767437895, 0.0702899467190693, 0.913108376537141, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00801993357775083, 0.0339556487317739, 0.958024417690475, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00241635562766962, 0.0102306237462888, 0.987353020626042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.121686637088555, 0.873316063247673, 0.00499729966377194, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.119100501724209, 0.854755984594397, 0.0261435136813941, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.114540330990659, 0.822028723425505, 0.0634309455838362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.108160361705962, 0.776241200714221, 0.115598437579816, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.100177725047158, 0.718951715294959, 0.180870559657884, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.090864228351333, 0.652110963803496, 0.257024807845171, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0805370209393232, 0.577995051512854, 0.341467927547823, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0695477793161676, 0.499127877088207, 0.431324343595625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0582707273947402, 0.418195156580092, 0.523534116025168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0470898916227225, 0.337952956500788, 0.614957151876489, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0363860233451814, 0.261133838729778, 0.702480137925041, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0265236336137096, 0.190353812421422, 0.783122553964868, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0178385830216789, 0.128023269203111, 0.854138147775211, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0106266540249462, 0.0762649694379127, 0.913108376537141, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0051335211948208, 0.0368420611147039, 0.958024417690475, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00154669770124771, 0.0111002816727107, 0.987353020626042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0668486582325198, 0.928154042103708, 0.00499729966377194, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0654279625567209, 0.908428523761885, 0.0261435136813941, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0629228288613326, 0.873646225554831, 0.0634309455838362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0594179872743616, 0.824983575145823, 0.115598437579816, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0550327189937491, 0.764096721348367, 0.180870559657884, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0499163416127569, 0.693058850542072, 0.257024807845171, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0442430813822241, 0.614288991069953, 0.341467927547823, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0382061320911831, 0.530469524313191, 0.431324343595625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0320110739664584, 0.444454810008374, 0.523534116025168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0258688722657605, 0.35917397585775, 0.614957151876489, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0199886930663752, 0.277531169008584, 0.702480137925041, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0145707808264693, 0.202306665208663, 0.783122553964868, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00979964085046442, 0.136062211374325, 0.854138147775211, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00583776148363685, 0.081053861979222, 0.913108376537141, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00282010426200074, 0.039155478047524, 0.958024417690475, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.000849679705952344, 0.0117972996680061, 0.987353020626042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0275740008541033, 0.967428699482125, 0.00499729966377194, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0269879866420958, 0.94686849967651, 0.0261435136813941, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02595465911567, 0.910614395300494, 0.0634309455838362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0245089680955679, 0.859892594324616, 0.115598437579816, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0227001151654988, 0.796429325176618, 0.180870559657884, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0205896914411709, 0.722385500713658, 0.257024807845171, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0182495624605992, 0.640282509991578, 0.341467927547823, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0157594175675134, 0.552916238836861, 0.431324343595625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0132040553128484, 0.463261828661984, 0.523534116025168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0106704954865313, 0.374372352636979, 0.614957151876489, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00824501574537989, 0.289274846329579, 0.702480137925041, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00601021372121671, 0.210867232313915, 0.783122553964868, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00404219489702734, 0.141819657327762, 0.854138147775211, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00240798311277918, 0.0844836403500797, 0.913108376537141, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00116324784049654, 0.0408123344690282, 0.958024417690475, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.000350479269997483, 0.0122965001039609, 0.987353020626042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00527304915217372, 0.989729651184054, 0.00499729966377194, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00516098410364718, 0.968695502214959, 0.0261435136813941, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00496337814628278, 0.931605676269881, 0.0634309455838362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00468691482678903, 0.879714647593395, 0.115598437579816, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00434100309421973, 0.814788437247897, 0.180870559657884, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00393742118062027, 0.739037770974209, 0.257024807845171, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00348991212300208, 0.655042160329175, 0.341467927547823, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00301371512544803, 0.565661941278927, 0.431324343595625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00252504643925507, 0.473940837535577, 0.523534116025168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00204054708913073, 0.38300230103438, 0.614957151876489, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00157671617970395, 0.295943145895255, 0.702480137925041, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00114934907468572, 0.215728096960446, 0.783122553964868, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.000772999626984572, 0.145088852597805, 0.854138147775211, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.000460484982882037, 0.0864311384799768, 0.913108376537141, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.000222450962831078, 0.0417531313466936, 0.958024417690475, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.70230782719439e-05, 0.0125799562956865, 0.987353020626041, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_C2_D01[256][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_C2_D10[256][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_C3[256][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.989729651184054, 0.00527304915217372, 0.00499729966377194, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.968695502214959, 0.00516098410364707, 0.0261435136813941, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.931605676269881, 0.00496337814628292, 0.0634309455838362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.879714647593395, 0.00468691482678903, 0.115598437579816, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.814788437247897, 0.00434100309421978, 0.180870559657884, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.739037770974209, 0.00393742118062022, 0.257024807845171, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.655042160329175, 0.00348991212300207, 0.341467927547823, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.565661941278927, 0.00301371512544814, 0.431324343595625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.473940837535577, 0.00252504643925508, 0.523534116025168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.38300230103438, 0.00204054708913071, 0.614957151876489, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.295943145895255, 0.00157671617970395, 0.702480137925041, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.215728096960446, 0.00114934907468572, 0.783122553964868, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.145088852597805, 0.000772999626984516, 0.854138147775211, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0864311384799768, 0.000460484982882037, 0.913108376537141, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0417531313466936, 0.000222450962831078, 0.958024417690475, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0125799562956864, 6.70230782719994e-05, 0.987353020626042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.967428699482125, 0.0275740008541034, 0.00499729966377194, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.94686849967651, 0.0269879866420957, 0.0261435136813941, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.910614395300493, 0.0259546591156701, 0.0634309455838362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.859892594324616, 0.0245089680955679, 0.115598437579816, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.796429325176617, 0.0227001151654989, 0.180870559657884, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.722385500713658, 0.020589691441171, 0.257024807845171, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.640282509991578, 0.0182495624605992, 0.341467927547823, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.552916238836861, 0.0157594175675134, 0.431324343595625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.463261828661983, 0.0132040553128485, 0.523534116025168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.374372352636979, 0.0106704954865312, 0.614957151876489, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.289274846329579, 0.00824501574537989, 0.702480137925041, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.210867232313915, 0.00601021372121679, 0.783122553964868, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.141819657327762, 0.00404219489702734, 0.854138147775211, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0844836403500796, 0.00240798311277923, 0.913108376537141, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0408123344690281, 0.0011632478404966, 0.958024417690475, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0122965001039609, 0.000350479269997539, 0.987353020626042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.928154042103708, 0.0668486582325198, 0.00499729966377194, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.908428523761885, 0.065427962556721, 0.0261435136813941, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.873646225554831, 0.0629228288613327, 0.0634309455838362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.824983575145823, 0.0594179872743616, 0.115598437579816, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.764096721348367, 0.0550327189937492, 0.180870559657884, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.693058850542072, 0.049916341612757, 0.257024807845171, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.614288991069953, 0.0442430813822241, 0.341467927547823, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.530469524313191, 0.0382061320911832, 0.431324343595625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.444454810008373, 0.0320110739664586, 0.523534116025168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.35917397585775, 0.0258688722657604, 0.614957151876489, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.277531169008584, 0.0199886930663752, 0.702480137925041, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.202306665208663, 0.0145707808264693, 0.783122553964868, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.136062211374325, 0.00979964085046442, 0.854138147775211, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.081053861979222, 0.00583776148363685, 0.913108376537141, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.039155478047524, 0.00282010426200074, 0.958024417690475, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.011797299668006, 0.0008496797059524, 0.987353020626042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.873316063247673, 0.121686637088555, 0.00499729966377194, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.854755984594397, 0.119100501724209, 0.0261435136813941, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.822028723425505, 0.114540330990658, 0.0634309455838362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.776241200714222, 0.108160361705962, 0.115598437579816, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.718951715294959, 0.100177725047158, 0.180870559657884, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.652110963803496, 0.0908642283513328, 0.257024807845171, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.577995051512854, 0.0805370209393231, 0.341467927547823, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.499127877088207, 0.0695477793161676, 0.431324343595625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.418195156580092, 0.0582707273947403, 0.523534116025168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.337952956500788, 0.0470898916227224, 0.614957151876489, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.261133838729778, 0.0363860233451813, 0.702480137925041, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.190353812421422, 0.0265236336137096, 0.783122553964868, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.128023269203111, 0.0178385830216788, 0.854138147775211, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0762649694379127, 0.0106266540249462, 0.913108376537141, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0368420611147039, 0.0051335211948208, 0.958024417690475, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0111002816727107, 0.00154669770124777, 0.987353020626042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.804895615995233, 0.190107084340995, 0.00499729966377194, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.787789637336151, 0.186066848982456, 0.0261435136813941, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.757626412191279, 0.178942642224885, 0.0634309455838362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.715426139176099, 0.168975423244085, 0.115598437579816, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.662625031310171, 0.156504409031945, 0.180870559657884, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.601020956783894, 0.141954235370935, 0.257024807845171, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.532711698098809, 0.125820374353368, 0.341467927547823, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.460023417633359, 0.108652238771016, 0.431324343595625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.385431417475593, 0.0910344664992385, 0.523534116025168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.311475838528081, 0.0735670095954292, 0.614957151876489, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.240675158544514, 0.0568447035304454, 0.702480137925041, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.175440433943478, 0.0414370120916538, 0.783122553964868, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.117993212839528, 0.0278686393852616, 0.854138147775211, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0702899467190693, 0.0166016767437895, 0.913108376537141, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0339556487317739, 0.00801993357775077, 0.958024417690475, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0102306237462887, 0.00241635562766968, 0.987353020626042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.725365315452234, 0.269637384883995, 0.00499729966377194, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.709949548041422, 0.263906938277184, 0.0261435136813941, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.682766697386666, 0.253802357029498, 0.0634309455838362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.644736158097447, 0.239665404322737, 0.115598437579816, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.59715223354589, 0.221977206796226, 0.180870559657884, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.541635147772422, 0.201340044382408, 0.257024807845171, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.48007540513033, 0.178456667321848, 0.341467927547823, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.414569324041407, 0.154106332362967, 0.431324343595625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.347347626408293, 0.129118257566538, 0.523534116025168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.280699466340501, 0.10434338178301, 0.614957151876489, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.216894475295777, 0.0806253867791818, 0.702480137925041, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.158105477507336, 0.0587719685277958, 0.783122553964868, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.106334513881951, 0.0395273383428384, 0.854138147775211, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0633447224233613, 0.0235469010394976, 0.913108376537141, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0306005516296095, 0.0113750306799152, 0.958024417690475, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00921975405695807, 0.00342722531700035, 0.987353020626042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.63759949689293, 0.357403203443298, 0.00499729966377194, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.624048965407669, 0.349807520910937, 0.0261435136813941, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.600155112844864, 0.3364139415713, 0.0634309455838362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.566726091356216, 0.317675471063968, 0.115598437579816, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.524899599645142, 0.294229840696975, 0.180870559657884, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.476099822203266, 0.266875369951564, 0.257024807845171, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.421988521178367, 0.23654355127381, 0.341467927547823, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.364408370244786, 0.204267286159588, 0.431324343595625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.305320184363661, 0.17114569961117, 0.523534116025168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.246736140678625, 0.138306707444885, 0.614957151876489, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.190651255831311, 0.106868606243648, 0.702480137925041, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.138975452461281, 0.0779019935738509, 0.783122553964868, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0934685338672649, 0.0523933183575246, 0.854138147775211, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0556803065814871, 0.0312113168813717, 0.913108376537141, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0268980276669569, 0.0150775546425678, 0.958024417690475, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00810420683614854, 0.00454277253780988, 0.987353020626042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5447702020952, 0.450232498241028, 0.00499729966377194, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5331925176527, 0.440663968665906, 0.0261435136813941, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.512777415456253, 0.423791638959911, 0.0634309455838362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.484215387285027, 0.400186175135157, 0.115598437579816, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.44847849217546, 0.370650948166656, 0.180870559657884, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.40678356495428, 0.336191627200549, 0.257024807845171, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.36055042873222, 0.297981643719957, 0.341467927547823, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.31135347890146, 0.257322177502915, 0.431324343595625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.260868051731645, 0.215597832243187, 0.523534116025168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.210813367759379, 0.174229480364132, 0.614957151876489, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.162893985448624, 0.134625876626335, 0.702480137925041, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.118741758255053, 0.0981356877800787, 0.783122553964868, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0798602764471167, 0.0660015757776728, 0.854138147775211, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.047573707345966, 0.0393179161168928, 0.913108376537141, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0229818938683245, 0.0189936884412002, 0.958024417690475, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00692430031307151, 0.00572267906088691, 0.987353020626042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.450232498241028, 0.5447702020952, 0.00499729966377194, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.440663968665906, 0.5331925176527, 0.0261435136813941, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.423791638959911, 0.512777415456253, 0.0634309455838362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.400186175135157, 0.484215387285027, 0.115598437579816, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.370650948166656, 0.44847849217546, 0.180870559657884, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.336191627200549, 0.40678356495428, 0.257024807845171, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.297981643719957, 0.36055042873222, 0.341467927547823, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.257322177502914, 0.31135347890146, 0.431324343595625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.215597832243187, 0.260868051731645, 0.523534116025168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.174229480364132, 0.210813367759379, 0.614957151876489, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.134625876626335, 0.162893985448624, 0.702480137925041, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0981356877800787, 0.118741758255053, 0.783122553964868, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0660015757776729, 0.0798602764471166, 0.854138147775211, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0393179161168928, 0.047573707345966, 0.913108376537141, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0189936884412002, 0.0229818938683245, 0.958024417690475, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00572267906088686, 0.00692430031307156, 0.987353020626042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.357403203443298, 0.63759949689293, 0.00499729966377194, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.349807520910937, 0.624048965407669, 0.0261435136813941, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3364139415713, 0.600155112844864, 0.0634309455838362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.317675471063968, 0.566726091356216, 0.115598437579816, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.294229840696975, 0.524899599645142, 0.180870559657884, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.266875369951564, 0.476099822203266, 0.257024807845171, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.23654355127381, 0.421988521178367, 0.341467927547823, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.204267286159588, 0.364408370244786, 0.431324343595625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.17114569961117, 0.305320184363661, 0.523534116025168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.138306707444886, 0.246736140678625, 0.614957151876489, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.106868606243648, 0.190651255831311, 0.702480137925041, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0779019935738509, 0.138975452461281, 0.783122553964868, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0523933183575247, 0.0934685338672648, 0.854138147775211, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0312113168813717, 0.0556803065814871, 0.913108376537141, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0150775546425678, 0.0268980276669569, 0.958024417690475, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00454277253780982, 0.0081042068361486, 0.987353020626042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.269637384883994, 0.725365315452234, 0.00499729966377194, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.263906938277184, 0.709949548041422, 0.0261435136813941, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.253802357029498, 0.682766697386666, 0.0634309455838362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.239665404322737, 0.644736158097447, 0.115598437579816, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.221977206796226, 0.59715223354589, 0.180870559657884, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.201340044382408, 0.541635147772422, 0.257024807845171, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.178456667321848, 0.48007540513033, 0.341467927547823, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.154106332362967, 0.414569324041408, 0.431324343595625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.129118257566538, 0.347347626408293, 0.523534116025168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.10434338178301, 0.280699466340501, 0.614957151876489, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0806253867791818, 0.216894475295777, 0.702480137925041, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0587719685277958, 0.158105477507336, 0.783122553964868, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0395273383428384, 0.106334513881951, 0.854138147775211, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0235469010394976, 0.0633447224233613, 0.913108376537141, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0113750306799152, 0.0306005516296095, 0.958024417690475, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00342722531700029, 0.00921975405695813, 0.987353020626042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.190107084340995, 0.804895615995233, 0.00499729966377194, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.186066848982456, 0.787789637336151, 0.0261435136813941, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.178942642224885, 0.757626412191279, 0.0634309455838362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.168975423244085, 0.715426139176099, 0.115598437579816, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.156504409031945, 0.662625031310171, 0.180870559657884, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.141954235370935, 0.601020956783894, 0.257024807845171, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.125820374353368, 0.532711698098809, 0.341467927547823, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.108652238771016, 0.460023417633359, 0.431324343595625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0910344664992384, 0.385431417475593, 0.523534116025168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0735670095954292, 0.311475838528081, 0.614957151876489, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0568447035304454, 0.240675158544514, 0.702480137925041, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0414370120916538, 0.175440433943478, 0.783122553964868, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0278686393852617, 0.117993212839528, 0.854138147775211, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0166016767437895, 0.0702899467190693, 0.913108376537141, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00801993357775083, 0.0339556487317739, 0.958024417690475, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00241635562766962, 0.0102306237462888, 0.987353020626042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.121686637088555, 0.873316063247673, 0.00499729966377194, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.119100501724209, 0.854755984594397, 0.0261435136813941, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.114540330990659, 0.822028723425505, 0.0634309455838362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.108160361705962, 0.776241200714221, 0.115598437579816, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.100177725047158, 0.718951715294959, 0.180870559657884, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.090864228351333, 0.652110963803496, 0.257024807845171, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0805370209393232, 0.577995051512854, 0.341467927547823, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0695477793161676, 0.499127877088207, 0.431324343595625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0582707273947402, 0.418195156580092, 0.523534116025168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0470898916227225, 0.337952956500788, 0.614957151876489, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0363860233451814, 0.261133838729778, 0.702480137925041, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0265236336137096, 0.190353812421422, 0.783122553964868, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0178385830216789, 0.128023269203111, 0.854138147775211, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0106266540249462, 0.0762649694379127, 0.913108376537141, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0051335211948208, 0.0368420611147039, 0.958024417690475, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00154669770124771, 0.0111002816727107, 0.987353020626042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0668486582325198, 0.928154042103708, 0.00499729966377194, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0654279625567209, 0.908428523761885, 0.0261435136813941, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0629228288613326, 0.873646225554831, 0.0634309455838362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0594179872743616, 0.824983575145823, 0.115598437579816, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0550327189937491, 0.764096721348367, 0.180870559657884, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0499163416127569, 0.693058850542072, 0.257024807845171, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0442430813822241, 0.614288991069953, 0.341467927547823, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0382061320911831, 0.530469524313191, 0.431324343595625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0320110739664584, 0.444454810008374, 0.523534116025168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0258688722657605, 0.35917397585775, 0.614957151876489, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0199886930663752, 0.277531169008584, 0.702480137925041, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0145707808264693, 0.202306665208663, 0.783122553964868, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00979964085046442, 0.136062211374325, 0.854138147775211, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00583776148363685, 0.081053861979222, 0.913108376537141, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00282010426200074, 0.039155478047524, 0.958024417690475, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.000849679705952344, 0.0117972996680061, 0.987353020626042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0275740008541033, 0.967428699482125, 0.00499729966377194, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0269879866420958, 0.94686849967651, 0.0261435136813941, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02595465911567, 0.910614395300494, 0.0634309455838362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0245089680955679, 0.859892594324616, 0.115598437579816, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0227001151654988, 0.796429325176618, 0.180870559657884, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0205896914411709, 0.722385500713658, 0.257024807845171, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0182495624605992, 0.640282509991578, 0.341467927547823, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0157594175675134, 0.552916238836861, 0.431324343595625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0132040553128484, 0.463261828661984, 0.523534116025168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0106704954865313, 0.374372352636979, 0.614957151876489, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00824501574537989, 0.289274846329579, 0.702480137925041, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00601021372121671, 0.210867232313915, 0.783122553964868, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00404219489702734, 0.141819657327762, 0.854138147775211, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00240798311277918, 0.0844836403500797, 0.913108376537141, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00116324784049654, 0.0408123344690282, 0.958024417690475, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.000350479269997483, 0.0122965001039609, 0.987353020626042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00527304915217372, 0.989729651184054, 0.00499729966377194, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00516098410364718, 0.968695502214959, 0.0261435136813941, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00496337814628278, 0.931605676269881, 0.0634309455838362, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00468691482678903, 0.879714647593395, 0.115598437579816, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00434100309421973, 0.814788437247897, 0.180870559657884, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00393742118062027, 0.739037770974209, 0.257024807845171, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00348991212300208, 0.655042160329175, 0.341467927547823, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00301371512544803, 0.565661941278927, 0.431324343595625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00252504643925507, 0.473940837535577, 0.523534116025168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00204054708913073, 0.38300230103438, 0.614957151876489, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00157671617970395, 0.295943145895255, 0.702480137925041, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00114934907468572, 0.215728096960446, 0.783122553964868, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.000772999626984572, 0.145088852597805, 0.854138147775211, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.000460484982882037, 0.0864311384799768, 0.913108376537141, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.000222450962831078, 0.0417531313466936, 0.958024417690475, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.70230782719439e-05, 0.0125799562956865, 0.987353020626041, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_C3_D01[256][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_C3_D10[256][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_C4[256][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.969399913681765, -0.00521743905745137, -0.00494735365591289, 0.000105404027020944, 0.0197839026123487, 0.0208755723922293},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.908046449808024, -0.00510771258981087, -0.0247765470661756, 0.000539705034092675, 0.101300416461046, 0.0199976883528233},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.804172595846643, -0.00491410790103687, -0.0553839758685171, 0.00125932707643543, 0.236370515828271, 0.0184956450182041},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.668081074787348, -0.00464298048560178, -0.0888724400380267, 0.00216720012418592, 0.406774555111499, 0.0164925905005956},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.512971957697842, -0.00430331447849171, -0.115442240955972, 0.00314063863651256, 0.589484962591198, 0.0141479965089104},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.353315882878846, -0.00390641460951304, -0.124901304149477, 0.00404805968941764, 0.759804164299878, 0.0116396118908488},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.20311830328825, -0.00346555314974949, -0.108267236460212, 0.00476677223986215, 0.894703555776209, 0.00914415830564091},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0742849223439609, -0.00299555016773344, -0.0592429648392312, 0.00519955479307252, 0.97593506207664, 0.00681897579329058},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0247010025677289, -0.00251229472021431, 0.0246418252593404, 0.00528779182199163, 0.992496789709664, 0.00478689049694723},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0896207758391204, -0.00203221942428475, 0.141387445411598, 0.00501939610480664, 0.942120016824976, 0.00312613692202425},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.120778454690495, -0.00157174411188126, 0.284476550433328, 0.00443044719754819, 0.831576727785877, 0.00186647338562218},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.122650873324095, -0.00114670706809471, 0.443439315092047, 0.00360032473106009, 0.675766153014581, 0.000991787554500849},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.10298730230151, -0.000771804570137841, 0.604965803194524, 0.0026409938784937, 0.495703695282878, 0.000448614515750956},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0714904550820868, -0.000460060890043051, 0.754425438067446, 0.00168189078055642, 0.315683986158833, 0.000159200965293788},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.038266483392185, -0.000222351993969305, 0.877597152091874, 0.000852453816523546, 0.16000207738068, 3.71520970773032e-05},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0122634456948836, -6.70140940859376e-05, 0.962378954052696, 0.000264701755133823, 0.0496834313915578, 3.37258958202358e-06},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.904407877681226, -0.0260533498078992, -0.00494735365591289, 0.000551182180788229, 0.0193381244585814, 0.106703519143217},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.846251411682781, -0.0255312837961078, -0.0247765470661755, 0.00282224319204372, 0.0990178783030955, 0.102216297684363},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.747822758556474, -0.0246073704560489, -0.055383975868517, 0.00658531428005232, 0.231044528624654, 0.0945387448633856},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.618937953224022, -0.0233075890613488, -0.0888724400380267, 0.0113327936741648, 0.397608961561521, 0.0843003206396687},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.472170014825947, -0.0216695247084451, -0.115442240955972, 0.0164231301371288, 0.576202471090581, 0.0723161496107592},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.321296122568987, -0.0197418206538857, -0.124901304149477, 0.0211682459450334, 0.742683978044262, 0.0594947782450801},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.179640875210652, -0.0175834694005926, -0.108267236460212, 0.0249265610883014, 0.874543766927769, 0.0467395026340821},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0585164955021407, -0.015262699083379, -0.0592429648392312, 0.0271896817510284, 0.953944935118685, 0.0348545515507563},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0340387848714937, -0.012855361159439, 0.0246418252593404, 0.0276510937046382, 0.970133487827017, 0.0244677392399367},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0940630357990857, -0.010442776538675, 0.141387445411598, 0.0262475900540327, 0.92089182287575, 0.0159789539963799},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.121914972891576, -0.00810905517609666, 0.284476550433328, 0.0231678391920342, 0.812839335791391, 0.00954030265091895},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.121937252986454, -0.00593796838326734, 0.443439315092047, 0.0188269356769358, 0.660539542068705, 0.00506942853203245},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.101594026918634, -0.0040095162178562, 0.604965803194524, 0.0138103714491732, 0.484534317712199, 0.00229305078059389},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0702086693764764, -0.0023963863474363, 0.754425438067446, 0.00879499820335461, 0.308570878736035, 0.000813740717076489},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0374810411794044, -0.00116054154941969, 0.877597152091874, 0.00445767934008556, 0.156396851857118, 0.000189899439747038},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0119940922743474, -0.000350233598560096, 0.962378954052696, 0.00138418706359533, 0.0485639460830963, 1.72386735200203e-05},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.794785809643196, -0.0579111720175433, -0.00494735365591289, 0.00133625110923599, 0.0185530555301336, 0.24818340939089},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.74205624180651, -0.0568663259880737, -0.0247765470661756, 0.0068420673369895, 0.0949980541581497, 0.2377465097526},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.652869229297575, -0.0550042640775075, -0.0553839758685171, 0.0159650181339369, 0.22166482477077, 0.219889167743743},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.536212223374943, -0.0523569928508892, -0.0888724400380267, 0.0274745059722143, 0.381467249263471, 0.196075454278287},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.403590877802281, -0.0489755186740593, -0.115442240955972, 0.0398151947355779, 0.552810406492132, 0.168201280600039},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.267602290087324, -0.0449330592927542, -0.124901304149477, 0.0513189524454112, 0.712533271543884, 0.138379849365611},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.140412938029528, -0.040328180881836, -0.108267236460212, 0.0604303732316711, 0.8390399547844, 0.108712151296449},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0323263081369358, -0.0352867150324454, -0.0592429648392312, 0.0659169393822295, 0.915217677487484, 0.0810687548650276},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0493746537292149, -0.0299616562534864, 0.0246418252593404, 0.0670355572481846, 0.930749024283471, 0.0569099031917053},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.101162085990823, -0.024530475161156, 0.141387445411598, 0.0636329920432349, 0.883506420886548, 0.0371657028105979},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.123484069466042, -0.0191895973653717, 0.284476550433328, 0.0561666394488341, 0.779840535534591, 0.0221899414146596},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.120450691632963, -0.0141461655186833, 0.443439315092047, 0.0456428283763479, 0.633723649369293, 0.0117910643139574},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.099036360646182, -0.00960757492886818, 0.604965803194524, 0.0334809883395116, 0.464863700821861, 0.00533344321915355},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0679144048957284, -0.00576960256535711, 0.754425438067446, 0.0213220356437386, 0.296043841295651, 0.00189269245424936},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0360891751252636, -0.00280419828590356, 0.877597152091874, 0.0108069149737186, 0.150047616223485, 0.000441690122090138},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0115189471090925, -0.000848235794746938, 0.962378954052696, 0.00335573529694666, 0.046592397849745, 4.0095704451959e-05},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.652045829405155, -0.0920713617967114, -0.00494735365591289, 0.00243241836243277, 0.0174568882769369, 0.425083579408099},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.606459601805478, -0.0907306427022922, -0.0247765470661756, 0.012454822385151, 0.0893852991099881, 0.407207466467851},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.529433720847627, -0.0883013561437592, -0.0553839758685171, 0.0290616060088922, 0.208568236895814, 0.376621768259943},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.428859602658292, -0.0847630340172331, -0.0888724400380267, 0.0500126752851081, 0.358929079950577, 0.335834116161283},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.314831422556168, -0.0801065718559098, -0.115442240955972, 0.072476804778132, 0.520148796449578, 0.288091789028003},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.198386454421953, -0.0743516123635666, -0.124901304149477, 0.0934174433280042, 0.670434780661291, 0.237014238101795},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0901615076338392, -0.0675645974557612, -0.108267236460212, 0.110003238524105, 0.789467089491966, 0.186199998266063},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.000870601715046347, -0.0598739921005469, -0.0592429648392312, 0.119990601048317, 0.861144015821395, 0.138852941785111},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0684207786059969, -0.051479772052516, 0.0246418252593404, 0.122026855026996, 0.87575772650466, 0.097474143867517},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.109528554885541, -0.0426549758366429, 0.141387445411598, 0.115833062537928, 0.831306350391855, 0.063656672380803},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.124752075270279, -0.0337381379554291, 0.284476550433328, 0.102241834792267, 0.733765340191158, 0.0380064878089541},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.117884664614682, -0.0251166273335609, 0.443439315092047, 0.0830850227839866, 0.596281454961655, 0.0201954991105545},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0952433542882063, -0.0172021529332361, 0.604965803194524, 0.0609464570442839, 0.437398232117088, 0.0091350148655458},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0646322783111811, -0.0104008024734143, 0.754425438067446, 0.0388131472189617, 0.278552729720428, 0.00324176577775925},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0341273861803447, -0.00508081511510539, 0.877597152091874, 0.0196721546134794, 0.141182376583724, 0.000756518006373025},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0108538491662835, -0.00154191315368965, 0.962378954052696, 0.00610854658928905, 0.0438395865574026, 6.86751205856984e-05},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.490818289301458, -0.117825677307727, -0.00494735365591289, 0.00380008827463177, 0.0160892183647379, 0.612065435022812},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.453435388052296, -0.116825104401936, -0.0247765470661756, 0.0194577648481069, 0.0823823566470323, 0.586326141920676},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.390369148708381, -0.114901703812038, -0.0553839758685171, 0.0454020040063781, 0.192227838898328, 0.542286688067468},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.308242982056739, -0.11187003592305, -0.0888724400380267, 0.0781331796656174, 0.330808575570068, 0.483557738668652},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.21551883292744, -0.107517148939068, -0.115442240955972, 0.113228160202137, 0.479397441025573, 0.41481495573989},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.12143142420296, -0.101652225491442, -0.124901304149477, 0.145943040276091, 0.617909183713204, 0.341269881448662},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0348518084838241, -0.0941588411485247, -0.108267236460212, 0.171854489894943, 0.727615838121127, 0.268103941108842},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0367803280912074, -0.0850416207911082, -0.0592429648392312, 0.187457422272414, 0.793677194597299, 0.199930296851834},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0883166623211031, -0.0744599183176366, 0.0246418252593404, 0.190638595786006, 0.807145985745649, 0.140350173847744},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.117441442554538, -0.0627427997938013, 0.141387445411598, 0.180962234771502, 0.766177178158281, 0.0916573840069589},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.12482609466366, -0.0503820628915169, 0.284476550433328, 0.159729100705501, 0.676278074277924, 0.0547244321384233},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.113881742218926, -0.0380029601494861, 0.443439315092047, 0.129801034951556, 0.549565442794085, 0.0290789095307237},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0901484162871395, -0.0263153172628901, 0.604965803194524, 0.0952146721021703, 0.403130017059202, 0.013153241194133},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.06040859349953, -0.0160504454023789, 0.754425438067446, 0.0606365203972641, 0.256729356542126, 0.00466772389507278},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0316496765701826, -0.00789129490856763, 0.877597152091874, 0.0307331687829636, 0.13012136241424, 0.00108928818967322},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0100212924218124, -0.0024046780786309, 0.962378954052696, 0.0095431841115452, 0.0404049490351465, 9.8883301055841e-05},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.326944366270003, -0.124228746229836, -0.00494735365591289, 0.00538983525128459, 0.0144994713880851, 0.782342426976376},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.298107173487016, -0.124613194135509, -0.0247765470661756, 0.0275978186058576, 0.0742423028892816, 0.749442446219529},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.249574028733924, -0.12497108416204, -0.0553839758685171, 0.0643956939911498, 0.173234148913557, 0.693151188391927},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.186633269019065, -0.124786392264375, -0.0888724400380267, 0.110819785126573, 0.298121970109112, 0.618083808047651},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.116029346511801, -0.123429446122117, -0.115442240955972, 0.160596566498109, 0.432029034729602, 0.530216739338577},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0451021188324844, -0.120264417438588, -0.124901304149477, 0.206997544875706, 0.55685467911359, 0.436211378766285},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0191306159082295, -0.114763103098606, -0.108267236460212, 0.24374891338993, 0.65572141462614, 0.342690627450977},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0708338751691085, -0.106608809014237, -0.0592429648392312, 0.265879250601544, 0.715255366268168, 0.255551032152863},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.106046879265343, -0.0957752086925006, 0.0246418252593404, 0.270391251351231, 0.727393330180425, 0.179395681166847},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.123115085532817, -0.0825682991391798, 0.141387445411598, 0.256666835513763, 0.69047257741602, 0.117156526330616},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.122808048468116, -0.0676244807925965, 0.284476550433328, 0.226550931299597, 0.609456243683828, 0.069948803843959},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.108110793471691, -0.0518636799585313, 0.443439315092047, 0.184102616380121, 0.49526386136552, 0.0371686805925332},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0837204561969293, -0.0364025173898999, 0.604965803194524, 0.135047230234544, 0.363297458926828, 0.0168124812309326},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0553196147055758, -0.0224379879423697, 0.754425438067446, 0.0860034903226252, 0.231362386616765, 0.0059662876411094},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0287277641095366, -0.0111162480339772, 0.877597152091874, 0.0435902285733482, 0.117264302623855, 0.00139232885443671},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00904974632721639, -0.00340373357025336, 0.962378954052696, 0.0135355250764251, 0.0364126080702666, 0.000126392698082262},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.175466739983305, -0.101929103780235, -0.00494735365591289, 0.00714420363359289, 0.0127451030057767, 0.911520410813473},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.154825257045095, -0.105076917539226, -0.0247765470661756, 0.0365807908351585, 0.0652593306599806, 0.873188086065167},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.120217206102799, -0.110065261404224, -0.055383975868517, 0.0853562176858119, 0.152273625218895, 0.807602188265235},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0756308338915724, -0.11584006123254, -0.0888724400380267, 0.146891152449707, 0.262050602785978, 0.720139912143309},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0261395797701184, -0.121087442383841, -0.115442240955972, 0.212870063819647, 0.379755537408063, 0.617764502341983},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0227577407993034, -0.124430443777996, -0.124901304149477, 0.274374362721638, 0.489477861267657, 0.50823726473748},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0658398971657567, -0.124637847975359, -0.108267236460212, 0.32308814491308, 0.57638218310299, 0.399274653585257},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0988214496358638, -0.120817037769582, -0.0592429648392312, 0.352421812483377, 0.628712804386336, 0.297746835374964},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.118879354403941, -0.112563998620376, 0.0246418252593404, 0.358402450229772, 0.639382131301883, 0.209016946233322},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.12497869444466, -0.100049216796395, 0.141387445411598, 0.340210795582886, 0.606928617346896, 0.136501052899675},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.117955453131199, -0.084026808242728, 0.284476550433328, 0.300292293015578, 0.535714881967847, 0.0814985359571734},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.100347099687645, -0.0657645523682903, 0.443439315092047, 0.244027232666035, 0.435339245079606, 0.043305859218247},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0759958002206727, -0.0469031987404988, 0.604965803194524, 0.179004527590772, 0.3193401615706, 0.0195885066052748},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0494797134994702, -0.0292630242784329, 0.754425438067446, 0.113997259548542, 0.203368617390847, 0.00695142277106697},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0254510198822121, -0.0146228893345685, 0.877597152091874, 0.057778662026569, 0.103075869170634, 0.00162222592770353},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0079728504992623, -0.0045014989731493, 0.962378954052696, 0.0179412807488942, 0.0320068523977974, 0.000147262273024112},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04877894408649, -0.0448138932963133, -0.00494735365591289, 0.00899978684831643, 0.0108895197910532, 0.981092996226367},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0353960041089494, -0.0522945021051326, -0.0247765470661756, 0.0460820179748581, 0.0557581035202811, 0.93983492356722},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0131039401477366, -0.0645929324552561, -0.0553839758685171, 0.107526017559003, 0.130103825345703, 0.86924312527133},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0152863047178497, -0.0798882255965438, -0.0888724400380267, 0.185043586346667, 0.223898168889018, 0.775105215116735},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0462125762875116, -0.0958866974129736, -0.115442240955972, 0.268159377730513, 0.324466223497197, 0.664915913428746},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0758378275204539, -0.110142006801043, -0.124901304149477, 0.345638353521506, 0.41821387046779, 0.547028914481679},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.100557205414245, -0.120395523731862, -0.108267236460212, 0.407004697313391, 0.49246563070268, 0.429749637590249},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.117471501253376, -0.124892771433232, -0.0592429648392312, 0.443957277216166, 0.537177339653547, 0.320472620656126},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.124763770903117, -0.122632981707264, 0.0246418252593404, 0.451491282081518, 0.546293299450137, 0.224970345819385},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.121928815707277, -0.113517656708221, 0.141387445411598, 0.428574660070589, 0.518564752859194, 0.146919614074117},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.109825084457951, -0.0983776233115165, 0.284476550433328, 0.378288017522989, 0.457719157460437, 0.0877189823527139},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0905425479480502, -0.0788744613479405, 0.443439315092047, 0.307409081797736, 0.371957395947905, 0.046611216458302},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0671049489386968, -0.0572891597674011, 0.604965803194524, 0.225497854739947, 0.272846834421426, 0.0210836163502012},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0430471920846867, -0.0362261190613427, 0.754425438067446, 0.143606074217278, 0.173759802722112, 0.00748199613919329},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0219255589767745, -0.0182721680399974, 0.877597152091874, 0.0727856692347003, 0.0880688619625032, 0.00174604372769488},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00682840844342023, -0.00565718094961906, 0.962378954052696, 0.0226012178273601, 0.0273469153193315, 0.000158502193651794},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0448138932963133, 0.04877894408649, -0.00494735365591289, 0.0108895197910533, 0.00899978684831629, 0.981092996226367},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0522945021051327, 0.0353960041089494, -0.0247765470661756, 0.0557581035202812, 0.0460820179748579, 0.93983492356722},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0645929324552562, 0.0131039401477366, -0.0553839758685171, 0.130103825345703, 0.107526017559003, 0.86924312527133},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0798882255965437, -0.0152863047178497, -0.0888724400380267, 0.223898168889018, 0.185043586346667, 0.775105215116735},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0958866974129736, -0.0462125762875116, -0.115442240955972, 0.324466223497197, 0.268159377730513, 0.664915913428746},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.110142006801043, -0.075837827520454, -0.124901304149477, 0.41821387046779, 0.345638353521506, 0.547028914481679},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.120395523731862, -0.100557205414245, -0.108267236460212, 0.49246563070268, 0.40700469731339, 0.429749637590249},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.124892771433232, -0.117471501253376, -0.0592429648392312, 0.537177339653547, 0.443957277216166, 0.320472620656126},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.122632981707264, -0.124763770903117, 0.0246418252593404, 0.546293299450138, 0.451491282081518, 0.224970345819385},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.113517656708221, -0.121928815707277, 0.141387445411598, 0.518564752859194, 0.428574660070589, 0.146919614074117},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0983776233115164, -0.109825084457951, 0.284476550433328, 0.457719157460437, 0.378288017522988, 0.0877189823527139},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0788744613479404, -0.0905425479480503, 0.443439315092047, 0.371957395947905, 0.307409081797736, 0.046611216458302},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.057289159767401, -0.0671049489386968, 0.604965803194524, 0.272846834421426, 0.225497854739946, 0.0210836163502012},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0362261190613427, -0.0430471920846867, 0.754425438067446, 0.173759802722112, 0.143606074217278, 0.00748199613919329},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0182721680399973, -0.0219255589767746, 0.877597152091874, 0.0880688619625033, 0.0727856692347002, 0.00174604372769488},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00565718094961895, -0.00682840844342034, 0.962378954052696, 0.027346915319332, 0.0226012178273597, 0.000158502193651794},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.101929103780235, 0.175466739983306, -0.00494735365591289, 0.0127451030057769, 0.00714420363359275, 0.911520410813473},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.105076917539226, 0.154825257045095, -0.0247765470661756, 0.0652593306599808, 0.0365807908351584, 0.873188086065167},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.110065261404224, 0.120217206102799, -0.055383975868517, 0.152273625218895, 0.0853562176858117, 0.807602188265235},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.11584006123254, 0.0756308338915724, -0.0888724400380267, 0.262050602785979, 0.146891152449707, 0.720139912143309},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.12108744238384, 0.0261395797701183, -0.115442240955972, 0.379755537408063, 0.212870063819647, 0.617764502341983},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.124430443777996, -0.0227577407993034, -0.124901304149477, 0.489477861267657, 0.274374362721638, 0.50823726473748},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.124637847975359, -0.0658398971657568, -0.108267236460212, 0.57638218310299, 0.32308814491308, 0.399274653585257},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.120817037769582, -0.0988214496358639, -0.0592429648392312, 0.628712804386336, 0.352421812483377, 0.297746835374964},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.112563998620376, -0.118879354403941, 0.0246418252593404, 0.639382131301883, 0.358402450229772, 0.209016946233322},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.100049216796395, -0.124978694444661, 0.141387445411598, 0.606928617346896, 0.340210795582887, 0.136501052899675},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0840268082427279, -0.117955453131199, 0.284476550433328, 0.535714881967848, 0.300292293015578, 0.0814985359571734},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0657645523682902, -0.100347099687646, 0.443439315092047, 0.435339245079606, 0.244027232666035, 0.043305859218247},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0469031987404987, -0.0759958002206727, 0.604965803194524, 0.3193401615706, 0.179004527590772, 0.0195885066052748},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0292630242784329, -0.0494797134994703, 0.754425438067446, 0.203368617390848, 0.113997259548542, 0.00695142277106697},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0146228893345684, -0.0254510198822121, 0.877597152091874, 0.103075869170634, 0.0577786620265689, 0.00162222592770353},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00450149897314919, -0.00797285049926241, 0.962378954052696, 0.0320068523977979, 0.0179412807488938, 0.000147262273024112},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.124228746229836, 0.326944366270003, -0.00494735365591289, 0.0144994713880852, 0.00538983525128445, 0.782342426976376},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.124613194135509, 0.298107173487017, -0.0247765470661756, 0.0742423028892817, 0.0275978186058574, 0.749442446219529},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.12497108416204, 0.249574028733924, -0.055383975868517, 0.173234148913557, 0.0643956939911497, 0.693151188391927},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.124786392264375, 0.186633269019065, -0.0888724400380267, 0.298121970109112, 0.110819785126573, 0.618083808047651},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.123429446122117, 0.116029346511801, -0.115442240955972, 0.432029034729602, 0.160596566498109, 0.530216739338577},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.120264417438588, 0.0451021188324844, -0.124901304149477, 0.55685467911359, 0.206997544875706, 0.436211378766285},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.114763103098606, -0.0191306159082296, -0.108267236460212, 0.65572141462614, 0.24374891338993, 0.342690627450977},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.106608809014236, -0.0708338751691085, -0.0592429648392312, 0.715255366268169, 0.265879250601544, 0.255551032152863},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0957752086925004, -0.106046879265343, 0.0246418252593404, 0.727393330180425, 0.270391251351231, 0.179395681166847},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0825682991391797, -0.123115085532817, 0.141387445411598, 0.69047257741602, 0.256666835513763, 0.117156526330616},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0676244807925964, -0.122808048468116, 0.284476550433328, 0.609456243683828, 0.226550931299597, 0.069948803843959},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0518636799585312, -0.108110793471691, 0.443439315092047, 0.49526386136552, 0.184102616380121, 0.0371686805925332},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0364025173898998, -0.0837204561969294, 0.604965803194524, 0.363297458926828, 0.135047230234544, 0.0168124812309326},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0224379879423697, -0.0553196147055758, 0.754425438067446, 0.231362386616765, 0.086003490322625, 0.0059662876411094},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0111162480339771, -0.0287277641095366, 0.877597152091874, 0.117264302623855, 0.0435902285733479, 0.00139232885443669},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00340373357025325, -0.0090497463272165, 0.962378954052696, 0.036412608070267, 0.0135355250764246, 0.000126392698082262},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.117825677307727, 0.490818289301458, -0.00494735365591289, 0.016089218364738, 0.0038000882746316, 0.612065435022812},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.116825104401936, 0.453435388052296, -0.0247765470661756, 0.0823823566470324, 0.0194577648481067, 0.586326141920676},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.114901703812038, 0.390369148708381, -0.055383975868517, 0.192227838898328, 0.045402004006378, 0.542286688067468},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.11187003592305, 0.308242982056739, -0.0888724400380267, 0.330808575570068, 0.0781331796656173, 0.483557738668652},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.107517148939068, 0.21551883292744, -0.115442240955972, 0.479397441025573, 0.113228160202137, 0.41481495573989},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.101652225491441, 0.12143142420296, -0.124901304149477, 0.617909183713204, 0.145943040276091, 0.341269881448662},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0941588411485246, 0.034851808483824, -0.108267236460212, 0.727615838121127, 0.171854489894943, 0.268103941108842},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.085041620791108, -0.0367803280912074, -0.0592429648392312, 0.793677194597299, 0.187457422272414, 0.199930296851834},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0744599183176364, -0.0883166623211031, 0.0246418252593404, 0.807145985745649, 0.190638595786006, 0.140350173847744},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0627427997938011, -0.117441442554539, 0.141387445411598, 0.766177178158281, 0.180962234771502, 0.0916573840069589},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0503820628915168, -0.12482609466366, 0.284476550433328, 0.676278074277924, 0.159729100705501, 0.0547244321384233},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.038002960149486, -0.113881742218926, 0.443439315092047, 0.549565442794085, 0.129801034951556, 0.0290789095307237},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.02631531726289, -0.0901484162871396, 0.604965803194524, 0.403130017059202, 0.0952146721021704, 0.013153241194133},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0160504454023789, -0.06040859349953, 0.754425438067446, 0.256729356542126, 0.0606365203972639, 0.00466772389507278},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00789129490856763, -0.0316496765701826, 0.877597152091874, 0.13012136241424, 0.0307331687829637, 0.00108928818967322},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00240467807863079, -0.0100212924218125, 0.962378954052696, 0.0404049490351467, 0.00954318411154498, 9.8883301055841e-05},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0920713617967115, 0.652045829405155, -0.00494735365591289, 0.0174568882769371, 0.00243241836243258, 0.4250835794081},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0907306427022923, 0.606459601805477, -0.0247765470661756, 0.0893852991099882, 0.012454822385151, 0.407207466467851},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0883013561437592, 0.529433720847626, -0.0553839758685171, 0.208568236895814, 0.0290616060088921, 0.376621768259944},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.084763034017233, 0.428859602658291, -0.0888724400380267, 0.358929079950577, 0.0500126752851079, 0.335834116161283},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0801065718559098, 0.314831422556168, -0.115442240955972, 0.520148796449578, 0.072476804778132, 0.288091789028003},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0743516123635665, 0.198386454421953, -0.124901304149477, 0.670434780661291, 0.0934174433280043, 0.237014238101795},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0675645974557612, 0.0901615076338391, -0.108267236460212, 0.789467089491965, 0.110003238524105, 0.186199998266064},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0598739921005467, -0.000870601715046437, -0.0592429648392312, 0.861144015821395, 0.119990601048318, 0.138852941785111},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0514797720525159, -0.068420778605997, 0.0246418252593404, 0.87575772650466, 0.122026855026995, 0.097474143867517},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0426549758366428, -0.109528554885541, 0.141387445411598, 0.831306350391855, 0.115833062537928, 0.0636566723808031},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0337381379554291, -0.124752075270279, 0.284476550433328, 0.733765340191158, 0.102241834792267, 0.0380064878089541},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0251166273335609, -0.117884664614682, 0.443439315092047, 0.596281454961655, 0.0830850227839866, 0.0201954991105545},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0172021529332361, -0.0952433542882063, 0.604965803194524, 0.437398232117088, 0.0609464570442842, 0.00913501486554584},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0104008024734143, -0.0646322783111811, 0.754425438067446, 0.278552729720428, 0.0388131472189615, 0.00324176577775925},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00508081511510533, -0.0341273861803447, 0.877597152091874, 0.141182376583724, 0.0196721546134793, 0.000756518006373025},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00154191315368954, -0.0108538491662837, 0.962378954052696, 0.0438395865574029, 0.00610854658928872, 6.86751205856984e-05},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0579111720175432, 0.794785809643197, -0.00494735365591289, 0.0185530555301339, 0.00133625110923585, 0.24818340939089},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0568663259880737, 0.74205624180651, -0.0247765470661755, 0.0949980541581499, 0.00684206733698936, 0.2377465097526},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0550042640775074, 0.652869229297575, -0.0553839758685171, 0.22166482477077, 0.0159650181339367, 0.219889167743743},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0523569928508891, 0.536212223374943, -0.0888724400380267, 0.381467249263471, 0.0274745059722142, 0.196075454278287},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0489755186740592, 0.403590877802281, -0.115442240955972, 0.552810406492133, 0.0398151947355777, 0.168201280600039},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0449330592927539, 0.267602290087325, -0.124901304149477, 0.712533271543884, 0.0513189524454109, 0.138379849365611},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0403281808818358, 0.140412938029528, -0.108267236460212, 0.8390399547844, 0.0604303732316709, 0.108712151296449},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0352867150324452, 0.0323263081369358, -0.0592429648392312, 0.915217677487484, 0.0659169393822292, 0.0810687548650275},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0299616562534861, -0.0493746537292149, 0.0246418252593404, 0.930749024283471, 0.0670355572481843, 0.0569099031917051},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0245304751611558, -0.101162085990823, 0.141387445411598, 0.883506420886548, 0.0636329920432349, 0.0371657028105979},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0191895973653715, -0.123484069466042, 0.284476550433328, 0.779840535534591, 0.0561666394488341, 0.0221899414146596},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0141461655186832, -0.120450691632963, 0.443439315092047, 0.633723649369293, 0.0456428283763478, 0.0117910643139574},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00960757492886809, -0.099036360646182, 0.604965803194524, 0.464863700821861, 0.0334809883395115, 0.00533344321915355},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00576960256535705, -0.0679144048957284, 0.754425438067446, 0.296043841295651, 0.0213220356437384, 0.00189269245424936},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0028041982859035, -0.0360891751252637, 0.877597152091874, 0.150047616223485, 0.0108069149737184, 0.000441690122090138},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.000848235794746854, -0.0115189471090926, 0.962378954052696, 0.0465923978497452, 0.00335573529694644, 4.00957044519312e-05},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0260533498078992, 0.904407877681226, -0.00494735365591289, 0.0193381244585816, 0.00055118218078809, 0.106703519143217},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0255312837961078, 0.846251411682781, -0.0247765470661756, 0.0990178783030956, 0.00282224319204358, 0.102216297684364},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0246073704560487, 0.747822758556474, -0.0553839758685171, 0.231044528624654, 0.00658531428005224, 0.0945387448633853},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0233075890613487, 0.618937953224022, -0.0888724400380267, 0.397608961561521, 0.0113327936741646, 0.0843003206396687},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0216695247084449, 0.472170014825947, -0.115442240955972, 0.576202471090582, 0.0164231301371287, 0.072316149610759},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0197418206538855, 0.321296122568987, -0.124901304149477, 0.742683978044262, 0.0211682459450332, 0.0594947782450799},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0175834694005924, 0.179640875210652, -0.108267236460212, 0.874543766927769, 0.0249265610883013, 0.0467395026340821},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0152626990833788, 0.0585164955021407, -0.0592429648392312, 0.953944935118685, 0.0271896817510283, 0.0348545515507563},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0128553611594388, -0.0340387848714937, 0.0246418252593404, 0.970133487827017, 0.027651093704638, 0.0244677392399366},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.010442776538675, -0.0940630357990858, 0.141387445411598, 0.92089182287575, 0.0262475900540327, 0.01597895399638},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00810905517609659, -0.121914972891576, 0.284476550433328, 0.812839335791391, 0.0231678391920342, 0.00954030265091895},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00593796838326712, -0.121937252986454, 0.443439315092047, 0.660539542068706, 0.0188269356769355, 0.0050694285320324},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0040095162178561, -0.101594026918634, 0.604965803194524, 0.484534317712199, 0.013810371449173, 0.00229305078059389},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00239638634743622, -0.0702086693764764, 0.754425438067446, 0.308570878736036, 0.00879499820335422, 0.000813740717076489},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00116054154941958, -0.0374810411794045, 0.877597152091874, 0.156396851857118, 0.00445767934008523, 0.000189899439747038},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.000350233598559985, -0.0119940922743475, 0.962378954052696, 0.0485639460830969, 0.00138418706359478, 1.72386735200203e-05},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00521743905745128, 0.969399913681765, -0.00494735365591289, 0.0197839026123489, 0.000105404027020806, 0.0208755723922293},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00510771258981089, 0.908046449808024, -0.0247765470661756, 0.101300416461047, 0.000539705034092536, 0.0199976883528236},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00491410790103682, 0.804172595846643, -0.055383975868517, 0.236370515828271, 0.00125932707643527, 0.0184956450182039},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00464298048560166, 0.668081074787348, -0.0888724400380267, 0.4067745551115, 0.0021672001241858, 0.0164925905005956},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00430331447849154, 0.512971957697843, -0.115442240955972, 0.589484962591198, 0.0031406386365124, 0.0141479965089102},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00390641460951294, 0.353315882878846, -0.124901304149477, 0.759804164299878, 0.00404805968941761, 0.0116396118908489},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00346555314974938, 0.20311830328825, -0.108267236460212, 0.894703555776209, 0.00476677223986206, 0.00914415830564098},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00299555016773315, 0.074284922343961, -0.0592429648392312, 0.975935062076641, 0.00519955479307221, 0.00681897579329033},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00251229472021414, -0.0247010025677288, 0.0246418252593404, 0.992496789709664, 0.00528779182199145, 0.00478689049694714},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00203221942428464, -0.0896207758391204, 0.141387445411598, 0.942120016824976, 0.00501939610480665, 0.00312613692202432},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00157174411188113, -0.120778454690495, 0.284476550433328, 0.831576727785877, 0.00443044719754807, 0.00186647338562218},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0011467070680946, -0.122650873324095, 0.443439315092047, 0.675766153014581, 0.00360032473105995, 0.000991787554500849},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.000771804570137744, -0.10298730230151, 0.604965803194524, 0.495703695282878, 0.00264099387849376, 0.000448614515750997},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.000460060890043024, -0.0714904550820869, 0.754425438067446, 0.315683986158834, 0.00168189078055625, 0.000159200965293788},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.000222351993969222, -0.0382664833921851, 0.877597152091874, 0.16000207738068, 0.000852453816523324, 3.71520970772754e-05},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -6.70140940857988e-05, -0.0122634456948837, 0.962378954052696, 0.0496834313915583, 0.000264701755133379, 3.37258958205133e-06}};
    
    static const double FE1[256][1] = \
    {{1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0}};
    
    static const double FE3_C0[256][2] = \
    {{1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0},
    {1.0, 0.0}};
    
    static const double FE3_C1[256][2] = \
    {{0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0},
    {0.0, 1.0}};
    
    // Reset values in the element tensor.
    for (unsigned int r = 0; r < 32; r++)
    {
      A[r] = 0.0;
    } // end loop over 'r'
    
    // Compute element tensor using UFL quadrature representation
    // Optimisations: ('eliminate zeros', False), ('ignore ones', False), ('ignore zero tables', False), ('optimisation', False), ('remove zero terms', False)
    
    // Loop quadrature points for integral.
    // Number of operations to compute element tensor for following IP loop = 75279360
    for (unsigned int ip = 0; ip < 256; ip++)
    {
      
      // Coefficient declarations.
      double F0 = 0.0;
      double F1 = 0.0;
      double F2 = 0.0;
      double F3 = 0.0;
      double F4 = 0.0;
      double F5 = 0.0;
      double F6 = 0.0;
      double F7 = 0.0;
      double F8 = 0.0;
      double F9 = 0.0;
      double F10 = 0.0;
      double F11 = 0.0;
      double F12 = 0.0;
      double F13 = 0.0;
      double F14 = 0.0;
      double F15 = 0.0;
      double F16 = 0.0;
      double F17 = 0.0;
      double F18 = 0.0;
      double F19 = 0.0;
      double F20 = 0.0;
      double F21 = 0.0;
      double F22 = 0.0;
      double F23 = 0.0;
      double F24 = 0.0;
      double F25 = 0.0;
      
      // Total number of operations to compute function values = 4
      for (unsigned int r = 0; r < 1; r++)
      {
        F0 += FE1[ip][0]*w[5][0];
        F17 += FE1[ip][0]*w[1][0];
      } // end loop over 'r'
      
      // Total number of operations to compute function values = 8
      for (unsigned int r = 0; r < 2; r++)
      {
        F5 += FE3_C0[ip][r]*w[2][r];
        F6 += FE3_C1[ip][r]*w[2][r];
      } // end loop over 'r'
      
      // Total number of operations to compute function values = 1408
      for (unsigned int r = 0; r < 32; r++)
      {
        F1 += FE0_C2_D10[ip][r]*w[3][r];
        F2 += FE0_C2_D01[ip][r]*w[3][r];
        F3 += FE0_C3_D10[ip][r]*w[3][r];
        F4 += FE0_C3_D01[ip][r]*w[3][r];
        F7 += FE0_C2_D10[ip][r]*w[4][r];
        F8 += FE0_C2_D01[ip][r]*w[4][r];
        F9 += FE0_C3_D10[ip][r]*w[4][r];
        F10 += FE0_C3_D01[ip][r]*w[4][r];
        F11 += FE0_C0[ip][r]*w[3][r];
        F12 += FE0_C0[ip][r]*w[4][r];
        F13 += FE0_C1[ip][r]*w[3][r];
        F14 += FE0_C1[ip][r]*w[4][r];
        F15 += FE0_C0_D10[ip][r]*w[3][r];
        F16 += FE0_C0_D01[ip][r]*w[3][r];
        F18 += FE0_C4[ip][r]*w[3][r];
        F19 += FE0_C0_D10[ip][r]*w[4][r];
        F20 += FE0_C0_D01[ip][r]*w[4][r];
        F21 += FE0_C4[ip][r]*w[4][r];
        F22 += FE0_C1_D10[ip][r]*w[3][r];
        F23 += FE0_C1_D01[ip][r]*w[3][r];
        F24 += FE0_C1_D10[ip][r]*w[4][r];
        F25 += FE0_C1_D01[ip][r]*w[4][r];
      } // end loop over 'r'
      
      // Number of operations for primary indices: 292640
      for (unsigned int j = 0; j < 32; j++)
      {
        // Number of operations to compute entry: 9145
        A[j] += (((((((FE0_C0[ip][j]*F5 + FE0_C1[ip][j]*F6))*((((-1.0)*F0 + 1.0))*(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10))))))) + ((FE0_C0[ip][j]*F5 + FE0_C1[ip][j]*F6))*(F0*(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))))*(-1.0) + ((((K[0]*FE0_C0_D10[ip][j] + K[2]*FE0_C0_D01[ip][j]))*(((((((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(((((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4))))))) + ((-1.0)*((-1.0)*((K[1]*F1 + K[3]*F2)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*((-1.0)*((-1.0)*((K[1]*F1 + K[3]*F2)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4))))))) + ((-1.0)*((-1.0)*((K[0]*F3 + K[2]*F4)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*((-1.0)*((-1.0)*((K[0]*F3 + K[2]*F4)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4))))))) + ((-1.0)*((-1.0)*((K[0]*F3 + K[2]*F4)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*((-1.0)*((-1.0)*((K[0]*F3 + K[2]*F4)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K[1]*F1 + K[3]*F2)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(1000000.0*(0.5*(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*((-1.0)*((-1.0)*((K[0]*F3 + K[2]*F4)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4))))))) + ((-1.0)*((-1.0)*((K[1]*F1 + K[3]*F2)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4))))))))))))) + ((-1.0)*((-1.0)*((K[1]*F1 + K[3]*F2)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(((((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(1000000.0*(0.5*(((((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*((-1.0)*((-1.0)*((K[1]*F1 + K[3]*F2)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4))))))) + ((-1.0)*((-1.0)*((K[0]*F3 + K[2]*F4)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4))))))))))) + ((-1.0)*((-1.0)*((K[1]*F1 + K[3]*F2)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4))))))) + ((-1.0)*((-1.0)*((K[1]*F1 + K[3]*F2)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*((-1.0)*((-1.0)*((K[1]*F1 + K[3]*F2)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4))))))) + ((-1.0)*((-1.0)*((K[0]*F3 + K[2]*F4)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*((-1.0)*((-1.0)*((K[0]*F3 + K[2]*F4)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4))))))) + ((-1.0)*((-1.0)*((K[1]*F1 + K[3]*F2)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*((-1.0)*((-1.0)*((K[1]*F1 + K[3]*F2)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))) + (-1.0)*1.0)))))))))*(F0*(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4))))))) + (((((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(((((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10))))))) + ((-1.0)*((-1.0)*((K[1]*F7 + K[3]*F8)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*((-1.0)*((-1.0)*((K[1]*F7 + K[3]*F8)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10))))))) + ((-1.0)*((-1.0)*((K[0]*F9 + K[2]*F10)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*((-1.0)*((-1.0)*((K[0]*F9 + K[2]*F10)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10))))))) + ((-1.0)*((-1.0)*((K[0]*F9 + K[2]*F10)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*((-1.0)*((-1.0)*((K[0]*F9 + K[2]*F10)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K[1]*F7 + K[3]*F8)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(1000000.0*(0.5*(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*((-1.0)*((-1.0)*((K[0]*F9 + K[2]*F10)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10))))))) + ((-1.0)*((-1.0)*((K[1]*F7 + K[3]*F8)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10))))))))))))) + ((-1.0)*((-1.0)*((K[1]*F7 + K[3]*F8)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(((((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(1000000.0*(0.5*(((((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*((-1.0)*((-1.0)*((K[1]*F7 + K[3]*F8)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10))))))) + ((-1.0)*((-1.0)*((K[0]*F9 + K[2]*F10)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10))))))))))) + ((-1.0)*((-1.0)*((K[1]*F7 + K[3]*F8)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10))))))) + ((-1.0)*((-1.0)*((K[1]*F7 + K[3]*F8)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*((-1.0)*((-1.0)*((K[1]*F7 + K[3]*F8)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10))))))) + ((-1.0)*((-1.0)*((K[0]*F9 + K[2]*F10)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*((-1.0)*((-1.0)*((K[0]*F9 + K[2]*F10)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10))))))) + ((-1.0)*((-1.0)*((K[1]*F7 + K[3]*F8)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*((-1.0)*((-1.0)*((K[1]*F7 + K[3]*F8)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))) + (-1.0)*1.0)))))))))*((((-1.0)*F0 + 1.0))*(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10))))))))) + ((K[0]*FE0_C1_D10[ip][j] + K[2]*FE0_C1_D01[ip][j]))*(((((((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(1000000.0*(0.5*(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*((-1.0)*((-1.0)*((K[0]*F3 + K[2]*F4)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4))))))) + ((-1.0)*((-1.0)*((K[1]*F1 + K[3]*F2)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4))))))))))) + ((-1.0)*((-1.0)*((K[0]*F3 + K[2]*F4)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4))))))) + ((-1.0)*((-1.0)*((K[1]*F1 + K[3]*F2)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*((-1.0)*((-1.0)*((K[1]*F1 + K[3]*F2)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4))))))) + ((-1.0)*((-1.0)*((K[0]*F3 + K[2]*F4)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*((-1.0)*((-1.0)*((K[0]*F3 + K[2]*F4)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4))))))) + ((-1.0)*((-1.0)*((K[0]*F3 + K[2]*F4)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*((-1.0)*((-1.0)*((K[0]*F3 + K[2]*F4)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))) + (-1.0)*1.0))))))) + ((-1.0)*((-1.0)*((K[1]*F1 + K[3]*F2)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4))))))) + ((-1.0)*((-1.0)*((K[1]*F1 + K[3]*F2)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*((-1.0)*((-1.0)*((K[1]*F1 + K[3]*F2)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4))))))) + ((-1.0)*((-1.0)*((K[0]*F3 + K[2]*F4)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*((-1.0)*((-1.0)*((K[0]*F3 + K[2]*F4)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4))))))) + ((-1.0)*((-1.0)*((K[1]*F1 + K[3]*F2)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*((-1.0)*((-1.0)*((K[1]*F1 + K[3]*F2)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K[0]*F3 + K[2]*F4)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(1000000.0*(0.5*(((((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*((-1.0)*((-1.0)*((K[1]*F1 + K[3]*F2)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4))))))) + ((-1.0)*((-1.0)*((K[0]*F3 + K[2]*F4)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))))))))))*(F0*(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4))))))) + (((((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(1000000.0*(0.5*(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*((-1.0)*((-1.0)*((K[0]*F9 + K[2]*F10)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10))))))) + ((-1.0)*((-1.0)*((K[1]*F7 + K[3]*F8)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10))))))))))) + ((-1.0)*((-1.0)*((K[0]*F9 + K[2]*F10)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10))))))) + ((-1.0)*((-1.0)*((K[1]*F7 + K[3]*F8)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*((-1.0)*((-1.0)*((K[1]*F7 + K[3]*F8)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10))))))) + ((-1.0)*((-1.0)*((K[0]*F9 + K[2]*F10)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*((-1.0)*((-1.0)*((K[0]*F9 + K[2]*F10)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10))))))) + ((-1.0)*((-1.0)*((K[0]*F9 + K[2]*F10)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*((-1.0)*((-1.0)*((K[0]*F9 + K[2]*F10)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))) + (-1.0)*1.0))))))) + ((-1.0)*((-1.0)*((K[1]*F7 + K[3]*F8)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10))))))) + ((-1.0)*((-1.0)*((K[1]*F7 + K[3]*F8)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*((-1.0)*((-1.0)*((K[1]*F7 + K[3]*F8)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10))))))) + ((-1.0)*((-1.0)*((K[0]*F9 + K[2]*F10)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*((-1.0)*((-1.0)*((K[0]*F9 + K[2]*F10)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10))))))) + ((-1.0)*((-1.0)*((K[1]*F7 + K[3]*F8)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*((-1.0)*((-1.0)*((K[1]*F7 + K[3]*F8)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K[0]*F9 + K[2]*F10)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(1000000.0*(0.5*(((((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*((-1.0)*((-1.0)*((K[1]*F7 + K[3]*F8)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10))))))) + ((-1.0)*((-1.0)*((K[0]*F9 + K[2]*F10)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))))))))))*((((-1.0)*F0 + 1.0))*(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))))) + (((K[1]*FE0_C0_D10[ip][j] + K[3]*FE0_C0_D01[ip][j]))*(((((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(((((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(1000000.0*(0.5*(((((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*((-1.0)*((-1.0)*((K[1]*F1 + K[3]*F2)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4))))))) + ((-1.0)*((-1.0)*((K[0]*F3 + K[2]*F4)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4))))))))))) + ((-1.0)*((-1.0)*((K[1]*F1 + K[3]*F2)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4))))))) + ((-1.0)*((-1.0)*((K[1]*F1 + K[3]*F2)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*((-1.0)*((-1.0)*((K[1]*F1 + K[3]*F2)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4))))))) + ((-1.0)*((-1.0)*((K[0]*F3 + K[2]*F4)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*((-1.0)*((-1.0)*((K[0]*F3 + K[2]*F4)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4))))))) + ((-1.0)*((-1.0)*((K[1]*F1 + K[3]*F2)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*((-1.0)*((-1.0)*((K[1]*F1 + K[3]*F2)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))) + (-1.0)*1.0))))))) + ((-1.0)*((-1.0)*((K[0]*F3 + K[2]*F4)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(((((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4))))))) + ((-1.0)*((-1.0)*((K[1]*F1 + K[3]*F2)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*((-1.0)*((-1.0)*((K[1]*F1 + K[3]*F2)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4))))))) + ((-1.0)*((-1.0)*((K[0]*F3 + K[2]*F4)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*((-1.0)*((-1.0)*((K[0]*F3 + K[2]*F4)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4))))))) + ((-1.0)*((-1.0)*((K[0]*F3 + K[2]*F4)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*((-1.0)*((-1.0)*((K[0]*F3 + K[2]*F4)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K[1]*F1 + K[3]*F2)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(1000000.0*(0.5*(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*((-1.0)*((-1.0)*((K[0]*F3 + K[2]*F4)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4))))))) + ((-1.0)*((-1.0)*((K[1]*F1 + K[3]*F2)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))))))))))*(F0*(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4))))))) + (((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(((((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(1000000.0*(0.5*(((((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*((-1.0)*((-1.0)*((K[1]*F7 + K[3]*F8)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10))))))) + ((-1.0)*((-1.0)*((K[0]*F9 + K[2]*F10)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10))))))))))) + ((-1.0)*((-1.0)*((K[1]*F7 + K[3]*F8)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10))))))) + ((-1.0)*((-1.0)*((K[1]*F7 + K[3]*F8)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*((-1.0)*((-1.0)*((K[1]*F7 + K[3]*F8)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10))))))) + ((-1.0)*((-1.0)*((K[0]*F9 + K[2]*F10)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*((-1.0)*((-1.0)*((K[0]*F9 + K[2]*F10)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10))))))) + ((-1.0)*((-1.0)*((K[1]*F7 + K[3]*F8)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*((-1.0)*((-1.0)*((K[1]*F7 + K[3]*F8)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))) + (-1.0)*1.0))))))) + ((-1.0)*((-1.0)*((K[0]*F9 + K[2]*F10)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(((((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10))))))) + ((-1.0)*((-1.0)*((K[1]*F7 + K[3]*F8)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*((-1.0)*((-1.0)*((K[1]*F7 + K[3]*F8)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10))))))) + ((-1.0)*((-1.0)*((K[0]*F9 + K[2]*F10)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*((-1.0)*((-1.0)*((K[0]*F9 + K[2]*F10)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10))))))) + ((-1.0)*((-1.0)*((K[0]*F9 + K[2]*F10)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*((-1.0)*((-1.0)*((K[0]*F9 + K[2]*F10)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K[1]*F7 + K[3]*F8)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(1000000.0*(0.5*(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*((-1.0)*((-1.0)*((K[0]*F9 + K[2]*F10)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10))))))) + ((-1.0)*((-1.0)*((K[1]*F7 + K[3]*F8)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))))))))))*((((-1.0)*F0 + 1.0))*(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10))))))))) + ((K[1]*FE0_C1_D10[ip][j] + K[3]*FE0_C1_D01[ip][j]))*(((((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4))))))) + ((-1.0)*((-1.0)*((K[1]*F1 + K[3]*F2)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*((-1.0)*((-1.0)*((K[1]*F1 + K[3]*F2)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4))))))) + ((-1.0)*((-1.0)*((K[0]*F3 + K[2]*F4)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*((-1.0)*((-1.0)*((K[0]*F3 + K[2]*F4)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4))))))) + ((-1.0)*((-1.0)*((K[1]*F1 + K[3]*F2)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*((-1.0)*((-1.0)*((K[1]*F1 + K[3]*F2)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K[0]*F3 + K[2]*F4)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(1000000.0*(0.5*(((((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*((-1.0)*((-1.0)*((K[1]*F1 + K[3]*F2)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4))))))) + ((-1.0)*((-1.0)*((K[0]*F3 + K[2]*F4)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4))))))))))))) + ((-1.0)*((-1.0)*((K[0]*F3 + K[2]*F4)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(1000000.0*(0.5*(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*((-1.0)*((-1.0)*((K[0]*F3 + K[2]*F4)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4))))))) + ((-1.0)*((-1.0)*((K[1]*F1 + K[3]*F2)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4))))))))))) + ((-1.0)*((-1.0)*((K[0]*F3 + K[2]*F4)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4))))))) + ((-1.0)*((-1.0)*((K[1]*F1 + K[3]*F2)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*((-1.0)*((-1.0)*((K[1]*F1 + K[3]*F2)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4))))))) + ((-1.0)*((-1.0)*((K[0]*F3 + K[2]*F4)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*((-1.0)*((-1.0)*((K[0]*F3 + K[2]*F4)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4))))))) + ((-1.0)*((-1.0)*((K[0]*F3 + K[2]*F4)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))*((-1.0)*((-1.0)*((K[0]*F3 + K[2]*F4)))/(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4)))))))) + (-1.0)*1.0)))))))))*(F0*(((((-1.0)*((K[0]*F1 + K[2]*F2)) + 1.0))*(((-1.0)*((K[1]*F3 + K[3]*F4)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F1 + K[3]*F2)))*((-1.0)*((K[0]*F3 + K[2]*F4))))))) + (((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10))))))) + ((-1.0)*((-1.0)*((K[1]*F7 + K[3]*F8)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*((-1.0)*((-1.0)*((K[1]*F7 + K[3]*F8)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10))))))) + ((-1.0)*((-1.0)*((K[0]*F9 + K[2]*F10)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*((-1.0)*((-1.0)*((K[0]*F9 + K[2]*F10)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10))))))) + ((-1.0)*((-1.0)*((K[1]*F7 + K[3]*F8)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*((-1.0)*((-1.0)*((K[1]*F7 + K[3]*F8)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K[0]*F9 + K[2]*F10)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(1000000.0*(0.5*(((((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*((-1.0)*((-1.0)*((K[1]*F7 + K[3]*F8)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10))))))) + ((-1.0)*((-1.0)*((K[0]*F9 + K[2]*F10)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10))))))))))))) + ((-1.0)*((-1.0)*((K[0]*F9 + K[2]*F10)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(1000000.0*(0.5*(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*((-1.0)*((-1.0)*((K[0]*F9 + K[2]*F10)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10))))))) + ((-1.0)*((-1.0)*((K[1]*F7 + K[3]*F8)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10))))))))))) + ((-1.0)*((-1.0)*((K[0]*F9 + K[2]*F10)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10))))))) + ((-1.0)*((-1.0)*((K[1]*F7 + K[3]*F8)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*((-1.0)*((-1.0)*((K[1]*F7 + K[3]*F8)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10))))))) + ((-1.0)*((-1.0)*((K[0]*F9 + K[2]*F10)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*((-1.0)*((-1.0)*((K[0]*F9 + K[2]*F10)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10))))))) + ((-1.0)*((-1.0)*((K[0]*F9 + K[2]*F10)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))*((-1.0)*((-1.0)*((K[0]*F9 + K[2]*F10)))/(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))) + (-1.0)*1.0)))))))))*((((-1.0)*F0 + 1.0))*(((((-1.0)*((K[0]*F7 + K[2]*F8)) + 1.0))*(((-1.0)*((K[1]*F9 + K[3]*F10)) + 1.0)) + (-1.0)*(((-1.0)*((K[1]*F7 + K[3]*F8)))*((-1.0)*((K[0]*F9 + K[2]*F10)))))))))))) + (FE0_C2[ip][j]*((F11*F0 + F12*(((-1.0)*F0 + 1.0)))) + FE0_C3[ip][j]*((F13*F0 + F14*(((-1.0)*F0 + 1.0)))))) + ((((((K[0]*FE0_C1_D10[ip][j] + K[2]*FE0_C1_D01[ip][j]) + (K[1]*FE0_C0_D10[ip][j] + K[3]*FE0_C0_D01[ip][j])))*0.5)*((((((K[0]*F22 + K[2]*F23) + (K[1]*F15 + K[3]*F16)))*F17)*F0 + ((((K[0]*F24 + K[2]*F25) + (K[1]*F19 + K[3]*F20)))*F17)*(((-1.0)*F0 + 1.0)))) + ((2.0*((K[0]*FE0_C0_D10[ip][j] + K[2]*FE0_C0_D01[ip][j])))*0.5)*(((((2.0*((K[0]*F15 + K[2]*F16)))*F17 + 1.0*((-1.0)*F18)))*F0 + (((2.0*((K[0]*F19 + K[2]*F20)))*F17 + 1.0*((-1.0)*F21)))*(((-1.0)*F0 + 1.0))))) + (((((K[0]*FE0_C1_D10[ip][j] + K[2]*FE0_C1_D01[ip][j]) + (K[1]*FE0_C0_D10[ip][j] + K[3]*FE0_C0_D01[ip][j])))*0.5)*((((((K[0]*F22 + K[2]*F23) + (K[1]*F15 + K[3]*F16)))*F17)*F0 + ((((K[0]*F24 + K[2]*F25) + (K[1]*F19 + K[3]*F20)))*F17)*(((-1.0)*F0 + 1.0)))) + ((2.0*((K[1]*FE0_C1_D10[ip][j] + K[3]*FE0_C1_D01[ip][j])))*0.5)*(((((2.0*((K[1]*F22 + K[3]*F23)))*F17 + 1.0*((-1.0)*F18)))*F0 + (((2.0*((K[1]*F24 + K[3]*F25)))*F17 + 1.0*((-1.0)*F21)))*(((-1.0)*F0 + 1.0)))))))*W256[ip]*det;
      } // end loop over 'j'
    } // end loop over 'ip'
  }

};


class ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_cell_integral_0_otherwise: public ufc::cell_integral
{
public:

  ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_cell_integral_0_otherwise() : ufc::cell_integral()
  {
    
  }

  ~ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_cell_integral_0_otherwise() override
  {
    
  }

  const std::vector<bool> & enabled_coefficients() const final override
  {
    static const std::vector<bool> enabled({false, true, false, true, true, true});
    return enabled;
  }

  void tabulate_tensor(double * A,
                       const double * const * w,
                       const double * coordinate_dofs,
                       int cell_orientation) const final override
  {
    // Compute Jacobian
    double J[4];
    compute_jacobian_triangle_2d(J, coordinate_dofs);
    
    // Compute Jacobian inverse and determinant
    double K[4];
    double detJ;
    compute_jacobian_inverse_triangle_2d(K, detJ, J);
    
    // Set scale factor
    const double det = std::abs(detJ);
    
    // Compute cell volume
    
    
    // Compute circumradius of triangle in 2D
    
    
    // Array of quadrature weights.
    static const double W7[7] = {0.1125, 0.0629695902724136, 0.0629695902724136, 0.0629695902724136, 0.0661970763942531, 0.0661970763942531, 0.0661970763942531};
    // Quadrature points on the UFC reference element: (0.333333333333333, 0.333333333333333), (0.797426985353087, 0.101286507323456), (0.101286507323456, 0.797426985353087), (0.101286507323456, 0.101286507323456), (0.0597158717897698, 0.470142064105115), (0.470142064105115, 0.0597158717897698), (0.470142064105115, 0.470142064105115)
    
    // Values of basis functions at quadrature points.
    static const double FE0_C0_D01[7][32] = \
    {{0.499999999999997, 0.0, -0.5, 0.0, 1.49999999999999, -1.5, 1.50000000000001, -1.50000000000001, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.226917347726987, 0.0, 0.22691734772699, 4.99609082499684, -1.40766939090795, -0.138495913638076, 0.138495913638093, 1.40766939090791, -4.99609082499681, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.226917347726988, 0.0, 2.40766939090794, -0.31729336931747, 1.7249627602254, 1.09037602159047, -3.27112806477141, 0.178797455679365, 0.317293369317472, -1.90376021590478, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-2.40766939090795, 0.0, 0.22691734772699, -0.317293369317451, -0.178797455679388, 3.27112806477144, -1.09037602159048, -1.7249627602254, 0.317293369317464, 1.90376021590477, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.247325510992286, 0.0, -0.24732551099229, -0.220580620915207, 0.489302043969158, -2.98395306595374, 2.98395306595375, -0.489302043969166, 0.220580620915208, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.247325510992286, 0.0, 0.510697956030843, 0.868313777480736, -1.35761582144991, 0.379011733511577, -1.13703520053469, -3.85226684343448, -0.86831377748072, 5.20988266488436, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.510697956030837, 0.0, -0.247325510992291, 0.868313777480728, 3.85226684343446, 1.13703520053469, -0.379011733511546, 1.35761582144988, -0.868313777480716, -5.20988266488437, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_C0_D10[7][32] = \
    {{0.5, -0.5, 0.0, 1.5, 0.0, -1.5, 0.0, -1.5, 1.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.226917347726979, 2.40766939090793, 0.0, 1.72496276022541, -0.317293369317461, 0.178797455679369, 0.317293369317461, 1.09037602159046, -3.27112806477142, -1.90376021590477, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.226917347726987, 0.226917347726984, 0.0, -1.40766939090794, 4.99609082499683, 1.40766939090794, -4.99609082499683, -0.138495913638092, 0.138495913638093, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-2.40766939090794, 0.226917347726988, 0.0, -0.178797455679373, -0.317293369317462, -1.7249627602254, 0.317293369317462, 3.27112806477145, -1.09037602159049, 1.90376021590477, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.247325510992288, 0.510697956030838, 0.0, -1.3576158214499, 0.868313777480728, -3.85226684343447, -0.868313777480728, 0.379011733511571, -1.1370352005347, 5.20988266488437, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.247325510992291, -0.24732551099229, 0.0, 0.489302043969163, -0.220580620915198, -0.489302043969163, 0.220580620915198, -2.98395306595374, 2.98395306595374, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.510697956030834, -0.247325510992292, 0.0, 3.85226684343447, 0.868313777480726, 1.35761582144989, -0.868313777480728, 1.13703520053468, -0.37901173351156, -5.20988266488436, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_C1_D01[7][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.499999999999997, 0.0, -0.5, 0.0, 1.49999999999999, -1.5, 1.50000000000001, -1.50000000000001, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.226917347726987, 0.0, 0.22691734772699, 4.99609082499684, -1.40766939090795, -0.138495913638076, 0.138495913638093, 1.40766939090791, -4.99609082499681, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.226917347726988, 0.0, 2.40766939090794, -0.31729336931747, 1.7249627602254, 1.09037602159047, -3.27112806477141, 0.178797455679365, 0.317293369317472, -1.90376021590478, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -2.40766939090795, 0.0, 0.22691734772699, -0.317293369317451, -0.178797455679388, 3.27112806477144, -1.09037602159048, -1.7249627602254, 0.317293369317464, 1.90376021590477, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.247325510992286, 0.0, -0.24732551099229, -0.220580620915207, 0.489302043969158, -2.98395306595374, 2.98395306595375, -0.489302043969166, 0.220580620915208, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.247325510992286, 0.0, 0.510697956030843, 0.868313777480736, -1.35761582144991, 0.379011733511577, -1.13703520053469, -3.85226684343448, -0.86831377748072, 5.20988266488436, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.510697956030837, 0.0, -0.247325510992291, 0.868313777480728, 3.85226684343446, 1.13703520053469, -0.379011733511546, 1.35761582144988, -0.868313777480716, -5.20988266488437, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_C1_D10[7][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, -0.5, 0.0, 1.5, 0.0, -1.5, 0.0, -1.5, 1.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.226917347726979, 2.40766939090793, 0.0, 1.72496276022541, -0.317293369317461, 0.178797455679369, 0.317293369317461, 1.09037602159046, -3.27112806477142, -1.90376021590477, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.226917347726987, 0.226917347726984, 0.0, -1.40766939090794, 4.99609082499683, 1.40766939090794, -4.99609082499683, -0.138495913638092, 0.138495913638093, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -2.40766939090794, 0.226917347726988, 0.0, -0.178797455679373, -0.317293369317462, -1.7249627602254, 0.317293369317462, 3.27112806477145, -1.09037602159049, 1.90376021590477, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.247325510992288, 0.510697956030838, 0.0, -1.3576158214499, 0.868313777480728, -3.85226684343447, -0.868313777480728, 0.379011733511571, -1.1370352005347, 5.20988266488437, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.247325510992291, -0.24732551099229, 0.0, 0.489302043969163, -0.220580620915198, -0.489302043969163, 0.220580620915198, -2.98395306595374, 2.98395306595374, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.510697956030834, -0.247325510992292, 0.0, 3.85226684343447, 0.868313777480726, 1.35761582144989, -0.868313777480728, 1.13703520053468, -0.37901173351156, -5.20988266488436, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_C4[7][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.111111111111111, -0.111111111111111, -0.111111111111111, 0.444444444444444, 0.444444444444444, 0.444444444444445},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0807685941918871, 0.474352608585538, -0.0807685941918871, 0.323074376767549, 0.0410358262631382, 0.323074376767549},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0807685941918872, -0.0807685941918872, 0.474352608585538, 0.323074376767549, 0.323074376767549, 0.0410358262631385},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.474352608585539, -0.0807685941918871, -0.0807685941918871, 0.0410358262631383, 0.323074376767549, 0.323074376767549},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0280749432230787, -0.0525839011025454, -0.0280749432230788, 0.112299772892315, 0.884134241764072, 0.112299772892315},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0280749432230787, -0.0280749432230788, -0.0525839011025453, 0.112299772892315, 0.112299772892315, 0.884134241764073},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0525839011025453, -0.0280749432230788, -0.0280749432230788, 0.884134241764072, 0.112299772892315, 0.112299772892315}};
    
    static const double FE1[7][1] = \
    {{1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0}};
    
    // Reset values in the element tensor.
    for (unsigned int r = 0; r < 32; r++)
    {
      A[r] = 0.0;
    } // end loop over 'r'
    
    // Compute element tensor using UFL quadrature representation
    // Optimisations: ('eliminate zeros', False), ('ignore ones', False), ('ignore zero tables', False), ('optimisation', False), ('remove zero terms', False)
    
    // Loop quadrature points for integral.
    // Number of operations to compute element tensor for following IP loop = 31388
    for (unsigned int ip = 0; ip < 7; ip++)
    {
      
      // Coefficient declarations.
      double F0 = 0.0;
      double F1 = 0.0;
      double F2 = 0.0;
      double F3 = 0.0;
      double F4 = 0.0;
      double F5 = 0.0;
      double F6 = 0.0;
      double F7 = 0.0;
      double F8 = 0.0;
      double F9 = 0.0;
      double F10 = 0.0;
      double F11 = 0.0;
      
      // Total number of operations to compute function values = 4
      for (unsigned int r = 0; r < 1; r++)
      {
        F2 += FE1[ip][0]*w[1][0];
        F4 += FE1[ip][0]*w[5][0];
      } // end loop over 'r'
      
      // Total number of operations to compute function values = 640
      for (unsigned int r = 0; r < 32; r++)
      {
        F0 += FE0_C0_D10[ip][r]*w[3][r];
        F1 += FE0_C0_D01[ip][r]*w[3][r];
        F3 += FE0_C4[ip][r]*w[3][r];
        F5 += FE0_C0_D10[ip][r]*w[4][r];
        F6 += FE0_C0_D01[ip][r]*w[4][r];
        F7 += FE0_C4[ip][r]*w[4][r];
        F8 += FE0_C1_D10[ip][r]*w[3][r];
        F9 += FE0_C1_D01[ip][r]*w[3][r];
        F10 += FE0_C1_D10[ip][r]*w[4][r];
        F11 += FE0_C1_D01[ip][r]*w[4][r];
      } // end loop over 'r'
      
      // Number of operations for primary indices: 3840
      for (unsigned int j = 0; j < 32; j++)
      {
        // Number of operations to compute entry: 120
        A[j] += ((((((K[0]*FE0_C1_D10[ip][j] + K[2]*FE0_C1_D01[ip][j]) + (K[1]*FE0_C0_D10[ip][j] + K[3]*FE0_C0_D01[ip][j])))*0.5)*((((((K[0]*F10 + K[2]*F11) + (K[1]*F5 + K[3]*F6)))*F2)*(((-1.0)*F4 + 1.0)) + ((((K[0]*F8 + K[2]*F9) + (K[1]*F0 + K[3]*F1)))*F2)*F4)) + ((2.0*((K[0]*FE0_C0_D10[ip][j] + K[2]*FE0_C0_D01[ip][j])))*0.5)*(((((2.0*((K[0]*F0 + K[2]*F1)))*F2 + 1.0*((-1.0)*F3)))*F4 + (((2.0*((K[0]*F5 + K[2]*F6)))*F2 + 1.0*((-1.0)*F7)))*(((-1.0)*F4 + 1.0))))) + (((((K[0]*FE0_C1_D10[ip][j] + K[2]*FE0_C1_D01[ip][j]) + (K[1]*FE0_C0_D10[ip][j] + K[3]*FE0_C0_D01[ip][j])))*0.5)*((((((K[0]*F10 + K[2]*F11) + (K[1]*F5 + K[3]*F6)))*F2)*(((-1.0)*F4 + 1.0)) + ((((K[0]*F8 + K[2]*F9) + (K[1]*F0 + K[3]*F1)))*F2)*F4)) + ((2.0*((K[1]*FE0_C1_D10[ip][j] + K[3]*FE0_C1_D01[ip][j])))*0.5)*(((((2.0*((K[1]*F10 + K[3]*F11)))*F2 + 1.0*((-1.0)*F7)))*(((-1.0)*F4 + 1.0)) + (((2.0*((K[1]*F8 + K[3]*F9)))*F2 + 1.0*((-1.0)*F3)))*F4))))*W7[ip]*det;
      } // end loop over 'j'
    } // end loop over 'ip'
  }

};


class ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_exterior_facet_integral_0_otherwise: public ufc::exterior_facet_integral
{
public:

  ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_exterior_facet_integral_0_otherwise() : ufc::exterior_facet_integral()
  {
    
  }

  ~ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_exterior_facet_integral_0_otherwise() override
  {
    
  }

  const std::vector<bool> & enabled_coefficients() const final override
  {
    static const std::vector<bool> enabled({false, true, false, true, true, true});
    return enabled;
  }

  void tabulate_tensor(double * A,
                       const double * const * w,
                       const double * coordinate_dofs,
                       std::size_t facet,
                       int cell_orientation) const final override
  {
    // Compute Jacobian
    double J[4];
    compute_jacobian_triangle_2d(J, coordinate_dofs);
    
    // Compute Jacobian inverse and determinant
    double K[4];
    double detJ;
    compute_jacobian_inverse_triangle_2d(K, detJ, J);
    
    
    
    // Get vertices on edge
    static unsigned int edge_vertices[3][2] = {{1, 2}, {0, 2}, {0, 1}};
    const unsigned int v0 = edge_vertices[facet][0];
    const unsigned int v1 = edge_vertices[facet][1];
    
    // Compute scale factor (length of edge scaled by length of reference interval)
    const double dx0 = coordinate_dofs[2*v1 + 0] - coordinate_dofs[2*v0 + 0];
    const double dx1 = coordinate_dofs[2*v1 + 1] - coordinate_dofs[2*v0 + 1];
    const double det = std::sqrt(dx0*dx0 + dx1*dx1);
    
    
    const bool direction = dx1*(coordinate_dofs[2*facet] - coordinate_dofs[2*v0]) - dx0*(coordinate_dofs[2*facet + 1] - coordinate_dofs[2*v0 + 1]) < 0;
    // Compute facet normals from the facet scale factor constants
    const double n0 = direction ? dx1 / det : -dx1 / det;
    const double n1 = direction ? -dx0 / det : dx0 / det;
    
    // Facet area
    
    // Compute cell volume
    
    
    // Compute circumradius of triangle in 2D
    
    
    // Array of quadrature weights.
    static const double W4[4] = {0.173927422568727, 0.326072577431273, 0.326072577431273, 0.173927422568727};
    // Quadrature points on the UFC reference element: (0.0694318442029737), (0.330009478207572), (0.669990521792428), (0.930568155797026)
    
    // Values of basis functions at quadrature points.
    static const double FE0_f0_C0[4][32] = \
    {{0.0, 0.660005665072804, 0.0492445504662319, 0.520937687711704, -0.230187903250739, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.00337373643277231, 0.00166176231390647, 1.00488585482565, -0.00992135357232475, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0016617623139064, 0.00337373643277257, -0.00992135357232443, 1.00488585482565, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0492445504662319, 0.660005665072804, -0.230187903250739, 0.520937687711704, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f0_C0_D01[4][32] = \
    {{-1, 0.0, 0.440193945530493, 7.50286404879036, -2.44305799432084, 0.312443298913404, 0.247362755556129, 4.18755670108659, -7.50286404879032, -1.7444987067658, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.0, 0.0, -0.499850851825888, 3.0450211923719, 2.95482965945399, 1.48504265193408, 0.0148081998918289, 3.01495734806591, -3.04502119237187, -5.96978700751993, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1, 0.0, 1.03006384430596, -0.0148081998918195, 4.48474435558585, 3.01495734806592, -3.04502119237187, 1.48504265193406, 0.0148081998918269, -5.96978700751993, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.00000000000001, 0.0, 4.31530734770373, -0.24736275555614, 1.43205540785241, 4.18755670108662, -7.50286404879033, 0.312443298913379, 0.247362755556141, -1.74449870676581, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f0_C0_D10[4][32] = \
    {{-0.999999999999993, 4.31530734770372, 0.0, 1.43205540785241, -0.24736275555613, 0.312443298913381, 0.247362755556129, 4.1875567010866, -7.50286404879032, -1.74449870676579, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.999999999999995, 1.03006384430596, 0.0, 4.48474435558586, -0.0148081998918166, 1.48504265193407, 0.014808199891815, 3.01495734806591, -3.04502119237188, -5.96978700751993, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.0, -0.49985085182589, 0.0, 2.954829659454, 3.04502119237189, 3.01495734806593, -3.04502119237189, 1.48504265193407, 0.0148081998918194, -5.96978700751993, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.00000000000001, 0.440193945530487, 0.0, -2.44305799432083, 7.50286404879035, 4.18755670108663, -7.50286404879035, 0.312443298913386, 0.247362755556131, -1.7444987067658, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f0_C1[4][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.660005665072804, 0.0492445504662319, 0.520937687711704, -0.230187903250739, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00337373643277231, 0.00166176231390647, 1.00488585482565, -0.00992135357232475, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0016617623139064, 0.00337373643277257, -0.00992135357232443, 1.00488585482565, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0492445504662319, 0.660005665072804, -0.230187903250739, 0.520937687711704, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f0_C1_D01[4][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, 0.0, 0.440193945530493, 7.50286404879036, -2.44305799432084, 0.312443298913404, 0.247362755556129, 4.18755670108659, -7.50286404879032, -1.7444987067658, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, -0.499850851825888, 3.0450211923719, 2.95482965945399, 1.48504265193408, 0.0148081998918289, 3.01495734806591, -3.04502119237187, -5.96978700751993, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, 0.0, 1.03006384430596, -0.0148081998918195, 4.48474435558585, 3.01495734806592, -3.04502119237187, 1.48504265193406, 0.0148081998918269, -5.96978700751993, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.00000000000001, 0.0, 4.31530734770373, -0.24736275555614, 1.43205540785241, 4.18755670108662, -7.50286404879033, 0.312443298913379, 0.247362755556141, -1.74449870676581, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f0_C1_D10[4][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999993, 4.31530734770372, 0.0, 1.43205540785241, -0.24736275555613, 0.312443298913381, 0.247362755556129, 4.1875567010866, -7.50286404879032, -1.74449870676579, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999995, 1.03006384430596, 0.0, 4.48474435558586, -0.0148081998918166, 1.48504265193407, 0.014808199891815, 3.01495734806591, -3.04502119237188, -5.96978700751993, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, -0.49985085182589, 0.0, 2.954829659454, 3.04502119237189, 3.01495734806593, -3.04502119237189, 1.48504265193407, 0.0148081998918194, -5.96978700751993, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.00000000000001, 0.440193945530487, 0.0, -2.44305799432083, 7.50286404879035, 4.18755670108663, -7.50286404879035, 0.312443298913386, 0.247362755556131, -1.7444987067658, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f0_C4[4][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.801346029369931, -0.0597902822241217, 0.258444252854191, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.227784076790952, -0.112196966793904, 0.884412890002952, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.112196966793904, 0.227784076790952, 0.884412890002952, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0597902822241217, 0.801346029369931, 0.258444252854191, 0.0, 0.0}};
    
    static const double FE0_f1_C0[4][32] = \
    {{0.660005665072804, 0.0, 0.0492445504662319, 0.0, 0.0, 0.520937687711704, -0.230187903250739, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.00337373643277237, 0.0, 0.00166176231390647, 0.0, 0.0, 1.00488585482565, -0.00992135357232482, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.00166176231390639, 0.0, 0.0033737364327726, 0.0, 0.0, -0.00992135357232464, 1.00488585482565, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0492445504662318, 0.0, 0.660005665072804, 0.0, 0.0, -0.230187903250739, 0.520937687711704, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f1_C0_D01[4][32] = \
    {{-4.31530734770373, 0.0, 0.440193945530494, 1.33226762955019e-14, -1.99840144432528e-14, 6.07080864093794, -2.1956952387647, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.03006384430597, 0.0, -0.499850851825887, 0.0, 0.0, -1.43972316321396, 2.96963785934582, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.499850851825886, 0.0, 1.03006384430596, -1.21846976952611e-14, 0.0, -2.96963785934581, 1.43972316321397, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.440193945530492, 0.0, 4.31530734770373, -1.11022302462516e-14, 0.0, 2.1956952387647, -6.07080864093793, 0.0, 0.0, -1.4210854715202e-14, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f1_C0_D10[4][32] = \
    {{-4.31530734770373, 1, 0.0, -0.312443298913387, -0.247362755556131, -1.43205540785241, 0.247362755556131, 7.50286404879036, -4.18755670108663, 1.74449870676579, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.03006384430597, 1.0, 0.0, -1.48504265193408, -0.0148081998918153, -4.48474435558585, 0.0148081998918161, 3.0450211923719, -3.01495734806593, 5.96978700751993, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.499850851825888, 1, 0.0, -3.01495734806594, 3.04502119237189, -2.954829659454, -3.04502119237189, -0.014808199891814, -1.48504265193407, 5.96978700751993, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.440193945530492, 1.0, 0.0, -4.18755670108662, 7.50286404879035, 2.44305799432084, -7.50286404879035, -0.247362755556127, -0.312443298913382, 1.74449870676578, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f1_C1[4][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.660005665072804, 0.0, 0.0492445504662319, 0.0, 0.0, 0.520937687711704, -0.230187903250739, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00337373643277237, 0.0, 0.00166176231390647, 0.0, 0.0, 1.00488585482565, -0.00992135357232482, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00166176231390639, 0.0, 0.0033737364327726, 0.0, 0.0, -0.00992135357232464, 1.00488585482565, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0492445504662318, 0.0, 0.660005665072804, 0.0, 0.0, -0.230187903250739, 0.520937687711704, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f1_C1_D01[4][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -4.31530734770373, 0.0, 0.440193945530494, 1.33226762955019e-14, -1.99840144432528e-14, 6.07080864093794, -2.1956952387647, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.03006384430597, 0.0, -0.499850851825887, 0.0, 0.0, -1.43972316321396, 2.96963785934582, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.499850851825886, 0.0, 1.03006384430596, -1.21846976952611e-14, 0.0, -2.96963785934581, 1.43972316321397, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.440193945530492, 0.0, 4.31530734770373, -1.11022302462516e-14, 0.0, 2.1956952387647, -6.07080864093793, 0.0, 0.0, -1.4210854715202e-14, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f1_C1_D10[4][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -4.31530734770373, 1, 0.0, -0.312443298913387, -0.247362755556131, -1.43205540785241, 0.247362755556131, 7.50286404879036, -4.18755670108663, 1.74449870676579, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.03006384430597, 1.0, 0.0, -1.48504265193408, -0.0148081998918153, -4.48474435558585, 0.0148081998918161, 3.0450211923719, -3.01495734806593, 5.96978700751993, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.499850851825888, 1, 0.0, -3.01495734806594, 3.04502119237189, -2.954829659454, -3.04502119237189, -0.014808199891814, -1.48504265193407, 5.96978700751993, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.440193945530492, 1.0, 0.0, -4.18755670108662, 7.50286404879035, 2.44305799432084, -7.50286404879035, -0.247362755556127, -0.312443298913382, 1.74449870676578, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f1_C4[4][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.801346029369931, 0.0, -0.0597902822241217, 0.0, 0.258444252854191, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.227784076790952, 0.0, -0.112196966793904, 0.0, 0.884412890002952, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.112196966793904, 0.0, 0.227784076790952, 0.0, 0.884412890002952, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0597902822241217, 0.0, 0.801346029369931, 0.0, 0.258444252854191, 0.0}};
    
    static const double FE0_f2_C0[4][32] = \
    {{0.660005665072803, 0.0492445504662318, 0.0, 0.0, 0.0, 0.0, 0.0, 0.520937687711704, -0.230187903250739, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.00337373643277246, 0.00166176231390629, 0.0, 0.0, 0.0, 0.0, 0.0, 1.00488585482565, -0.00992135357232465, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.00166176231390642, 0.00337373643277245, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00992135357232484, 1.00488585482565, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0492445504662318, 0.660005665072803, 0.0, 0.0, 0.0, 0.0, 0.0, -0.230187903250739, 0.520937687711704, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f2_C0_D01[4][32] = \
    {{-4.31530734770373, 0.0, 1.00000000000001, -0.247362755556111, -0.31244329891341, 7.50286404879035, -4.18755670108662, -1.43205540785241, 0.247362755556128, 1.74449870676579, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.03006384430597, 0.0, 1.00000000000001, -0.0148081998918019, -1.4850426519341, 3.0450211923719, -3.01495734806593, -4.48474435558586, 0.0148081998918189, 5.96978700751993, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.499850851825885, 0.0, 1.00000000000001, 3.0450211923719, -3.01495734806594, -0.0148081998917984, -1.48504265193408, -2.95482965945402, -3.04502119237188, 5.96978700751992, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.440193945530494, 0.0, 1.00000000000001, 7.50286404879036, -4.18755670108663, -0.247362755556103, -0.312443298913388, 2.4430579943208, -7.50286404879032, 1.74449870676577, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f2_C0_D10[4][32] = \
    {{-4.31530734770373, 0.440193945530493, 0.0, 0.0, 0.0, 0.0, 0.0, 6.07080864093795, -2.19569523876472, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.03006384430596, -0.499850851825886, 0.0, 0.0, 0.0, 0.0, 0.0, -1.43972316321396, 2.96963785934581, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.499850851825892, 1.03006384430596, 0.0, 0.0, 0.0, 0.0, 0.0, -2.96963785934582, 1.43972316321397, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.440193945530481, 4.31530734770372, 0.0, 0.0, 0.0, 0.0, 0.0, 2.19569523876468, -6.07080864093792, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f2_C1[4][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.660005665072803, 0.0492445504662318, 0.0, 0.0, 0.0, 0.0, 0.0, 0.520937687711704, -0.230187903250739, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00337373643277246, 0.00166176231390629, 0.0, 0.0, 0.0, 0.0, 0.0, 1.00488585482565, -0.00992135357232465, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00166176231390642, 0.00337373643277245, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00992135357232484, 1.00488585482565, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0492445504662318, 0.660005665072803, 0.0, 0.0, 0.0, 0.0, 0.0, -0.230187903250739, 0.520937687711704, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f2_C1_D01[4][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -4.31530734770373, 0.0, 1.00000000000001, -0.247362755556111, -0.31244329891341, 7.50286404879035, -4.18755670108662, -1.43205540785241, 0.247362755556128, 1.74449870676579, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.03006384430597, 0.0, 1.00000000000001, -0.0148081998918019, -1.4850426519341, 3.0450211923719, -3.01495734806593, -4.48474435558586, 0.0148081998918189, 5.96978700751993, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.499850851825885, 0.0, 1.00000000000001, 3.0450211923719, -3.01495734806594, -0.0148081998917984, -1.48504265193408, -2.95482965945402, -3.04502119237188, 5.96978700751992, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.440193945530494, 0.0, 1.00000000000001, 7.50286404879036, -4.18755670108663, -0.247362755556103, -0.312443298913388, 2.4430579943208, -7.50286404879032, 1.74449870676577, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f2_C1_D10[4][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -4.31530734770373, 0.440193945530493, 0.0, 0.0, 0.0, 0.0, 0.0, 6.07080864093795, -2.19569523876472, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.03006384430596, -0.499850851825886, 0.0, 0.0, 0.0, 0.0, 0.0, -1.43972316321396, 2.96963785934581, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.499850851825892, 1.03006384430596, 0.0, 0.0, 0.0, 0.0, 0.0, -2.96963785934582, 1.43972316321397, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.440193945530481, 4.31530734770372, 0.0, 0.0, 0.0, 0.0, 0.0, 2.19569523876468, -6.07080864093792, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f2_C4[4][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.801346029369931, -0.0597902822241217, 0.0, 0.0, 0.0, 0.258444252854191},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.227784076790952, -0.112196966793904, 0.0, 0.0, 0.0, 0.884412890002952},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.112196966793904, 0.227784076790952, 0.0, 0.0, 0.0, 0.884412890002952},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0597902822241217, 0.801346029369931, 0.0, 0.0, 0.0, 0.258444252854191}};
    
    static const double FE1_f0[4][1] = \
    {{1.0},
    {1.0},
    {1.0},
    {1.0}};
    
    // Reset values in the element tensor.
    for (unsigned int r = 0; r < 32; r++)
    {
      A[r] = 0.0;
    } // end loop over 'r'
    
    // Compute element tensor using UFL quadrature representation
    // Optimisations: ('eliminate zeros', False), ('ignore ones', False), ('ignore zero tables', False), ('optimisation', False), ('remove zero terms', False)
    switch (facet)
    {
    case 0:
      {
        // Total number of operations to compute element tensor (from this point): 15504
      
      // Loop quadrature points for integral.
      // Number of operations to compute element tensor for following IP loop = 15504
      for (unsigned int ip = 0; ip < 4; ip++)
      {
        
        // Coefficient declarations.
        double F0 = 0.0;
        double F1 = 0.0;
        double F2 = 0.0;
        double F3 = 0.0;
        double F4 = 0.0;
        double F5 = 0.0;
        double F6 = 0.0;
        double F7 = 0.0;
        double F8 = 0.0;
        double F9 = 0.0;
        double F10 = 0.0;
        double F11 = 0.0;
        
        // Total number of operations to compute function values = 4
        for (unsigned int r = 0; r < 1; r++)
        {
          F2 += FE1_f0[ip][0]*w[1][0];
          F4 += FE1_f0[ip][0]*w[5][0];
        } // end loop over 'r'
        
        // Total number of operations to compute function values = 640
        for (unsigned int r = 0; r < 32; r++)
        {
          F0 += FE0_f0_C0_D10[ip][r]*w[3][r];
          F1 += FE0_f0_C0_D01[ip][r]*w[3][r];
          F3 += FE0_f0_C4[ip][r]*w[3][r];
          F5 += FE0_f0_C1_D10[ip][r]*w[3][r];
          F6 += FE0_f0_C1_D01[ip][r]*w[3][r];
          F7 += FE0_f0_C0_D10[ip][r]*w[4][r];
          F8 += FE0_f0_C0_D01[ip][r]*w[4][r];
          F9 += FE0_f0_C4[ip][r]*w[4][r];
          F10 += FE0_f0_C1_D10[ip][r]*w[4][r];
          F11 += FE0_f0_C1_D01[ip][r]*w[4][r];
        } // end loop over 'r'
        
        // Number of operations for primary indices: 3232
        for (unsigned int j = 0; j < 32; j++)
        {
          // Number of operations to compute entry: 101
          A[j] += ((FE0_f0_C0[ip][j]*(((n0*((((2.0*((K[0]*F0 + K[2]*F1)))*F2 + 1.0*((-1.0)*F3)))*F4) + n1*(((((K[0]*F5 + K[2]*F6) + (K[1]*F0 + K[3]*F1)))*F2)*F4)) + (n0*((((2.0*((K[0]*F7 + K[2]*F8)))*F2 + 1.0*((-1.0)*F9)))*(((-1.0)*F4 + 1.0))) + n1*(((((K[0]*F10 + K[2]*F11) + (K[1]*F7 + K[3]*F8)))*F2)*(((-1.0)*F4 + 1.0)))))) + FE0_f0_C1[ip][j]*(((n0*(((((K[0]*F10 + K[2]*F11) + (K[1]*F7 + K[3]*F8)))*F2)*(((-1.0)*F4 + 1.0))) + n1*((((2.0*((K[1]*F10 + K[3]*F11)))*F2 + 1.0*((-1.0)*F9)))*(((-1.0)*F4 + 1.0)))) + (n0*(((((K[0]*F5 + K[2]*F6) + (K[1]*F0 + K[3]*F1)))*F2)*F4) + n1*((((2.0*((K[1]*F5 + K[3]*F6)))*F2 + 1.0*((-1.0)*F3)))*F4))))))*(-1.0)*W4[ip]*det;
        } // end loop over 'j'
      } // end loop over 'ip'
        break;
      }
    case 1:
      {
        // Total number of operations to compute element tensor (from this point): 15504
      
      // Loop quadrature points for integral.
      // Number of operations to compute element tensor for following IP loop = 15504
      for (unsigned int ip = 0; ip < 4; ip++)
      {
        
        // Coefficient declarations.
        double F0 = 0.0;
        double F1 = 0.0;
        double F2 = 0.0;
        double F3 = 0.0;
        double F4 = 0.0;
        double F5 = 0.0;
        double F6 = 0.0;
        double F7 = 0.0;
        double F8 = 0.0;
        double F9 = 0.0;
        double F10 = 0.0;
        double F11 = 0.0;
        
        // Total number of operations to compute function values = 4
        for (unsigned int r = 0; r < 1; r++)
        {
          F2 += FE1_f0[ip][0]*w[1][0];
          F4 += FE1_f0[ip][0]*w[5][0];
        } // end loop over 'r'
        
        // Total number of operations to compute function values = 640
        for (unsigned int r = 0; r < 32; r++)
        {
          F0 += FE0_f1_C0_D10[ip][r]*w[3][r];
          F1 += FE0_f1_C0_D01[ip][r]*w[3][r];
          F3 += FE0_f1_C4[ip][r]*w[3][r];
          F5 += FE0_f1_C1_D10[ip][r]*w[3][r];
          F6 += FE0_f1_C1_D01[ip][r]*w[3][r];
          F7 += FE0_f1_C0_D10[ip][r]*w[4][r];
          F8 += FE0_f1_C0_D01[ip][r]*w[4][r];
          F9 += FE0_f1_C4[ip][r]*w[4][r];
          F10 += FE0_f1_C1_D10[ip][r]*w[4][r];
          F11 += FE0_f1_C1_D01[ip][r]*w[4][r];
        } // end loop over 'r'
        
        // Number of operations for primary indices: 3232
        for (unsigned int j = 0; j < 32; j++)
        {
          // Number of operations to compute entry: 101
          A[j] += ((FE0_f1_C0[ip][j]*(((n0*((((2.0*((K[0]*F0 + K[2]*F1)))*F2 + 1.0*((-1.0)*F3)))*F4) + n1*(((((K[0]*F5 + K[2]*F6) + (K[1]*F0 + K[3]*F1)))*F2)*F4)) + (n0*((((2.0*((K[0]*F7 + K[2]*F8)))*F2 + 1.0*((-1.0)*F9)))*(((-1.0)*F4 + 1.0))) + n1*(((((K[0]*F10 + K[2]*F11) + (K[1]*F7 + K[3]*F8)))*F2)*(((-1.0)*F4 + 1.0)))))) + FE0_f1_C1[ip][j]*(((n0*(((((K[0]*F10 + K[2]*F11) + (K[1]*F7 + K[3]*F8)))*F2)*(((-1.0)*F4 + 1.0))) + n1*((((2.0*((K[1]*F10 + K[3]*F11)))*F2 + 1.0*((-1.0)*F9)))*(((-1.0)*F4 + 1.0)))) + (n0*(((((K[0]*F5 + K[2]*F6) + (K[1]*F0 + K[3]*F1)))*F2)*F4) + n1*((((2.0*((K[1]*F5 + K[3]*F6)))*F2 + 1.0*((-1.0)*F3)))*F4))))))*(-1.0)*W4[ip]*det;
        } // end loop over 'j'
      } // end loop over 'ip'
        break;
      }
    case 2:
      {
        // Total number of operations to compute element tensor (from this point): 15504
      
      // Loop quadrature points for integral.
      // Number of operations to compute element tensor for following IP loop = 15504
      for (unsigned int ip = 0; ip < 4; ip++)
      {
        
        // Coefficient declarations.
        double F0 = 0.0;
        double F1 = 0.0;
        double F2 = 0.0;
        double F3 = 0.0;
        double F4 = 0.0;
        double F5 = 0.0;
        double F6 = 0.0;
        double F7 = 0.0;
        double F8 = 0.0;
        double F9 = 0.0;
        double F10 = 0.0;
        double F11 = 0.0;
        
        // Total number of operations to compute function values = 4
        for (unsigned int r = 0; r < 1; r++)
        {
          F2 += FE1_f0[ip][0]*w[1][0];
          F4 += FE1_f0[ip][0]*w[5][0];
        } // end loop over 'r'
        
        // Total number of operations to compute function values = 640
        for (unsigned int r = 0; r < 32; r++)
        {
          F0 += FE0_f2_C0_D10[ip][r]*w[3][r];
          F1 += FE0_f2_C0_D01[ip][r]*w[3][r];
          F3 += FE0_f2_C4[ip][r]*w[3][r];
          F5 += FE0_f2_C1_D10[ip][r]*w[3][r];
          F6 += FE0_f2_C1_D01[ip][r]*w[3][r];
          F7 += FE0_f2_C0_D10[ip][r]*w[4][r];
          F8 += FE0_f2_C0_D01[ip][r]*w[4][r];
          F9 += FE0_f2_C4[ip][r]*w[4][r];
          F10 += FE0_f2_C1_D10[ip][r]*w[4][r];
          F11 += FE0_f2_C1_D01[ip][r]*w[4][r];
        } // end loop over 'r'
        
        // Number of operations for primary indices: 3232
        for (unsigned int j = 0; j < 32; j++)
        {
          // Number of operations to compute entry: 101
          A[j] += ((FE0_f2_C0[ip][j]*(((n0*((((2.0*((K[0]*F0 + K[2]*F1)))*F2 + 1.0*((-1.0)*F3)))*F4) + n1*(((((K[0]*F5 + K[2]*F6) + (K[1]*F0 + K[3]*F1)))*F2)*F4)) + (n0*((((2.0*((K[0]*F7 + K[2]*F8)))*F2 + 1.0*((-1.0)*F9)))*(((-1.0)*F4 + 1.0))) + n1*(((((K[0]*F10 + K[2]*F11) + (K[1]*F7 + K[3]*F8)))*F2)*(((-1.0)*F4 + 1.0)))))) + FE0_f2_C1[ip][j]*(((n0*(((((K[0]*F10 + K[2]*F11) + (K[1]*F7 + K[3]*F8)))*F2)*(((-1.0)*F4 + 1.0))) + n1*((((2.0*((K[1]*F10 + K[3]*F11)))*F2 + 1.0*((-1.0)*F9)))*(((-1.0)*F4 + 1.0)))) + (n0*(((((K[0]*F5 + K[2]*F6) + (K[1]*F0 + K[3]*F1)))*F2)*F4) + n1*((((2.0*((K[1]*F5 + K[3]*F6)))*F2 + 1.0*((-1.0)*F3)))*F4))))))*(-1.0)*W4[ip]*det;
        } // end loop over 'j'
      } // end loop over 'ip'
        break;
      }
    }
    
  }

};


class ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_interior_facet_integral_0_5: public ufc::interior_facet_integral
{
public:

  ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_interior_facet_integral_0_5() : ufc::interior_facet_integral()
  {
    
  }

  ~ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_interior_facet_integral_0_5() override
  {
    
  }

  const std::vector<bool> & enabled_coefficients() const final override
  {
    static const std::vector<bool> enabled({false, true, false, true, false, false});
    return enabled;
  }

  void tabulate_tensor(double * A,
                       const double * const * w,
                       const double * coordinate_dofs_0,
                       const double * coordinate_dofs_1,
                       std::size_t facet_0,
                       std::size_t facet_1,
                       int cell_orientation_0,
                       int cell_orientation_1) const final override
  {
    // Compute Jacobian
    double J_0[4];
    compute_jacobian_triangle_2d(J_0, coordinate_dofs_0);
    
    // Compute Jacobian inverse and determinant
    double K_0[4];
    double detJ_0;
    compute_jacobian_inverse_triangle_2d(K_0, detJ_0, J_0);
    
    // Compute Jacobian
    double J_1[4];
    compute_jacobian_triangle_2d(J_1, coordinate_dofs_1);
    
    // Compute Jacobian inverse and determinant
    double K_1[4];
    double detJ_1;
    compute_jacobian_inverse_triangle_2d(K_1, detJ_1, J_1);
    
    
    
    // Get vertices on edge
    static unsigned int edge_vertices[3][2] = {{1, 2}, {0, 2}, {0, 1}};
    const unsigned int v0 = edge_vertices[facet_0][0];
    const unsigned int v1 = edge_vertices[facet_0][1];
    
    // Compute scale factor (length of edge scaled by length of reference interval)
    const double dx0 = coordinate_dofs_0[2*v1 + 0] - coordinate_dofs_0[2*v0 + 0];
    const double dx1 = coordinate_dofs_0[2*v1 + 1] - coordinate_dofs_0[2*v0 + 1];
    const double det = std::sqrt(dx0*dx0 + dx1*dx1);
    
    
    const bool direction = dx1*(coordinate_dofs_0[2*facet_0] - coordinate_dofs_0[2*v0]) - dx0*(coordinate_dofs_0[2*facet_0 + 1] - coordinate_dofs_0[2*v0 + 1]) < 0;
    // Compute facet normals from the facet scale factor constants
    const double n_00 = direction ? dx1 / det : -dx1 / det;
    const double n_01 = direction ? -dx0 / det : dx0 / det;// Compute facet normals from the facet scale factor constants
    
    // Facet area
    
    // Compute cell volume
    // Compute cell volume
    
    
    // Compute circumradius of triangle in 2D
    // Compute circumradius of triangle in 2D
    
    
    // Array of quadrature weights.
    static const double W14[14] = {0.0175597301659429, 0.0400790435800329, 0.0607592853441831, 0.0786015835793963, 0.0927691987393223, 0.102599231861039, 0.107631926731989, 0.107631926731989, 0.102599231861039, 0.0927691987393223, 0.0786015835793964, 0.0607592853441831, 0.0400790435800329, 0.0175597301659429};
    // Quadrature points on the UFC reference element: (0.00685809565159384), (0.0357825581682132), (0.0863993424651175), (0.156353547594157), (0.242375681820923), (0.340443815536055), (0.445972525646328), (0.554027474353672), (0.659556184463945), (0.757624318179077), (0.843646452405842), (0.913600657534883), (0.964217441831787), (0.993141904348406)
    
    // Values of basis functions at quadrature points.
    static const double FE0_f0_C0[14][32] = \
    {{0.0, 0.962702323679585, 0.00664789653009154, 0.0606689622161399, -0.0300191824258164, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.814513282726392, 0.0302269671274253, 0.293852727170002, -0.138592977023819, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.589084923663358, 0.0557098439464343, 0.618341969224366, -0.263136736834158, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.342873086287014, 0.0635448928430308, 0.90873807748653, -0.315156056616575, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.131573813588545, 0.0420924883390094, 1.05181781569915, -0.225484117626705, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, -0.00688458463906616, -0.00355362335781812, 0.988884099312148, 0.0215541086847357, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, -0.0619760862220982, -0.0498885578452368, 0.736146037659975, 0.37571860640736, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, -0.049888557845237, -0.061976086222098, 0.37571860640736, 0.736146037659975, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, -0.00355362335781818, -0.00688458463906585, 0.0215541086847358, 0.988884099312149, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0420924883390093, 0.131573813588545, -0.225484117626704, 1.05181781569915, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0635448928430308, 0.342873086287014, -0.315156056616575, 0.908738077486531, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0557098439464343, 0.589084923663358, -0.263136736834158, 0.618341969224366, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0302269671274252, 0.814513282726393, -0.138592977023818, 0.293852727170001, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.00664789653009147, 0.962702323679586, -0.0300191824258161, 0.0606689622161394, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f0_C0_D01[14][32] = \
    {{-1.00000000000001, 0.0, 0.938912091061207, 8.8463277997647, -4.2852398908259, 0.0308614304322019, 0.0302264785066217, 4.4691385695678, -8.84632779976466, -0.18389867874196, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.00000000000001, 0.0, 0.695242261318417, 8.21217772604755, -3.40741998736596, 0.161021511756987, 0.143736226924625, 4.33897848824301, -8.21217772604751, -0.931558500877113, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1, 0.0, 0.32318134392241, 7.15679022064333, -1.97997156456574, 0.388797041093051, 0.288021614984565, 4.11120295890694, -7.15679022064329, -2.13123139434126, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1, 0.0, -0.0771550984361535, 5.81207200904273, -0.234916910606576, 0.703590964173722, 0.373564134262453, 3.79640903582627, -5.8120720090427, -3.56149212521974, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.0, 0.0, -0.388310526023181, 4.33961776939437, 1.54869275662881, 1.09069056819416, 0.297619957829039, 3.40930943180583, -4.33961776939434, -4.95800218843468, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.0, 0.0, -0.499317454078403, 2.90469103618486, 3.09462641789354, 1.53199716991225, -0.0326797158338298, 2.96800283008774, -2.90469103618484, -6.06262924798131, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.0, 0.0, -0.328717566793528, 1.65065333698105, 4.17806422981247, 2.00687636540848, -0.678158798614932, 2.49312363459151, -1.65065333698103, -6.67118786440402, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1, 0.0, 0.157529702389517, 0.67815879861495, 4.66431149899552, 2.49312363459152, -1.65065333698102, 2.00687636540847, -0.678158798614937, -6.67118786440402, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1, 0.0, 0.936688206097098, 0.0326797158338413, 4.53063207806905, 2.96800283008775, -2.90469103618483, 1.53199716991224, -0.032679715833833, -6.06262924798131, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1, 0.0, 1.93030833758851, -0.297619957829034, 3.86731162024052, 3.40930943180585, -4.33961776939434, 1.09069056819415, 0.29761995782904, -4.95800218843468, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1, 0.0, 3.01566297321642, -0.373564134262456, 2.85790116104603, 3.79640903582629, -5.8120720090427, 0.703590964173703, 0.37356413426246, -3.56149212521975, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.00000000000001, 0.0, 4.04558726173635, -0.288021614984574, 1.74243435324822, 4.11120295890697, -7.15679022064331, 0.388797041093025, 0.288021614984577, -2.13123139434126, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.00000000000001, 0.0, 4.8731992378045, -0.143736226924639, 0.770536989120139, 4.33897848824304, -8.21217772604752, 0.161021511756958, 0.143736226924639, -0.931558500877115, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.00000000000001, 0.0, 5.37718923019686, -0.0302264785066368, 0.153037248309774, 4.46913856956783, -8.84632779976468, 0.0308614304321723, 0.0302264785066361, -0.183898678741961, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f0_C0_D10[14][32] = \
    {{-0.999999999999992, 5.37718923019685, 0.0, 0.153037248309778, -0.0302264785066255, 0.0308614304321697, 0.0302264785066249, 4.4691385695678, -8.84632779976466, -0.183898678741947, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.999999999999993, 4.87319923780449, 0.0, 0.770536989120145, -0.143736226924628, 0.161021511756959, 0.143736226924627, 4.33897848824302, -8.21217772604751, -0.931558500877103, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.999999999999994, 4.04558726173634, 0.0, 1.74243435324823, -0.288021614984566, 0.388797041093029, 0.288021614984565, 4.11120295890695, -7.1567902206433, -2.13123139434125, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.999999999999993, 3.01566297321642, 0.0, 2.85790116104603, -0.373564134262449, 0.703590964173707, 0.373564134262448, 3.79640903582628, -5.81207200904271, -3.56149212521973, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.999999999999994, 1.93030833758851, 0.0, 3.86731162024052, -0.29761995782903, 1.09069056819415, 0.297619957829029, 3.40930943180583, -4.33961776939435, -4.95800218843467, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.999999999999995, 0.936688206097097, 0.0, 4.53063207806906, 0.0326797158338433, 1.53199716991225, -0.032679715833845, 2.96800283008774, -2.90469103618484, -6.06262924798131, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.999999999999997, 0.157529702389517, 0.0, 4.66431149899554, 0.678158798614948, 2.00687636540848, -0.67815879861495, 2.49312363459152, -1.65065333698104, -6.67118786440401, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.0, -0.328717566793529, 0.0, 4.17806422981249, 1.65065333698104, 2.49312363459152, -1.65065333698104, 2.00687636540847, -0.678158798614945, -6.67118786440401, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.0, -0.499317454078405, 0.0, 3.09462641789355, 2.90469103618485, 2.96800283008775, -2.90469103618485, 1.53199716991224, -0.0326797158338404, -6.06262924798131, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1, -0.388310526023184, 0.0, 1.54869275662883, 4.33961776939436, 3.40930943180585, -4.33961776939436, 1.09069056819415, 0.297619957829033, -4.95800218843468, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1, -0.0771550984361591, 0.0, -0.234916910606554, 5.81207200904272, 3.7964090358263, -5.81207200904272, 0.703590964173711, 0.373564134262451, -3.56149212521974, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.00000000000001, 0.323181343922405, 0.0, -1.97997156456572, 7.15679022064332, 4.11120295890698, -7.15679022064332, 0.388797041093032, 0.288021614984567, -2.13123139434125, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.00000000000001, 0.695242261318412, 0.0, -3.40741998736594, 8.21217772604754, 4.33897848824305, -8.21217772604754, 0.161021511756965, 0.143736226924628, -0.931558500877104, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.00000000000001, 0.938912091061202, 0.0, -4.28523989082589, 8.84632779976469, 4.46913856956784, -8.84632779976469, 0.0308614304321783, 0.030226478506625, -0.183898678741951, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f0_C1[14][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.962702323679585, 0.00664789653009154, 0.0606689622161399, -0.0300191824258164, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.814513282726392, 0.0302269671274253, 0.293852727170002, -0.138592977023819, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.589084923663358, 0.0557098439464343, 0.618341969224366, -0.263136736834158, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.342873086287014, 0.0635448928430308, 0.90873807748653, -0.315156056616575, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.131573813588545, 0.0420924883390094, 1.05181781569915, -0.225484117626705, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00688458463906616, -0.00355362335781812, 0.988884099312148, 0.0215541086847357, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0619760862220982, -0.0498885578452368, 0.736146037659975, 0.37571860640736, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.049888557845237, -0.061976086222098, 0.37571860640736, 0.736146037659975, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00355362335781818, -0.00688458463906585, 0.0215541086847358, 0.988884099312149, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0420924883390093, 0.131573813588545, -0.225484117626704, 1.05181781569915, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0635448928430308, 0.342873086287014, -0.315156056616575, 0.908738077486531, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0557098439464343, 0.589084923663358, -0.263136736834158, 0.618341969224366, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0302269671274252, 0.814513282726393, -0.138592977023818, 0.293852727170001, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00664789653009147, 0.962702323679586, -0.0300191824258161, 0.0606689622161394, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f0_C1_D01[14][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.00000000000001, 0.0, 0.938912091061207, 8.8463277997647, -4.2852398908259, 0.0308614304322019, 0.0302264785066217, 4.4691385695678, -8.84632779976466, -0.18389867874196, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.00000000000001, 0.0, 0.695242261318417, 8.21217772604755, -3.40741998736596, 0.161021511756987, 0.143736226924625, 4.33897848824301, -8.21217772604751, -0.931558500877113, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, 0.0, 0.32318134392241, 7.15679022064333, -1.97997156456574, 0.388797041093051, 0.288021614984565, 4.11120295890694, -7.15679022064329, -2.13123139434126, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, 0.0, -0.0771550984361535, 5.81207200904273, -0.234916910606576, 0.703590964173722, 0.373564134262453, 3.79640903582627, -5.8120720090427, -3.56149212521974, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, -0.388310526023181, 4.33961776939437, 1.54869275662881, 1.09069056819416, 0.297619957829039, 3.40930943180583, -4.33961776939434, -4.95800218843468, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, -0.499317454078403, 2.90469103618486, 3.09462641789354, 1.53199716991225, -0.0326797158338298, 2.96800283008774, -2.90469103618484, -6.06262924798131, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, -0.328717566793528, 1.65065333698105, 4.17806422981247, 2.00687636540848, -0.678158798614932, 2.49312363459151, -1.65065333698103, -6.67118786440402, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, 0.0, 0.157529702389517, 0.67815879861495, 4.66431149899552, 2.49312363459152, -1.65065333698102, 2.00687636540847, -0.678158798614937, -6.67118786440402, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, 0.0, 0.936688206097098, 0.0326797158338413, 4.53063207806905, 2.96800283008775, -2.90469103618483, 1.53199716991224, -0.032679715833833, -6.06262924798131, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, 0.0, 1.93030833758851, -0.297619957829034, 3.86731162024052, 3.40930943180585, -4.33961776939434, 1.09069056819415, 0.29761995782904, -4.95800218843468, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, 0.0, 3.01566297321642, -0.373564134262456, 2.85790116104603, 3.79640903582629, -5.8120720090427, 0.703590964173703, 0.37356413426246, -3.56149212521975, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.00000000000001, 0.0, 4.04558726173635, -0.288021614984574, 1.74243435324822, 4.11120295890697, -7.15679022064331, 0.388797041093025, 0.288021614984577, -2.13123139434126, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.00000000000001, 0.0, 4.8731992378045, -0.143736226924639, 0.770536989120139, 4.33897848824304, -8.21217772604752, 0.161021511756958, 0.143736226924639, -0.931558500877115, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.00000000000001, 0.0, 5.37718923019686, -0.0302264785066368, 0.153037248309774, 4.46913856956783, -8.84632779976468, 0.0308614304321723, 0.0302264785066361, -0.183898678741961, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f0_C1_D10[14][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999992, 5.37718923019685, 0.0, 0.153037248309778, -0.0302264785066255, 0.0308614304321697, 0.0302264785066249, 4.4691385695678, -8.84632779976466, -0.183898678741947, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999993, 4.87319923780449, 0.0, 0.770536989120145, -0.143736226924628, 0.161021511756959, 0.143736226924627, 4.33897848824302, -8.21217772604751, -0.931558500877103, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999994, 4.04558726173634, 0.0, 1.74243435324823, -0.288021614984566, 0.388797041093029, 0.288021614984565, 4.11120295890695, -7.1567902206433, -2.13123139434125, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999993, 3.01566297321642, 0.0, 2.85790116104603, -0.373564134262449, 0.703590964173707, 0.373564134262448, 3.79640903582628, -5.81207200904271, -3.56149212521973, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999994, 1.93030833758851, 0.0, 3.86731162024052, -0.29761995782903, 1.09069056819415, 0.297619957829029, 3.40930943180583, -4.33961776939435, -4.95800218843467, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999995, 0.936688206097097, 0.0, 4.53063207806906, 0.0326797158338433, 1.53199716991225, -0.032679715833845, 2.96800283008774, -2.90469103618484, -6.06262924798131, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999997, 0.157529702389517, 0.0, 4.66431149899554, 0.678158798614948, 2.00687636540848, -0.67815879861495, 2.49312363459152, -1.65065333698104, -6.67118786440401, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, -0.328717566793529, 0.0, 4.17806422981249, 1.65065333698104, 2.49312363459152, -1.65065333698104, 2.00687636540847, -0.678158798614945, -6.67118786440401, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, -0.499317454078405, 0.0, 3.09462641789355, 2.90469103618485, 2.96800283008775, -2.90469103618485, 1.53199716991224, -0.0326797158338404, -6.06262924798131, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -0.388310526023184, 0.0, 1.54869275662883, 4.33961776939436, 3.40930943180585, -4.33961776939436, 1.09069056819415, 0.297619957829033, -4.95800218843468, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -0.0771550984361591, 0.0, -0.234916910606554, 5.81207200904272, 3.7964090358263, -5.81207200904272, 0.703590964173711, 0.373564134262451, -3.56149212521974, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.00000000000001, 0.323181343922405, 0.0, -1.97997156456572, 7.15679022064332, 4.11120295890698, -7.15679022064332, 0.388797041093032, 0.288021614984567, -2.13123139434125, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.00000000000001, 0.695242261318412, 0.0, -3.40741998736594, 8.21217772604754, 4.33897848824305, -8.21217772604754, 0.161021511756965, 0.143736226924628, -0.931558500877104, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.00000000000001, 0.938912091061202, 0.0, -4.28523989082589, 8.84632779976469, 4.46913856956784, -8.84632779976469, 0.0308614304321783, 0.030226478506625, -0.183898678741951, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f0_C2_D01[14][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f0_C2_D10[14][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f0_C3_D01[14][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f0_C3_D10[14][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f0_C4[14][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.979519779997151, -0.00676402869966103, 0.02724424870251, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.895213108433483, -0.0332217752300901, 0.138008666796607, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.755731665361457, -0.0714696497083082, 0.315737984346852, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.579832220908085, -0.1074606839036, 0.527628462995515, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.390364896813546, -0.124883739544608, 0.734518842731062, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.21047253646533, -0.10863983246256, 0.89816729599723, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0598654103237452, -0.0481895383835985, 0.988324128059853, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0481895383835985, 0.0598654103237452, 0.988324128059853, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.10863983246256, 0.21047253646533, 0.89816729599723, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.124883739544608, 0.390364896813546, 0.734518842731062, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.107460683903601, 0.579832220908085, 0.527628462995516, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0714696497083082, 0.755731665361457, 0.315737984346851, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0332217752300901, 0.895213108433484, 0.138008666796606, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00676402869966095, 0.979519779997152, 0.0272442487025094, 0.0, 0.0}};
    
    static const double FE0_f1_C0[14][32] = \
    {{0.962702323679585, 0.0, 0.00664789653009153, 0.0, 0.0, 0.0606689622161399, -0.0300191824258164, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.814513282726392, 0.0, 0.0302269671274252, 0.0, 0.0, 0.293852727170001, -0.138592977023819, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.589084923663358, 0.0, 0.0557098439464343, 0.0, 0.0, 0.618341969224366, -0.263136736834158, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.342873086287014, 0.0, 0.0635448928430308, 0.0, 0.0, 0.90873807748653, -0.315156056616575, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.131573813588545, 0.0, 0.0420924883390093, 0.0, 0.0, 1.05181781569915, -0.225484117626705, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.00688458463906607, 0.0, -0.00355362335781812, 0.0, 0.0, 0.988884099312148, 0.0215541086847357, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0619760862220981, 0.0, -0.0498885578452368, 0.0, 0.0, 0.736146037659975, 0.37571860640736, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0498885578452369, 0.0, -0.061976086222098, 0.0, 0.0, 0.37571860640736, 0.736146037659975, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.00355362335781817, 0.0, -0.00688458463906585, 0.0, 0.0, 0.0215541086847356, 0.988884099312148, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0420924883390093, 0.0, 0.131573813588545, 0.0, 0.0, -0.225484117626705, 1.05181781569915, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0635448928430307, 0.0, 0.342873086287014, 0.0, 0.0, -0.315156056616575, 0.908738077486531, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0557098439464343, 0.0, 0.589084923663358, 0.0, 0.0, -0.263136736834158, 0.618341969224366, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0302269671274251, 0.0, 0.814513282726393, 0.0, 0.0, -0.138592977023818, 0.29385272717, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0066478965300914, 0.0, 0.962702323679586, 0.0, 0.0, -0.0300191824258162, 0.0606689622161393, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f1_C0_D01[14][32] = \
    {{-5.37718923019686, 0.0, 0.938912091061209, 1.97619698383278e-14, -2.70894418008538e-14, 8.69329055145493, -4.25501341231926, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-4.8731992378045, 0.0, 0.695242261318419, 1.57651669496772e-14, -2.35367281220533e-14, 7.4416407369274, -3.26368376044131, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-4.04558726173635, 0.0, 0.323181343922411, 1.19904086659517e-14, -1.93178806284777e-14, 5.41435586739511, -1.69194994958116, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-3.01566297321643, 0.0, -0.0771550984361522, 0.0, -1.4210854715202e-14, 2.95417084799671, 0.13864722365589, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.93030833758852, 0.0, -0.38831052602318, 0.0, 0.0, 0.472306149153845, 1.84631271445786, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.936688206097105, 0.0, -0.499317454078402, 0.0, 0.0, -1.6259410418842, 3.06194670205971, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.157529702389524, 0.0, -0.328717566793527, 0.0, 0.0, -3.01365816201448, 3.49990543119754, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.328717566793523, 0.0, 0.157529702389519, -1.16573417585641e-14, 0.0, -3.49990543119753, 3.0136581620145, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.4993174540784, 0.0, 0.936688206097101, -1.26010313294955e-14, 0.0, -3.0619467020597, 1.62594104188421, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.38831052602318, 0.0, 1.93030833758851, -1.24344978758018e-14, 0.0, -1.84631271445785, -0.47230614915383, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0771550984361545, 0.0, 3.01566297321643, -1.22124532708767e-14, 0.0, -0.13864722365589, -2.95417084799668, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.32318134392241, 0.0, 4.04558726173635, -1.19904086659517e-14, 0.0, 1.69194994958116, -5.41435586739509, 0.0, 0.0, -1.46549439250521e-14, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.695242261318417, 0.0, 4.8731992378045, -1.11022302462516e-14, 0.0, 3.26368376044132, -7.44164073692739, 0.0, 0.0, -1.86517468137026e-14, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.938912091061208, 0.0, 5.37718923019686, -1.15463194561016e-14, 0.0, 4.25501341231926, -8.69329055145491, 0.0, 1.02140518265514e-14, -2.1316282072803e-14, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f1_C0_D10[14][32] = \
    {{-5.37718923019686, 1, 0.0, -0.0308614304321773, -0.0302264785066275, -0.15303724830977, 0.0302264785066273, 8.8463277997647, -4.46913856956784, 0.183898678741946, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-4.8731992378045, 1, 0.0, -0.161021511756965, -0.14373622692463, -0.770536989120136, 0.14373622692463, 8.21217772604755, -4.33897848824305, 0.931558500877101, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-4.04558726173635, 1, 0.0, -0.388797041093034, -0.288021614984566, -1.74243435324822, 0.288021614984567, 7.15679022064334, -4.11120295890699, 2.13123139434125, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-3.01566297321643, 1, 0.0, -0.703590964173713, -0.373564134262449, -2.85790116104602, 0.37356413426245, 5.81207200904273, -3.7964090358263, 3.56149212521973, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.93030833758852, 1, 0.0, -1.09069056819416, -0.297619957829029, -3.86731162024052, 0.29761995782903, 4.33961776939437, -3.40930943180586, 4.95800218843468, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.936688206097104, 1, 0.0, -1.53199716991225, 0.0326797158338448, -4.53063207806906, -0.032679715833844, 2.90469103618486, -2.96800283008776, 6.06262924798131, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.157529702389522, 1.0, 0.0, -2.00687636540848, 0.67815879861495, -4.66431149899553, -0.678158798614949, 1.65065333698105, -2.49312363459153, 6.67118786440401, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.328717566793525, 1, 0.0, -2.49312363459153, 1.65065333698104, -4.17806422981249, -1.65065333698104, 0.678158798614955, -2.00687636540848, 6.67118786440402, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.499317454078402, 1, 0.0, -2.96800283008776, 2.90469103618485, -3.09462641789355, -2.90469103618485, 0.0326797158338462, -1.53199716991225, 6.06262924798131, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.388310526023181, 1.0, 0.0, -3.40930943180585, 4.33961776939436, -1.54869275662882, -4.33961776939436, -0.297619957829028, -1.09069056819415, 4.95800218843468, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0771550984361546, 1, 0.0, -3.7964090358263, 5.81207200904272, 0.234916910606564, -5.81207200904272, -0.373564134262448, -0.703590964173709, 3.56149212521973, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.32318134392241, 1.0, 0.0, -4.11120295890697, 7.15679022064332, 1.97997156456573, -7.15679022064332, -0.288021614984563, -0.388797041093028, 2.13123139434124, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.695242261318418, 1.0, 0.0, -4.33897848824304, 8.21217772604754, 3.40741998736596, -8.21217772604754, -0.143736226924623, -0.16102151175696, 0.931558500877084, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.938912091061209, 1.0, 0.0, -4.46913856956783, 8.84632779976469, 4.2852398908259, -8.84632779976469, -0.0302264785066192, -0.0308614304321728, 0.183898678741927, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f1_C1[14][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.962702323679585, 0.0, 0.00664789653009153, 0.0, 0.0, 0.0606689622161399, -0.0300191824258164, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.814513282726392, 0.0, 0.0302269671274252, 0.0, 0.0, 0.293852727170001, -0.138592977023819, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.589084923663358, 0.0, 0.0557098439464343, 0.0, 0.0, 0.618341969224366, -0.263136736834158, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.342873086287014, 0.0, 0.0635448928430308, 0.0, 0.0, 0.90873807748653, -0.315156056616575, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.131573813588545, 0.0, 0.0420924883390093, 0.0, 0.0, 1.05181781569915, -0.225484117626705, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00688458463906607, 0.0, -0.00355362335781812, 0.0, 0.0, 0.988884099312148, 0.0215541086847357, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0619760862220981, 0.0, -0.0498885578452368, 0.0, 0.0, 0.736146037659975, 0.37571860640736, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0498885578452369, 0.0, -0.061976086222098, 0.0, 0.0, 0.37571860640736, 0.736146037659975, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00355362335781817, 0.0, -0.00688458463906585, 0.0, 0.0, 0.0215541086847356, 0.988884099312148, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0420924883390093, 0.0, 0.131573813588545, 0.0, 0.0, -0.225484117626705, 1.05181781569915, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0635448928430307, 0.0, 0.342873086287014, 0.0, 0.0, -0.315156056616575, 0.908738077486531, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0557098439464343, 0.0, 0.589084923663358, 0.0, 0.0, -0.263136736834158, 0.618341969224366, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0302269671274251, 0.0, 0.814513282726393, 0.0, 0.0, -0.138592977023818, 0.29385272717, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0066478965300914, 0.0, 0.962702323679586, 0.0, 0.0, -0.0300191824258162, 0.0606689622161393, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f1_C1_D01[14][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -5.37718923019686, 0.0, 0.938912091061209, 1.97619698383278e-14, -2.70894418008538e-14, 8.69329055145493, -4.25501341231926, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -4.8731992378045, 0.0, 0.695242261318419, 1.57651669496772e-14, -2.35367281220533e-14, 7.4416407369274, -3.26368376044131, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -4.04558726173635, 0.0, 0.323181343922411, 1.19904086659517e-14, -1.93178806284777e-14, 5.41435586739511, -1.69194994958116, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -3.01566297321643, 0.0, -0.0771550984361522, 0.0, -1.4210854715202e-14, 2.95417084799671, 0.13864722365589, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.93030833758852, 0.0, -0.38831052602318, 0.0, 0.0, 0.472306149153845, 1.84631271445786, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.936688206097105, 0.0, -0.499317454078402, 0.0, 0.0, -1.6259410418842, 3.06194670205971, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.157529702389524, 0.0, -0.328717566793527, 0.0, 0.0, -3.01365816201448, 3.49990543119754, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.328717566793523, 0.0, 0.157529702389519, -1.16573417585641e-14, 0.0, -3.49990543119753, 3.0136581620145, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.4993174540784, 0.0, 0.936688206097101, -1.26010313294955e-14, 0.0, -3.0619467020597, 1.62594104188421, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.38831052602318, 0.0, 1.93030833758851, -1.24344978758018e-14, 0.0, -1.84631271445785, -0.47230614915383, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0771550984361545, 0.0, 3.01566297321643, -1.22124532708767e-14, 0.0, -0.13864722365589, -2.95417084799668, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.32318134392241, 0.0, 4.04558726173635, -1.19904086659517e-14, 0.0, 1.69194994958116, -5.41435586739509, 0.0, 0.0, -1.46549439250521e-14, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.695242261318417, 0.0, 4.8731992378045, -1.11022302462516e-14, 0.0, 3.26368376044132, -7.44164073692739, 0.0, 0.0, -1.86517468137026e-14, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.938912091061208, 0.0, 5.37718923019686, -1.15463194561016e-14, 0.0, 4.25501341231926, -8.69329055145491, 0.0, 1.02140518265514e-14, -2.1316282072803e-14, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f1_C1_D10[14][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -5.37718923019686, 1, 0.0, -0.0308614304321773, -0.0302264785066275, -0.15303724830977, 0.0302264785066273, 8.8463277997647, -4.46913856956784, 0.183898678741946, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -4.8731992378045, 1, 0.0, -0.161021511756965, -0.14373622692463, -0.770536989120136, 0.14373622692463, 8.21217772604755, -4.33897848824305, 0.931558500877101, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -4.04558726173635, 1, 0.0, -0.388797041093034, -0.288021614984566, -1.74243435324822, 0.288021614984567, 7.15679022064334, -4.11120295890699, 2.13123139434125, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -3.01566297321643, 1, 0.0, -0.703590964173713, -0.373564134262449, -2.85790116104602, 0.37356413426245, 5.81207200904273, -3.7964090358263, 3.56149212521973, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.93030833758852, 1, 0.0, -1.09069056819416, -0.297619957829029, -3.86731162024052, 0.29761995782903, 4.33961776939437, -3.40930943180586, 4.95800218843468, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.936688206097104, 1, 0.0, -1.53199716991225, 0.0326797158338448, -4.53063207806906, -0.032679715833844, 2.90469103618486, -2.96800283008776, 6.06262924798131, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.157529702389522, 1.0, 0.0, -2.00687636540848, 0.67815879861495, -4.66431149899553, -0.678158798614949, 1.65065333698105, -2.49312363459153, 6.67118786440401, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.328717566793525, 1, 0.0, -2.49312363459153, 1.65065333698104, -4.17806422981249, -1.65065333698104, 0.678158798614955, -2.00687636540848, 6.67118786440402, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.499317454078402, 1, 0.0, -2.96800283008776, 2.90469103618485, -3.09462641789355, -2.90469103618485, 0.0326797158338462, -1.53199716991225, 6.06262924798131, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.388310526023181, 1.0, 0.0, -3.40930943180585, 4.33961776939436, -1.54869275662882, -4.33961776939436, -0.297619957829028, -1.09069056819415, 4.95800218843468, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0771550984361546, 1, 0.0, -3.7964090358263, 5.81207200904272, 0.234916910606564, -5.81207200904272, -0.373564134262448, -0.703590964173709, 3.56149212521973, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.32318134392241, 1.0, 0.0, -4.11120295890697, 7.15679022064332, 1.97997156456573, -7.15679022064332, -0.288021614984563, -0.388797041093028, 2.13123139434124, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.695242261318418, 1.0, 0.0, -4.33897848824304, 8.21217772604754, 3.40741998736596, -8.21217772604754, -0.143736226924623, -0.16102151175696, 0.931558500877084, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.938912091061209, 1.0, 0.0, -4.46913856956783, 8.84632779976469, 4.2852398908259, -8.84632779976469, -0.0302264785066192, -0.0308614304321728, 0.183898678741927, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f1_C4[14][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.979519779997151, 0.0, -0.00676402869966103, 0.0, 0.0272442487025097, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.895213108433483, 0.0, -0.0332217752300901, 0.0, 0.138008666796607, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.755731665361457, 0.0, -0.0714696497083082, 0.0, 0.315737984346851, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.579832220908085, 0.0, -0.1074606839036, 0.0, 0.527628462995515, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.390364896813546, 0.0, -0.124883739544608, 0.0, 0.734518842731062, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.21047253646533, 0.0, -0.10863983246256, 0.0, 0.89816729599723, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0598654103237452, 0.0, -0.0481895383835985, 0.0, 0.988324128059853, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0481895383835985, 0.0, 0.0598654103237452, 0.0, 0.988324128059853, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.10863983246256, 0.0, 0.21047253646533, 0.0, 0.89816729599723, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.124883739544608, 0.0, 0.390364896813546, 0.0, 0.734518842731062, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.107460683903601, 0.0, 0.579832220908085, 0.0, 0.527628462995516, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0714696497083081, 0.0, 0.755731665361457, 0.0, 0.315737984346851, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.03322177523009, 0.0, 0.895213108433484, 0.0, 0.138008666796606, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00676402869966089, 0.0, 0.979519779997152, 0.0, 0.0272442487025093, 0.0}};
    
    static const double FE0_f2_C0[14][32] = \
    {{0.962702323679585, 0.00664789653009147, 0.0, 0.0, 0.0, 0.0, 0.0, 0.06066896221614, -0.0300191824258165, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.814513282726392, 0.0302269671274251, 0.0, 0.0, 0.0, 0.0, 0.0, 0.293852727170001, -0.138592977023818, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.589084923663358, 0.0557098439464342, 0.0, 0.0, 0.0, 0.0, 0.0, 0.618341969224366, -0.263136736834158, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.342873086287014, 0.0635448928430307, 0.0, 0.0, 0.0, 0.0, 0.0, 0.90873807748653, -0.315156056616575, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.131573813588545, 0.0420924883390092, 0.0, 0.0, 0.0, 0.0, 0.0, 1.05181781569915, -0.225484117626705, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.00688458463906602, -0.00355362335781827, 0.0, 0.0, 0.0, 0.0, 0.0, 0.988884099312148, 0.0215541086847359, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0619760862220981, -0.049888557845237, 0.0, 0.0, 0.0, 0.0, 0.0, 0.736146037659975, 0.37571860640736, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0498885578452369, -0.0619760862220981, 0.0, 0.0, 0.0, 0.0, 0.0, 0.37571860640736, 0.736146037659975, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0035536233578182, -0.00688458463906602, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0215541086847354, 0.988884099312148, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0420924883390093, 0.131573813588545, 0.0, 0.0, 0.0, 0.0, 0.0, -0.225484117626705, 1.05181781569915, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0635448928430307, 0.342873086287014, 0.0, 0.0, 0.0, 0.0, 0.0, -0.315156056616575, 0.908738077486531, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0557098439464343, 0.589084923663358, 0.0, 0.0, 0.0, 0.0, 0.0, -0.263136736834158, 0.618341969224366, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0302269671274251, 0.814513282726392, 0.0, 0.0, 0.0, 0.0, 0.0, -0.138592977023818, 0.29385272717, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.00664789653009138, 0.962702323679585, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0300191824258164, 0.0606689622161391, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f2_C0_D01[14][32] = \
    {{-5.37718923019686, 0.0, 1.00000000000001, -0.030226478506606, -0.0308614304321999, 8.84632779976469, -4.46913856956783, -0.153037248309768, 0.0302264785066242, 0.183898678741939, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-4.8731992378045, 0.0, 1.00000000000001, -0.143736226924608, -0.161021511756987, 8.21217772604754, -4.33897848824304, -0.770536989120135, 0.143736226924627, 0.931558500877093, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-4.04558726173635, 0.0, 1.00000000000001, -0.288021614984546, -0.388797041093057, 7.15679022064333, -4.11120295890697, -1.74243435324822, 0.288021614984565, 2.13123139434125, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-3.01566297321643, 0.0, 1.00000000000001, -0.373564134262431, -0.703590964173734, 5.81207200904273, -3.79640903582629, -2.85790116104602, 0.373564134262448, 3.56149212521973, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.93030833758852, 0.0, 1.00000000000001, -0.297619957829013, -1.09069056819418, 4.33961776939437, -3.40930943180585, -3.86731162024052, 0.297619957829031, 4.95800218843467, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.936688206097105, 0.0, 1.00000000000001, 0.0326797158338585, -1.53199716991227, 2.90469103618486, -2.96800283008776, -4.53063207806906, -0.0326797158338413, 6.06262924798131, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.157529702389523, 0.0, 1.00000000000001, 0.678158798614961, -2.0068763654085, 1.65065333698106, -2.49312363459153, -4.66431149899554, -0.678158798614943, 6.67118786440401, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.328717566793523, 0.0, 1.00000000000001, 1.65065333698105, -2.49312363459154, 0.678158798614964, -2.00687636540848, -4.1780642298125, -1.65065333698103, 6.67118786440401, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.4993174540784, 0.0, 1.00000000000001, 2.90469103618486, -2.96800283008777, 0.032679715833861, -1.53199716991225, -3.09462641789357, -2.90469103618484, 6.0626292479813, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.388310526023178, 0.0, 1.00000000000001, 4.33961776939437, -3.40930943180586, -0.297619957829009, -1.09069056819416, -1.54869275662885, -4.33961776939434, 4.95800218843467, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0771550984361525, 0.0, 1.00000000000001, 5.81207200904273, -3.79640903582631, -0.373564134262425, -0.703590964173715, 0.234916910606531, -5.81207200904269, 3.56149212521972, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.323181343922412, 0.0, 1.00000000000001, 7.15679022064333, -4.11120295890698, -0.288021614984538, -0.388797041093035, 1.9799715645657, -7.15679022064329, 2.13123139434123, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.695242261318418, 0.0, 1.00000000000001, 8.21217772604755, -4.33897848824305, -0.143736226924599, -0.161021511756965, 3.40741998736591, -8.21217772604751, 0.931558500877078, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.93891209106121, 0.0, 1.00000000000001, 8.8463277997647, -4.46913856956784, -0.0302264785065947, -0.0308614304321781, 4.28523989082586, -8.84632779976466, 0.183898678741921, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f2_C0_D10[14][32] = \
    {{-5.37718923019686, 0.938912091061207, 0.0, 0.0, 0.0, 0.0, 0.0, 8.69329055145493, -4.25501341231928, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-4.8731992378045, 0.695242261318416, 0.0, 0.0, 0.0, 0.0, 0.0, 7.44164073692741, -3.26368376044133, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-4.04558726173635, 0.32318134392241, 0.0, 0.0, 0.0, 0.0, 0.0, 5.41435586739511, -1.69194994958117, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-3.01566297321643, -0.0771550984361521, 0.0, 0.0, 0.0, 0.0, 0.0, 2.95417084799671, 0.138647223655873, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-1.93030833758851, -0.388310526023179, 0.0, 0.0, 0.0, 0.0, 0.0, 0.472306149153847, 1.84631271445784, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.936688206097101, -0.499317454078401, 0.0, 0.0, 0.0, 0.0, 0.0, -1.6259410418842, 3.0619467020597, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.157529702389518, -0.328717566793526, 0.0, 0.0, 0.0, 0.0, 0.0, -3.01365816201449, 3.49990543119753, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.328717566793529, 0.157529702389519, 0.0, 0.0, 0.0, 0.0, 0.0, -3.49990543119754, 3.01365816201449, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.499317454078407, 0.936688206097099, 0.0, 0.0, 0.0, 0.0, 0.0, -3.06194670205971, 1.62594104188421, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.388310526023187, 1.93030833758851, 0.0, 0.0, 0.0, 0.0, 0.0, -1.84631271445787, -0.472306149153829, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0771550984361632, 3.01566297321642, 0.0, 0.0, 0.0, 0.0, 0.0, -0.138647223655907, -2.95417084799668, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.3231813439224, 4.04558726173634, 0.0, 0.0, 0.0, 0.0, 0.0, 1.69194994958114, -5.41435586739509, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.695242261318405, 4.87319923780449, 0.0, 0.0, 0.0, 0.0, 0.0, 3.2636837604413, -7.44164073692738, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.938912091061195, 5.37718923019685, 0.0, 0.0, 0.0, 0.0, 0.0, 4.25501341231924, -8.6932905514549, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f2_C1[14][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.962702323679585, 0.00664789653009147, 0.0, 0.0, 0.0, 0.0, 0.0, 0.06066896221614, -0.0300191824258165, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.814513282726392, 0.0302269671274251, 0.0, 0.0, 0.0, 0.0, 0.0, 0.293852727170001, -0.138592977023818, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.589084923663358, 0.0557098439464342, 0.0, 0.0, 0.0, 0.0, 0.0, 0.618341969224366, -0.263136736834158, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.342873086287014, 0.0635448928430307, 0.0, 0.0, 0.0, 0.0, 0.0, 0.90873807748653, -0.315156056616575, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.131573813588545, 0.0420924883390092, 0.0, 0.0, 0.0, 0.0, 0.0, 1.05181781569915, -0.225484117626705, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00688458463906602, -0.00355362335781827, 0.0, 0.0, 0.0, 0.0, 0.0, 0.988884099312148, 0.0215541086847359, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0619760862220981, -0.049888557845237, 0.0, 0.0, 0.0, 0.0, 0.0, 0.736146037659975, 0.37571860640736, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0498885578452369, -0.0619760862220981, 0.0, 0.0, 0.0, 0.0, 0.0, 0.37571860640736, 0.736146037659975, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0035536233578182, -0.00688458463906602, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0215541086847354, 0.988884099312148, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0420924883390093, 0.131573813588545, 0.0, 0.0, 0.0, 0.0, 0.0, -0.225484117626705, 1.05181781569915, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0635448928430307, 0.342873086287014, 0.0, 0.0, 0.0, 0.0, 0.0, -0.315156056616575, 0.908738077486531, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0557098439464343, 0.589084923663358, 0.0, 0.0, 0.0, 0.0, 0.0, -0.263136736834158, 0.618341969224366, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0302269671274251, 0.814513282726392, 0.0, 0.0, 0.0, 0.0, 0.0, -0.138592977023818, 0.29385272717, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00664789653009138, 0.962702323679585, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0300191824258164, 0.0606689622161391, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f2_C1_D01[14][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -5.37718923019686, 0.0, 1.00000000000001, -0.030226478506606, -0.0308614304321999, 8.84632779976469, -4.46913856956783, -0.153037248309768, 0.0302264785066242, 0.183898678741939, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -4.8731992378045, 0.0, 1.00000000000001, -0.143736226924608, -0.161021511756987, 8.21217772604754, -4.33897848824304, -0.770536989120135, 0.143736226924627, 0.931558500877093, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -4.04558726173635, 0.0, 1.00000000000001, -0.288021614984546, -0.388797041093057, 7.15679022064333, -4.11120295890697, -1.74243435324822, 0.288021614984565, 2.13123139434125, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -3.01566297321643, 0.0, 1.00000000000001, -0.373564134262431, -0.703590964173734, 5.81207200904273, -3.79640903582629, -2.85790116104602, 0.373564134262448, 3.56149212521973, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.93030833758852, 0.0, 1.00000000000001, -0.297619957829013, -1.09069056819418, 4.33961776939437, -3.40930943180585, -3.86731162024052, 0.297619957829031, 4.95800218843467, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.936688206097105, 0.0, 1.00000000000001, 0.0326797158338585, -1.53199716991227, 2.90469103618486, -2.96800283008776, -4.53063207806906, -0.0326797158338413, 6.06262924798131, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.157529702389523, 0.0, 1.00000000000001, 0.678158798614961, -2.0068763654085, 1.65065333698106, -2.49312363459153, -4.66431149899554, -0.678158798614943, 6.67118786440401, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.328717566793523, 0.0, 1.00000000000001, 1.65065333698105, -2.49312363459154, 0.678158798614964, -2.00687636540848, -4.1780642298125, -1.65065333698103, 6.67118786440401, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.4993174540784, 0.0, 1.00000000000001, 2.90469103618486, -2.96800283008777, 0.032679715833861, -1.53199716991225, -3.09462641789357, -2.90469103618484, 6.0626292479813, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.388310526023178, 0.0, 1.00000000000001, 4.33961776939437, -3.40930943180586, -0.297619957829009, -1.09069056819416, -1.54869275662885, -4.33961776939434, 4.95800218843467, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0771550984361525, 0.0, 1.00000000000001, 5.81207200904273, -3.79640903582631, -0.373564134262425, -0.703590964173715, 0.234916910606531, -5.81207200904269, 3.56149212521972, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.323181343922412, 0.0, 1.00000000000001, 7.15679022064333, -4.11120295890698, -0.288021614984538, -0.388797041093035, 1.9799715645657, -7.15679022064329, 2.13123139434123, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.695242261318418, 0.0, 1.00000000000001, 8.21217772604755, -4.33897848824305, -0.143736226924599, -0.161021511756965, 3.40741998736591, -8.21217772604751, 0.931558500877078, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.93891209106121, 0.0, 1.00000000000001, 8.8463277997647, -4.46913856956784, -0.0302264785065947, -0.0308614304321781, 4.28523989082586, -8.84632779976466, 0.183898678741921, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f2_C1_D10[14][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -5.37718923019686, 0.938912091061207, 0.0, 0.0, 0.0, 0.0, 0.0, 8.69329055145493, -4.25501341231928, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -4.8731992378045, 0.695242261318416, 0.0, 0.0, 0.0, 0.0, 0.0, 7.44164073692741, -3.26368376044133, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -4.04558726173635, 0.32318134392241, 0.0, 0.0, 0.0, 0.0, 0.0, 5.41435586739511, -1.69194994958117, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -3.01566297321643, -0.0771550984361521, 0.0, 0.0, 0.0, 0.0, 0.0, 2.95417084799671, 0.138647223655873, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.93030833758851, -0.388310526023179, 0.0, 0.0, 0.0, 0.0, 0.0, 0.472306149153847, 1.84631271445784, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.936688206097101, -0.499317454078401, 0.0, 0.0, 0.0, 0.0, 0.0, -1.6259410418842, 3.0619467020597, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.157529702389518, -0.328717566793526, 0.0, 0.0, 0.0, 0.0, 0.0, -3.01365816201449, 3.49990543119753, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.328717566793529, 0.157529702389519, 0.0, 0.0, 0.0, 0.0, 0.0, -3.49990543119754, 3.01365816201449, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.499317454078407, 0.936688206097099, 0.0, 0.0, 0.0, 0.0, 0.0, -3.06194670205971, 1.62594104188421, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.388310526023187, 1.93030833758851, 0.0, 0.0, 0.0, 0.0, 0.0, -1.84631271445787, -0.472306149153829, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0771550984361632, 3.01566297321642, 0.0, 0.0, 0.0, 0.0, 0.0, -0.138647223655907, -2.95417084799668, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.3231813439224, 4.04558726173634, 0.0, 0.0, 0.0, 0.0, 0.0, 1.69194994958114, -5.41435586739509, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.695242261318405, 4.87319923780449, 0.0, 0.0, 0.0, 0.0, 0.0, 3.2636837604413, -7.44164073692738, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.938912091061195, 5.37718923019685, 0.0, 0.0, 0.0, 0.0, 0.0, 4.25501341231924, -8.6932905514549, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f2_C4[14][32] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.979519779997151, -0.00676402869966096, 0.0, 0.0, 0.0, 0.0272442487025096},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.895213108433483, -0.0332217752300901, 0.0, 0.0, 0.0, 0.138008666796607},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.755731665361457, -0.0714696497083081, 0.0, 0.0, 0.0, 0.315737984346851},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.579832220908085, -0.1074606839036, 0.0, 0.0, 0.0, 0.527628462995515},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.390364896813546, -0.124883739544608, 0.0, 0.0, 0.0, 0.734518842731062},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.21047253646533, -0.10863983246256, 0.0, 0.0, 0.0, 0.89816729599723},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0598654103237452, -0.0481895383835985, 0.0, 0.0, 0.0, 0.988324128059853},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0481895383835985, 0.0598654103237452, 0.0, 0.0, 0.0, 0.988324128059853},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.10863983246256, 0.21047253646533, 0.0, 0.0, 0.0, 0.89816729599723},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.124883739544608, 0.390364896813546, 0.0, 0.0, 0.0, 0.734518842731063},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.107460683903601, 0.579832220908084, 0.0, 0.0, 0.0, 0.527628462995516},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0714696497083081, 0.755731665361457, 0.0, 0.0, 0.0, 0.315737984346851},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.03322177523009, 0.895213108433484, 0.0, 0.0, 0.0, 0.138008666796607},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00676402869966086, 0.979519779997151, 0.0, 0.0, 0.0, 0.0272442487025094}};
    
    static const double FE1_f0[14][1] = \
    {{1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0},
    {1.0}};
    
    // Reset values in the element tensor.
    for (unsigned int r = 0; r < 64; r++)
    {
      A[r] = 0.0;
    } // end loop over 'r'
    
    // Compute element tensor using UFL quadrature representation
    // Optimisations: ('eliminate zeros', False), ('ignore ones', False), ('ignore zero tables', False), ('optimisation', False), ('remove zero terms', False)
    switch (facet_0)
    {
    case 0:
      {
        switch (facet_1)
      {
      case 0:
        {
          // Total number of operations to compute element tensor (from this point): 1990940
        
        // Loop quadrature points for integral.
        // Number of operations to compute element tensor for following IP loop = 1990940
        for (unsigned int ip = 0; ip < 14; ip++)
        {
          
          // Coefficient declarations.
          double F0 = 0.0;
          double F1 = 0.0;
          double F2 = 0.0;
          double F3 = 0.0;
          double F4 = 0.0;
          double F5 = 0.0;
          double F6 = 0.0;
          double F7 = 0.0;
          double F8 = 0.0;
          double F9 = 0.0;
          
          // Total number of operations to compute function values = 2
          for (unsigned int r = 0; r < 1; r++)
          {
            F7 += FE1_f0[ip][0]*w[1][0];
          } // end loop over 'r'
          
          // Total number of operations to compute function values = 576
          for (unsigned int r = 0; r < 32; r++)
          {
            F0 += FE0_f0_C3_D10[ip][r]*(w[3][r + 32]);
            F1 += FE0_f0_C3_D01[ip][r]*(w[3][r + 32]);
            F2 += FE0_f0_C2_D10[ip][r]*(w[3][r + 32]);
            F3 += FE0_f0_C2_D01[ip][r]*(w[3][r + 32]);
            F4 += FE0_f0_C4[ip][r]*w[3][r];
            F5 += FE0_f0_C0_D10[ip][r]*w[3][r];
            F6 += FE0_f0_C0_D01[ip][r]*w[3][r];
            F8 += FE0_f0_C1_D10[ip][r]*w[3][r];
            F9 += FE0_f0_C1_D01[ip][r]*w[3][r];
          } // end loop over 'r'
          
          // Number of operations for primary indices: 141632
          for (unsigned int j = 0; j < 32; j++)
          {
            // Number of operations to compute entry: 4381
            A[(j + 32)] += ((FE0_f0_C0[ip][j]*((((-1.0)*n_00)*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))))))) + ((-1.0)*n_01)*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))))))))) + FE0_f0_C1[ip][j]*((((-1.0)*n_00)*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))))))) + ((-1.0)*n_01)*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)))))))))))))*(-1.0)*W14[ip]*det;
            // Number of operations to compute entry: 45
            A[j] += ((FE0_f0_C0[ip][j]*((((((K_0[0]*F8 + K_0[2]*F9) + (K_0[1]*F5 + K_0[3]*F6)))*F7)*n_01 + (((2.0*((K_0[0]*F5 + K_0[2]*F6)))*F7 + 1.0*((-1.0)*F4)))*n_00)) + FE0_f0_C1[ip][j]*((((((K_0[0]*F8 + K_0[2]*F9) + (K_0[1]*F5 + K_0[3]*F6)))*F7)*n_00 + (((2.0*((K_0[1]*F8 + K_0[3]*F9)))*F7 + 1.0*((-1.0)*F4)))*n_01))))*(-1.0)*W14[ip]*det;
          } // end loop over 'j'
        } // end loop over 'ip'
          break;
        }
      case 1:
        {
          // Total number of operations to compute element tensor (from this point): 1990940
        
        // Loop quadrature points for integral.
        // Number of operations to compute element tensor for following IP loop = 1990940
        for (unsigned int ip = 0; ip < 14; ip++)
        {
          
          // Coefficient declarations.
          double F0 = 0.0;
          double F1 = 0.0;
          double F2 = 0.0;
          double F3 = 0.0;
          double F4 = 0.0;
          double F5 = 0.0;
          double F6 = 0.0;
          double F7 = 0.0;
          double F8 = 0.0;
          double F9 = 0.0;
          
          // Total number of operations to compute function values = 2
          for (unsigned int r = 0; r < 1; r++)
          {
            F7 += FE1_f0[ip][0]*w[1][0];
          } // end loop over 'r'
          
          // Total number of operations to compute function values = 576
          for (unsigned int r = 0; r < 32; r++)
          {
            F0 += FE0_f0_C3_D10[ip][r]*(w[3][r + 32]);
            F1 += FE0_f0_C3_D01[ip][r]*(w[3][r + 32]);
            F2 += FE0_f0_C2_D10[ip][r]*(w[3][r + 32]);
            F3 += FE0_f0_C2_D01[ip][r]*(w[3][r + 32]);
            F4 += FE0_f0_C4[ip][r]*w[3][r];
            F5 += FE0_f0_C0_D10[ip][r]*w[3][r];
            F6 += FE0_f0_C0_D01[ip][r]*w[3][r];
            F8 += FE0_f0_C1_D10[ip][r]*w[3][r];
            F9 += FE0_f0_C1_D01[ip][r]*w[3][r];
          } // end loop over 'r'
          
          // Number of operations for primary indices: 141632
          for (unsigned int j = 0; j < 32; j++)
          {
            // Number of operations to compute entry: 4381
            A[(j + 32)] += ((FE0_f1_C0[ip][j]*((((-1.0)*n_00)*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))))))) + ((-1.0)*n_01)*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))))))))) + FE0_f1_C1[ip][j]*((((-1.0)*n_00)*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))))))) + ((-1.0)*n_01)*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)))))))))))))*(-1.0)*W14[ip]*det;
            // Number of operations to compute entry: 45
            A[j] += ((FE0_f0_C0[ip][j]*((((((K_0[0]*F8 + K_0[2]*F9) + (K_0[1]*F5 + K_0[3]*F6)))*F7)*n_01 + (((2.0*((K_0[0]*F5 + K_0[2]*F6)))*F7 + 1.0*((-1.0)*F4)))*n_00)) + FE0_f0_C1[ip][j]*((((((K_0[0]*F8 + K_0[2]*F9) + (K_0[1]*F5 + K_0[3]*F6)))*F7)*n_00 + (((2.0*((K_0[1]*F8 + K_0[3]*F9)))*F7 + 1.0*((-1.0)*F4)))*n_01))))*(-1.0)*W14[ip]*det;
          } // end loop over 'j'
        } // end loop over 'ip'
          break;
        }
      case 2:
        {
          // Total number of operations to compute element tensor (from this point): 1990940
        
        // Loop quadrature points for integral.
        // Number of operations to compute element tensor for following IP loop = 1990940
        for (unsigned int ip = 0; ip < 14; ip++)
        {
          
          // Coefficient declarations.
          double F0 = 0.0;
          double F1 = 0.0;
          double F2 = 0.0;
          double F3 = 0.0;
          double F4 = 0.0;
          double F5 = 0.0;
          double F6 = 0.0;
          double F7 = 0.0;
          double F8 = 0.0;
          double F9 = 0.0;
          
          // Total number of operations to compute function values = 2
          for (unsigned int r = 0; r < 1; r++)
          {
            F7 += FE1_f0[ip][0]*w[1][0];
          } // end loop over 'r'
          
          // Total number of operations to compute function values = 576
          for (unsigned int r = 0; r < 32; r++)
          {
            F0 += FE0_f0_C3_D10[ip][r]*(w[3][r + 32]);
            F1 += FE0_f0_C3_D01[ip][r]*(w[3][r + 32]);
            F2 += FE0_f0_C2_D10[ip][r]*(w[3][r + 32]);
            F3 += FE0_f0_C2_D01[ip][r]*(w[3][r + 32]);
            F4 += FE0_f0_C4[ip][r]*w[3][r];
            F5 += FE0_f0_C0_D10[ip][r]*w[3][r];
            F6 += FE0_f0_C0_D01[ip][r]*w[3][r];
            F8 += FE0_f0_C1_D10[ip][r]*w[3][r];
            F9 += FE0_f0_C1_D01[ip][r]*w[3][r];
          } // end loop over 'r'
          
          // Number of operations for primary indices: 141632
          for (unsigned int j = 0; j < 32; j++)
          {
            // Number of operations to compute entry: 4381
            A[(j + 32)] += ((FE0_f2_C0[ip][j]*((((-1.0)*n_00)*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))))))) + ((-1.0)*n_01)*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))))))))) + FE0_f2_C1[ip][j]*((((-1.0)*n_00)*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))))))) + ((-1.0)*n_01)*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)))))))))))))*(-1.0)*W14[ip]*det;
            // Number of operations to compute entry: 45
            A[j] += ((FE0_f0_C0[ip][j]*((((((K_0[0]*F8 + K_0[2]*F9) + (K_0[1]*F5 + K_0[3]*F6)))*F7)*n_01 + (((2.0*((K_0[0]*F5 + K_0[2]*F6)))*F7 + 1.0*((-1.0)*F4)))*n_00)) + FE0_f0_C1[ip][j]*((((((K_0[0]*F8 + K_0[2]*F9) + (K_0[1]*F5 + K_0[3]*F6)))*F7)*n_00 + (((2.0*((K_0[1]*F8 + K_0[3]*F9)))*F7 + 1.0*((-1.0)*F4)))*n_01))))*(-1.0)*W14[ip]*det;
          } // end loop over 'j'
        } // end loop over 'ip'
          break;
        }
      }
      
        break;
      }
    case 1:
      {
        switch (facet_1)
      {
      case 0:
        {
          // Total number of operations to compute element tensor (from this point): 1990940
        
        // Loop quadrature points for integral.
        // Number of operations to compute element tensor for following IP loop = 1990940
        for (unsigned int ip = 0; ip < 14; ip++)
        {
          
          // Coefficient declarations.
          double F0 = 0.0;
          double F1 = 0.0;
          double F2 = 0.0;
          double F3 = 0.0;
          double F4 = 0.0;
          double F5 = 0.0;
          double F6 = 0.0;
          double F7 = 0.0;
          double F8 = 0.0;
          double F9 = 0.0;
          
          // Total number of operations to compute function values = 2
          for (unsigned int r = 0; r < 1; r++)
          {
            F7 += FE1_f0[ip][0]*w[1][0];
          } // end loop over 'r'
          
          // Total number of operations to compute function values = 576
          for (unsigned int r = 0; r < 32; r++)
          {
            F0 += FE0_f0_C3_D10[ip][r]*(w[3][r + 32]);
            F1 += FE0_f0_C3_D01[ip][r]*(w[3][r + 32]);
            F2 += FE0_f0_C2_D10[ip][r]*(w[3][r + 32]);
            F3 += FE0_f0_C2_D01[ip][r]*(w[3][r + 32]);
            F4 += FE0_f1_C4[ip][r]*w[3][r];
            F5 += FE0_f1_C0_D10[ip][r]*w[3][r];
            F6 += FE0_f1_C0_D01[ip][r]*w[3][r];
            F8 += FE0_f1_C1_D10[ip][r]*w[3][r];
            F9 += FE0_f1_C1_D01[ip][r]*w[3][r];
          } // end loop over 'r'
          
          // Number of operations for primary indices: 141632
          for (unsigned int j = 0; j < 32; j++)
          {
            // Number of operations to compute entry: 4381
            A[(j + 32)] += ((FE0_f0_C0[ip][j]*((((-1.0)*n_00)*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))))))) + ((-1.0)*n_01)*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))))))))) + FE0_f0_C1[ip][j]*((((-1.0)*n_00)*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))))))) + ((-1.0)*n_01)*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)))))))))))))*(-1.0)*W14[ip]*det;
            // Number of operations to compute entry: 45
            A[j] += ((FE0_f1_C0[ip][j]*((((((K_0[0]*F8 + K_0[2]*F9) + (K_0[1]*F5 + K_0[3]*F6)))*F7)*n_01 + (((2.0*((K_0[0]*F5 + K_0[2]*F6)))*F7 + 1.0*((-1.0)*F4)))*n_00)) + FE0_f1_C1[ip][j]*((((((K_0[0]*F8 + K_0[2]*F9) + (K_0[1]*F5 + K_0[3]*F6)))*F7)*n_00 + (((2.0*((K_0[1]*F8 + K_0[3]*F9)))*F7 + 1.0*((-1.0)*F4)))*n_01))))*(-1.0)*W14[ip]*det;
          } // end loop over 'j'
        } // end loop over 'ip'
          break;
        }
      case 1:
        {
          // Total number of operations to compute element tensor (from this point): 1990940
        
        // Loop quadrature points for integral.
        // Number of operations to compute element tensor for following IP loop = 1990940
        for (unsigned int ip = 0; ip < 14; ip++)
        {
          
          // Coefficient declarations.
          double F0 = 0.0;
          double F1 = 0.0;
          double F2 = 0.0;
          double F3 = 0.0;
          double F4 = 0.0;
          double F5 = 0.0;
          double F6 = 0.0;
          double F7 = 0.0;
          double F8 = 0.0;
          double F9 = 0.0;
          
          // Total number of operations to compute function values = 2
          for (unsigned int r = 0; r < 1; r++)
          {
            F7 += FE1_f0[ip][0]*w[1][0];
          } // end loop over 'r'
          
          // Total number of operations to compute function values = 576
          for (unsigned int r = 0; r < 32; r++)
          {
            F0 += FE0_f0_C3_D10[ip][r]*(w[3][r + 32]);
            F1 += FE0_f0_C3_D01[ip][r]*(w[3][r + 32]);
            F2 += FE0_f0_C2_D10[ip][r]*(w[3][r + 32]);
            F3 += FE0_f0_C2_D01[ip][r]*(w[3][r + 32]);
            F4 += FE0_f1_C4[ip][r]*w[3][r];
            F5 += FE0_f1_C0_D10[ip][r]*w[3][r];
            F6 += FE0_f1_C0_D01[ip][r]*w[3][r];
            F8 += FE0_f1_C1_D10[ip][r]*w[3][r];
            F9 += FE0_f1_C1_D01[ip][r]*w[3][r];
          } // end loop over 'r'
          
          // Number of operations for primary indices: 141632
          for (unsigned int j = 0; j < 32; j++)
          {
            // Number of operations to compute entry: 4381
            A[(j + 32)] += ((FE0_f1_C0[ip][j]*((((-1.0)*n_00)*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))))))) + ((-1.0)*n_01)*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))))))))) + FE0_f1_C1[ip][j]*((((-1.0)*n_00)*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))))))) + ((-1.0)*n_01)*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)))))))))))))*(-1.0)*W14[ip]*det;
            // Number of operations to compute entry: 45
            A[j] += ((FE0_f1_C0[ip][j]*((((((K_0[0]*F8 + K_0[2]*F9) + (K_0[1]*F5 + K_0[3]*F6)))*F7)*n_01 + (((2.0*((K_0[0]*F5 + K_0[2]*F6)))*F7 + 1.0*((-1.0)*F4)))*n_00)) + FE0_f1_C1[ip][j]*((((((K_0[0]*F8 + K_0[2]*F9) + (K_0[1]*F5 + K_0[3]*F6)))*F7)*n_00 + (((2.0*((K_0[1]*F8 + K_0[3]*F9)))*F7 + 1.0*((-1.0)*F4)))*n_01))))*(-1.0)*W14[ip]*det;
          } // end loop over 'j'
        } // end loop over 'ip'
          break;
        }
      case 2:
        {
          // Total number of operations to compute element tensor (from this point): 1990940
        
        // Loop quadrature points for integral.
        // Number of operations to compute element tensor for following IP loop = 1990940
        for (unsigned int ip = 0; ip < 14; ip++)
        {
          
          // Coefficient declarations.
          double F0 = 0.0;
          double F1 = 0.0;
          double F2 = 0.0;
          double F3 = 0.0;
          double F4 = 0.0;
          double F5 = 0.0;
          double F6 = 0.0;
          double F7 = 0.0;
          double F8 = 0.0;
          double F9 = 0.0;
          
          // Total number of operations to compute function values = 2
          for (unsigned int r = 0; r < 1; r++)
          {
            F7 += FE1_f0[ip][0]*w[1][0];
          } // end loop over 'r'
          
          // Total number of operations to compute function values = 576
          for (unsigned int r = 0; r < 32; r++)
          {
            F0 += FE0_f0_C3_D10[ip][r]*(w[3][r + 32]);
            F1 += FE0_f0_C3_D01[ip][r]*(w[3][r + 32]);
            F2 += FE0_f0_C2_D10[ip][r]*(w[3][r + 32]);
            F3 += FE0_f0_C2_D01[ip][r]*(w[3][r + 32]);
            F4 += FE0_f1_C4[ip][r]*w[3][r];
            F5 += FE0_f1_C0_D10[ip][r]*w[3][r];
            F6 += FE0_f1_C0_D01[ip][r]*w[3][r];
            F8 += FE0_f1_C1_D10[ip][r]*w[3][r];
            F9 += FE0_f1_C1_D01[ip][r]*w[3][r];
          } // end loop over 'r'
          
          // Number of operations for primary indices: 141632
          for (unsigned int j = 0; j < 32; j++)
          {
            // Number of operations to compute entry: 4381
            A[(j + 32)] += ((FE0_f2_C0[ip][j]*((((-1.0)*n_00)*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))))))) + ((-1.0)*n_01)*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))))))))) + FE0_f2_C1[ip][j]*((((-1.0)*n_00)*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))))))) + ((-1.0)*n_01)*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)))))))))))))*(-1.0)*W14[ip]*det;
            // Number of operations to compute entry: 45
            A[j] += ((FE0_f1_C0[ip][j]*((((((K_0[0]*F8 + K_0[2]*F9) + (K_0[1]*F5 + K_0[3]*F6)))*F7)*n_01 + (((2.0*((K_0[0]*F5 + K_0[2]*F6)))*F7 + 1.0*((-1.0)*F4)))*n_00)) + FE0_f1_C1[ip][j]*((((((K_0[0]*F8 + K_0[2]*F9) + (K_0[1]*F5 + K_0[3]*F6)))*F7)*n_00 + (((2.0*((K_0[1]*F8 + K_0[3]*F9)))*F7 + 1.0*((-1.0)*F4)))*n_01))))*(-1.0)*W14[ip]*det;
          } // end loop over 'j'
        } // end loop over 'ip'
          break;
        }
      }
      
        break;
      }
    case 2:
      {
        switch (facet_1)
      {
      case 0:
        {
          // Total number of operations to compute element tensor (from this point): 1990940
        
        // Loop quadrature points for integral.
        // Number of operations to compute element tensor for following IP loop = 1990940
        for (unsigned int ip = 0; ip < 14; ip++)
        {
          
          // Coefficient declarations.
          double F0 = 0.0;
          double F1 = 0.0;
          double F2 = 0.0;
          double F3 = 0.0;
          double F4 = 0.0;
          double F5 = 0.0;
          double F6 = 0.0;
          double F7 = 0.0;
          double F8 = 0.0;
          double F9 = 0.0;
          
          // Total number of operations to compute function values = 2
          for (unsigned int r = 0; r < 1; r++)
          {
            F7 += FE1_f0[ip][0]*w[1][0];
          } // end loop over 'r'
          
          // Total number of operations to compute function values = 576
          for (unsigned int r = 0; r < 32; r++)
          {
            F0 += FE0_f0_C3_D10[ip][r]*(w[3][r + 32]);
            F1 += FE0_f0_C3_D01[ip][r]*(w[3][r + 32]);
            F2 += FE0_f0_C2_D10[ip][r]*(w[3][r + 32]);
            F3 += FE0_f0_C2_D01[ip][r]*(w[3][r + 32]);
            F4 += FE0_f2_C4[ip][r]*w[3][r];
            F5 += FE0_f2_C0_D10[ip][r]*w[3][r];
            F6 += FE0_f2_C0_D01[ip][r]*w[3][r];
            F8 += FE0_f2_C1_D10[ip][r]*w[3][r];
            F9 += FE0_f2_C1_D01[ip][r]*w[3][r];
          } // end loop over 'r'
          
          // Number of operations for primary indices: 141632
          for (unsigned int j = 0; j < 32; j++)
          {
            // Number of operations to compute entry: 4381
            A[(j + 32)] += ((FE0_f0_C0[ip][j]*((((-1.0)*n_00)*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))))))) + ((-1.0)*n_01)*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))))))))) + FE0_f0_C1[ip][j]*((((-1.0)*n_00)*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))))))) + ((-1.0)*n_01)*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)))))))))))))*(-1.0)*W14[ip]*det;
            // Number of operations to compute entry: 45
            A[j] += ((FE0_f2_C0[ip][j]*((((((K_0[0]*F8 + K_0[2]*F9) + (K_0[1]*F5 + K_0[3]*F6)))*F7)*n_01 + (((2.0*((K_0[0]*F5 + K_0[2]*F6)))*F7 + 1.0*((-1.0)*F4)))*n_00)) + FE0_f2_C1[ip][j]*((((((K_0[0]*F8 + K_0[2]*F9) + (K_0[1]*F5 + K_0[3]*F6)))*F7)*n_00 + (((2.0*((K_0[1]*F8 + K_0[3]*F9)))*F7 + 1.0*((-1.0)*F4)))*n_01))))*(-1.0)*W14[ip]*det;
          } // end loop over 'j'
        } // end loop over 'ip'
          break;
        }
      case 1:
        {
          // Total number of operations to compute element tensor (from this point): 1990940
        
        // Loop quadrature points for integral.
        // Number of operations to compute element tensor for following IP loop = 1990940
        for (unsigned int ip = 0; ip < 14; ip++)
        {
          
          // Coefficient declarations.
          double F0 = 0.0;
          double F1 = 0.0;
          double F2 = 0.0;
          double F3 = 0.0;
          double F4 = 0.0;
          double F5 = 0.0;
          double F6 = 0.0;
          double F7 = 0.0;
          double F8 = 0.0;
          double F9 = 0.0;
          
          // Total number of operations to compute function values = 2
          for (unsigned int r = 0; r < 1; r++)
          {
            F7 += FE1_f0[ip][0]*w[1][0];
          } // end loop over 'r'
          
          // Total number of operations to compute function values = 576
          for (unsigned int r = 0; r < 32; r++)
          {
            F0 += FE0_f0_C3_D10[ip][r]*(w[3][r + 32]);
            F1 += FE0_f0_C3_D01[ip][r]*(w[3][r + 32]);
            F2 += FE0_f0_C2_D10[ip][r]*(w[3][r + 32]);
            F3 += FE0_f0_C2_D01[ip][r]*(w[3][r + 32]);
            F4 += FE0_f2_C4[ip][r]*w[3][r];
            F5 += FE0_f2_C0_D10[ip][r]*w[3][r];
            F6 += FE0_f2_C0_D01[ip][r]*w[3][r];
            F8 += FE0_f2_C1_D10[ip][r]*w[3][r];
            F9 += FE0_f2_C1_D01[ip][r]*w[3][r];
          } // end loop over 'r'
          
          // Number of operations for primary indices: 141632
          for (unsigned int j = 0; j < 32; j++)
          {
            // Number of operations to compute entry: 4381
            A[(j + 32)] += ((FE0_f1_C0[ip][j]*((((-1.0)*n_00)*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))))))) + ((-1.0)*n_01)*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))))))))) + FE0_f1_C1[ip][j]*((((-1.0)*n_00)*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))))))) + ((-1.0)*n_01)*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)))))))))))))*(-1.0)*W14[ip]*det;
            // Number of operations to compute entry: 45
            A[j] += ((FE0_f2_C0[ip][j]*((((((K_0[0]*F8 + K_0[2]*F9) + (K_0[1]*F5 + K_0[3]*F6)))*F7)*n_01 + (((2.0*((K_0[0]*F5 + K_0[2]*F6)))*F7 + 1.0*((-1.0)*F4)))*n_00)) + FE0_f2_C1[ip][j]*((((((K_0[0]*F8 + K_0[2]*F9) + (K_0[1]*F5 + K_0[3]*F6)))*F7)*n_00 + (((2.0*((K_0[1]*F8 + K_0[3]*F9)))*F7 + 1.0*((-1.0)*F4)))*n_01))))*(-1.0)*W14[ip]*det;
          } // end loop over 'j'
        } // end loop over 'ip'
          break;
        }
      case 2:
        {
          // Total number of operations to compute element tensor (from this point): 1990940
        
        // Loop quadrature points for integral.
        // Number of operations to compute element tensor for following IP loop = 1990940
        for (unsigned int ip = 0; ip < 14; ip++)
        {
          
          // Coefficient declarations.
          double F0 = 0.0;
          double F1 = 0.0;
          double F2 = 0.0;
          double F3 = 0.0;
          double F4 = 0.0;
          double F5 = 0.0;
          double F6 = 0.0;
          double F7 = 0.0;
          double F8 = 0.0;
          double F9 = 0.0;
          
          // Total number of operations to compute function values = 2
          for (unsigned int r = 0; r < 1; r++)
          {
            F7 += FE1_f0[ip][0]*w[1][0];
          } // end loop over 'r'
          
          // Total number of operations to compute function values = 576
          for (unsigned int r = 0; r < 32; r++)
          {
            F0 += FE0_f0_C3_D10[ip][r]*(w[3][r + 32]);
            F1 += FE0_f0_C3_D01[ip][r]*(w[3][r + 32]);
            F2 += FE0_f0_C2_D10[ip][r]*(w[3][r + 32]);
            F3 += FE0_f0_C2_D01[ip][r]*(w[3][r + 32]);
            F4 += FE0_f2_C4[ip][r]*w[3][r];
            F5 += FE0_f2_C0_D10[ip][r]*w[3][r];
            F6 += FE0_f2_C0_D01[ip][r]*w[3][r];
            F8 += FE0_f2_C1_D10[ip][r]*w[3][r];
            F9 += FE0_f2_C1_D01[ip][r]*w[3][r];
          } // end loop over 'r'
          
          // Number of operations for primary indices: 141632
          for (unsigned int j = 0; j < 32; j++)
          {
            // Number of operations to compute entry: 4381
            A[(j + 32)] += ((FE0_f2_C0[ip][j]*((((-1.0)*n_00)*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))))))) + ((-1.0)*n_01)*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))))))))) + FE0_f2_C1[ip][j]*((((-1.0)*n_00)*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))))))) + ((-1.0)*n_01)*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(1000000.0*(0.5*(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((1.0*(2000000*((0.5*((((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)) + 0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0))))) + 1000000.0*(0.5*((((((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1))))))) + ((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))*((-1.0)*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))/(((((-1.0)*((K_1[0]*F2 + K_1[2]*F3)) + 1.0))*(((-1.0)*((K_1[1]*F0 + K_1[3]*F1)) + 1.0)) + (-1.0)*(((-1.0)*((K_1[1]*F2 + K_1[3]*F3)))*((-1.0)*((K_1[0]*F0 + K_1[2]*F1)))))))) + (-1.0)*1.0)))))))))))))*(-1.0)*W14[ip]*det;
            // Number of operations to compute entry: 45
            A[j] += ((FE0_f2_C0[ip][j]*((((((K_0[0]*F8 + K_0[2]*F9) + (K_0[1]*F5 + K_0[3]*F6)))*F7)*n_01 + (((2.0*((K_0[0]*F5 + K_0[2]*F6)))*F7 + 1.0*((-1.0)*F4)))*n_00)) + FE0_f2_C1[ip][j]*((((((K_0[0]*F8 + K_0[2]*F9) + (K_0[1]*F5 + K_0[3]*F6)))*F7)*n_00 + (((2.0*((K_0[1]*F8 + K_0[3]*F9)))*F7 + 1.0*((-1.0)*F4)))*n_01))))*(-1.0)*W14[ip]*det;
          } // end loop over 'j'
        } // end loop over 'ip'
          break;
        }
      }
      
        break;
      }
    }
    
  }

};


class ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0: public ufc::form
{
public:

  ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0();

  ~ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0() override;

  const char * signature() const final override;

  std::size_t rank() const final override;

  std::size_t num_coefficients() const final override;

  std::size_t original_coefficient_position(std::size_t i) const final override;

  ufc::finite_element * create_coordinate_finite_element() const final override;

  ufc::dofmap * create_coordinate_dofmap() const final override;

  ufc::coordinate_mapping * create_coordinate_mapping() const final override;

  ufc::finite_element * create_finite_element(std::size_t i) const final override;

  ufc::dofmap * create_dofmap(std::size_t i) const final override;

  std::size_t max_cell_subdomain_id() const final override;

  std::size_t max_exterior_facet_subdomain_id() const final override;

  std::size_t max_interior_facet_subdomain_id() const final override;

  std::size_t max_vertex_subdomain_id() const final override;

  std::size_t max_custom_subdomain_id() const final override;

  std::size_t max_cutcell_subdomain_id() const final override;

  std::size_t max_interface_subdomain_id() const final override;

  std::size_t max_overlap_subdomain_id() const final override;

  bool has_cell_integrals() const final override;

  bool has_exterior_facet_integrals() const final override;

  bool has_interior_facet_integrals() const final override;

  bool has_vertex_integrals() const final override;

  bool has_custom_integrals() const final override;

  bool has_cutcell_integrals() const final override;

  bool has_interface_integrals() const final override;

  bool has_overlap_integrals() const final override;

  ufc::cell_integral * create_cell_integral(std::size_t i) const final override;

  ufc::exterior_facet_integral * create_exterior_facet_integral(std::size_t i) const final override;

  ufc::interior_facet_integral * create_interior_facet_integral(std::size_t i) const final override;

  ufc::vertex_integral * create_vertex_integral(std::size_t i) const final override;

  ufc::custom_integral * create_custom_integral(std::size_t i) const final override;

  ufc::cutcell_integral * create_cutcell_integral(std::size_t i) const final override;

  ufc::interface_integral * create_interface_integral(std::size_t i) const final override;

  ufc::overlap_integral * create_overlap_integral(std::size_t i) const final override;

  ufc::cell_integral * create_default_cell_integral() const final override;

  ufc::exterior_facet_integral * create_default_exterior_facet_integral() const final override;

  ufc::interior_facet_integral * create_default_interior_facet_integral() const final override;

  ufc::vertex_integral * create_default_vertex_integral() const final override;

  ufc::custom_integral * create_default_custom_integral() const final override;

  ufc::cutcell_integral * create_default_cutcell_integral() const final override;

  ufc::interface_integral * create_default_interface_integral() const final override;

  ufc::overlap_integral * create_default_overlap_integral() const final override;

};

extern "C" DLL_EXPORT ufc::form * create_ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0()
{
  return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0();
}

ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0() : ufc::form()
{
    // Do nothing
}

ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::~ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0()
{
    // Do nothing
}

const char * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::signature() const
{
    return "bc94fdd456aa9e881076786072d75f71080872db6ecb72f6ec4b4c81196436471d2b0062d76e965595d88ebf1597d8cd2ba6a0706bdff9ad6a9e93aba85c61ac";
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::rank() const
{
    return 1;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::num_coefficients() const
{
    return 6;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::original_coefficient_position(std::size_t i) const
{
    static const std::vector<std::size_t> position({0, 1, 2, 3, 4, 5});
    return position[i];
}

ufc::finite_element * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::create_coordinate_finite_element() const
{
    return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_5();
}

ufc::dofmap * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::create_coordinate_dofmap() const
{
    return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_5();
}

ufc::coordinate_mapping * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::create_coordinate_mapping() const
{
    return nullptr;
}

ufc::finite_element * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::create_finite_element(std::size_t i) const
{
    switch (i)
    {
    case 0:
      {
        return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_7();
        break;
      }
    case 1:
      {
        return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_0();
        break;
      }
    case 2:
      {
        return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_0();
        break;
      }
    case 3:
      {
        return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_1();
        break;
      }
    case 4:
      {
        return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_7();
        break;
      }
    case 5:
      {
        return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_7();
        break;
      }
    case 6:
      {
        return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_finite_element_0();
        break;
      }
    }
    
    return 0;
}

ufc::dofmap * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::create_dofmap(std::size_t i) const
{
    switch (i)
    {
    case 0:
      {
        return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_7();
        break;
      }
    case 1:
      {
        return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_0();
        break;
      }
    case 2:
      {
        return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_0();
        break;
      }
    case 3:
      {
        return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_1();
        break;
      }
    case 4:
      {
        return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_7();
        break;
      }
    case 5:
      {
        return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_7();
        break;
      }
    case 6:
      {
        return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_dofmap_0();
        break;
      }
    }
    
    return 0;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::max_cell_subdomain_id() const
{
    return 3;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::max_exterior_facet_subdomain_id() const
{
    return 0;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::max_interior_facet_subdomain_id() const
{
    return 6;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::max_vertex_subdomain_id() const
{
    return 0;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::max_custom_subdomain_id() const
{
    return 0;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::max_cutcell_subdomain_id() const
{
    return 0;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::max_interface_subdomain_id() const
{
    return 0;
}

std::size_t ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::max_overlap_subdomain_id() const
{
    return 0;
}

bool ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::has_cell_integrals() const
{
    return true;
}

bool ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::has_exterior_facet_integrals() const
{
    return true;
}

bool ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::has_interior_facet_integrals() const
{
    return true;
}

bool ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::has_vertex_integrals() const
{
    return false;
}

bool ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::has_custom_integrals() const
{
    return false;
}

bool ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::has_cutcell_integrals() const
{
    return false;
}

bool ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::has_interface_integrals() const
{
    return false;
}

bool ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::has_overlap_integrals() const
{
    return false;
}

ufc::cell_integral * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::create_cell_integral(std::size_t subdomain_id) const
{
    switch (subdomain_id)
    {
    case 1:
      {
        return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_cell_integral_0_1();
        break;
      }
    case 2:
      {
        return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_cell_integral_0_2();
        break;
      }
    }
    
    return 0;
}

ufc::exterior_facet_integral * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::create_exterior_facet_integral(std::size_t subdomain_id) const
{
    return 0;
}

ufc::interior_facet_integral * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::create_interior_facet_integral(std::size_t subdomain_id) const
{
    switch (subdomain_id)
    {
    case 5:
      {
        return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_interior_facet_integral_0_5();
        break;
      }
    }
    
    return 0;
}

ufc::vertex_integral * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::create_vertex_integral(std::size_t subdomain_id) const
{
    return 0;
}

ufc::custom_integral * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::create_custom_integral(std::size_t subdomain_id) const
{
    return 0;
}

ufc::cutcell_integral * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::create_cutcell_integral(std::size_t subdomain_id) const
{
    return 0;
}

ufc::interface_integral * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::create_interface_integral(std::size_t subdomain_id) const
{
    return 0;
}

ufc::overlap_integral * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::create_overlap_integral(std::size_t subdomain_id) const
{
    return 0;
}

ufc::cell_integral * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::create_default_cell_integral() const
{
    return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_cell_integral_0_otherwise();
}

ufc::exterior_facet_integral * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::create_default_exterior_facet_integral() const
{
    return new ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_exterior_facet_integral_0_otherwise();
}

ufc::interior_facet_integral * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::create_default_interior_facet_integral() const
{
    return 0;
}

ufc::vertex_integral * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::create_default_vertex_integral() const
{
    return 0;
}

ufc::custom_integral * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::create_default_custom_integral() const
{
    return 0;
}

ufc::cutcell_integral * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::create_default_cutcell_integral() const
{
    return 0;
}

ufc::interface_integral * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::create_default_interface_integral() const
{
    return 0;
}

ufc::overlap_integral * ffc_form_f162f21105d2dab56e9fa98ec596e32e1f4ea9d0_form_0::create_default_overlap_integral() const
{
    return 0;
}

